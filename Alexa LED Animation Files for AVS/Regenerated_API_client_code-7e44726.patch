From 7e447263003aed67ef49e4155600e74728f05fc7 Mon Sep 17 00:00:00 2001
From: Dmitry Bryukov <v-dmbryu@microsoft.com>
Date: Fri, 3 Mar 2017 19:20:27 +0300
Subject: [PATCH] Regenerated API client code

---
 src/commands/apps/list.ts                                                |     2 +-
 src/commands/apps/set-current.ts                                         |     2 +-
 src/util/apis/generated/mobileCenterClient.d.ts                          |     4 +++-
 src/util/apis/generated/mobileCenterClient.js                            |     4 +++-
 src/util/apis/generated/models/app.js                                    |     4 ++--
 src/util/apis/generated/models/appInvitationDetailResponse.js            |     8 ++++++--
 src/util/apis/generated/models/appRequest.js                             |     4 ++--
 src/util/apis/generated/models/appResponse.js                            |    14 ++++++++++++--
 src/util/apis/generated/models/basicReleaseDetails.js                    |     4 ++--
 src/util/apis/generated/models/buildLog.js                               |    54 ++++++++++++++++++++++++++++++++++++++++++++++++++++++
 src/util/apis/generated/models/crashGroup.js                             |     5 +++++
 src/util/apis/generated/models/deployment.js                             |    97 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 src/util/apis/generated/models/deploymentModification.js                 |    45 +++++++++++++++++++++++++++++++++++++++++++++
 src/util/apis/generated/models/distributionGroupResponse.js              |    11 +++++++++++
 src/util/apis/generated/models/distributionRequest.js                    |    54 ++++++++++++++++++++++++++++++++++++++++++++++++++++++
 src/util/apis/generated/models/distributionResponse.js                   |    54 ++++++++++++++++++++++++++++++++++++++++++++++++++++++
 src/util/apis/generated/models/downloadContainer.js                      |    47 +++++++++++++++++++++++++++++++++++++++++++++++
 src/util/apis/generated/models/failureResponse.js                        |    56 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 src/util/apis/generated/models/index.d.ts                                |
 src/util/apis/generated/models/index.js                                  |    36 ++++++++++++++++++++++++++++++++----
 src/util/apis/generated/models/liveUpdateRelease.js                      |   163 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 src/util/apis/generated/models/liveUpdateReleaseMetric.js                |    81 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 src/util/apis/generated/models/liveUpdateReleaseModification.js          |    81 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 src/util/apis/generated/models/liveUpdateStatusMetricMetadata.js         |    90 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 src/util/apis/generated/models/missingSymbol.js                          |    75 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 src/util/apis/generated/models/missingSymbolCrashGroup.js                |   123 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 src/util/apis/generated/models/missingSymbolCrashGroupsResponse.js       |    68 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 src/util/apis/generated/models/notificationConfig.js                     |    49 +++++++++++++++++++++++++++++++++++++++++++++++++
 src/util/apis/generated/models/notificationConfigResult.js               |    60 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 src/util/apis/generated/models/notificationDefinition.js                 |   117 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 src/util/apis/generated/models/notificationDetailsResult.js              |   152 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 src/util/apis/generated/models/notificationResult.js                     |   115 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 src/util/apis/generated/models/notificationSendSucceededResult.js        |    47 +++++++++++++++++++++++++++++++++++++++++++++++
 src/util/apis/generated/models/notificationTarget.js                     |    49 +++++++++++++++++++++++++++++++++++++++++++++++++
 src/util/apis/generated/models/notificationsListResult.js                |    77 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 src/util/apis/generated/models/orgPatchRequest.js                        |    54 ------------------------------------------------------
 src/util/apis/generated/models/organizationPatchRequest.js               |    54 ++++++++++++++++++++++++++++++++++++++++++++++++++++++
 src/util/apis/generated/models/organizationResponse.js                   |     7 ++++---
 src/util/apis/generated/models/organizationUserPatchRequest.js           |    46 ++++++++++++++++++++++++++++++++++++++++++++++
 src/util/apis/generated/models/organizationUserResponse.js               |    18 ++++++++++++++++++
 src/util/apis/generated/models/reasonStackFrame.js                       |    18 ++++++++++++++++++
 src/util/apis/generated/models/releaseDetails.js                         |    14 ++++++++++++--
 src/util/apis/generated/models/sourceRepository.js                       |     9 +++++++++
 src/util/apis/generated/models/userEmailRequest.js                       |    45 +++++++++++++++++++++++++++++++++++++++++++++
 src/util/apis/generated/models/userInvitationPermissionsUpdateRequest.js |    55 +++++++++++++++++++++++++++++++++++++++++++++++++++++++
 src/util/apis/generated/operations/account.js                            |   435 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 src/util/apis/generated/operations/analytics.js                          |   222 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 src/util/apis/generated/operations/buildOperations.js                    |   211 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++----
 src/util/apis/generated/operations/codepush.js                           |
 src/util/apis/generated/operations/crashOperations.js                    |   278 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 src/util/apis/generated/operations/deprecated.js                         |   204 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 src/util/apis/generated/operations/distribute.js                         |
 src/util/apis/generated/operations/index.d.ts                            |
 src/util/apis/generated/operations/index.js                              |     4 +++-
 swagger/bifrost.swagger.before.json                                      |
 swagger/bifrost.swagger.json                                             |
 56 files changed, 20107 insertions(+), 14149 deletions(-)
 create mode 100644 src/util/apis/generated/models/buildLog.js
 create mode 100644 src/util/apis/generated/models/deployment.js
 create mode 100644 src/util/apis/generated/models/deploymentModification.js
 create mode 100644 src/util/apis/generated/models/distributionRequest.js
 create mode 100644 src/util/apis/generated/models/distributionResponse.js
 create mode 100644 src/util/apis/generated/models/downloadContainer.js
 create mode 100644 src/util/apis/generated/models/failureResponse.js
 create mode 100644 src/util/apis/generated/models/liveUpdateRelease.js
 create mode 100644 src/util/apis/generated/models/liveUpdateReleaseMetric.js
 create mode 100644 src/util/apis/generated/models/liveUpdateReleaseModification.js
 create mode 100644 src/util/apis/generated/models/liveUpdateStatusMetricMetadata.js
 create mode 100644 src/util/apis/generated/models/missingSymbol.js
 create mode 100644 src/util/apis/generated/models/missingSymbolCrashGroup.js
 create mode 100644 src/util/apis/generated/models/missingSymbolCrashGroupsResponse.js
 create mode 100644 src/util/apis/generated/models/notificationConfig.js
 create mode 100644 src/util/apis/generated/models/notificationConfigResult.js
 create mode 100644 src/util/apis/generated/models/notificationDefinition.js
 create mode 100644 src/util/apis/generated/models/notificationDetailsResult.js
 create mode 100644 src/util/apis/generated/models/notificationResult.js
 create mode 100644 src/util/apis/generated/models/notificationSendSucceededResult.js
 create mode 100644 src/util/apis/generated/models/notificationTarget.js
 create mode 100644 src/util/apis/generated/models/notificationsListResult.js
 delete mode 100644 src/util/apis/generated/models/orgPatchRequest.js
 create mode 100644 src/util/apis/generated/models/organizationPatchRequest.js
 create mode 100644 src/util/apis/generated/models/organizationUserPatchRequest.js
 create mode 100644 src/util/apis/generated/models/userEmailRequest.js
 create mode 100644 src/util/apis/generated/models/userInvitationPermissionsUpdateRequest.js
 create mode 100644 src/util/apis/generated/operations/codepush.js
 create mode 100644 src/util/apis/generated/operations/deprecated.js

diff --git a/src/commands/apps/list.ts b/src/commands/apps/list.ts
index a852c75..fdfaf59 100644
--- a/src/commands/apps/list.ts
+++ b/src/commands/apps/list.ts
@@ -24,7 +24,7 @@ export default class AppsListCommand extends Command {
 
   async run(client: MobileCenterClient): Promise<CommandResult> {
     const appsResponse = await out.progress("Getting app list ...",
-      clientRequest<models.AppResponse[]>(cb => client.account.getApps(cb)));
+      clientRequest<models.AppResponse[]>(cb => client.account.getMemberApps(cb)));
 
     if (appsResponse.response.statusCode >= 400) {
       return failure(ErrorCodes.Exception, "Unknown error when loading apps");
diff --git a/src/commands/apps/set-current.ts b/src/commands/apps/set-current.ts
index d1f9333..2abc896 100644
--- a/src/commands/apps/set-current.ts
+++ b/src/commands/apps/set-current.ts
@@ -22,7 +22,7 @@ export default class SetCurrentAppCommand extends Command {
     }
 
     let apps = await out.progress("Reading available apps...",
-      clientCall<models.AppResponse[]>(cb => client.account.getApps(cb)));
+      clientCall<models.AppResponse[]>(cb => client.account.getMemberApps(cb)));
 
     let found = apps.find(app => app.name === newDefault.appName && app.owner.name === newDefault.ownerName);
     if (!found) {
diff --git a/src/util/apis/generated/mobileCenterClient.d.ts b/src/util/apis/generated/mobileCenterClient.d.ts
index 1ca8149..bca8071 100644
--- a/src/util/apis/generated/mobileCenterClient.d.ts
+++ b/src/util/apis/generated/mobileCenterClient.d.ts
@@ -33,6 +33,7 @@ declare class MobileCenterClient {
 
     // Operation groups
     account: operations.Account;
+    distribute: operations.Distribute;
     crashOperations: operations.CrashOperations;
     buildOperations: operations.BuildOperations;
     test: operations.Test;
@@ -40,7 +41,8 @@ declare class MobileCenterClient {
     azure: operations.Azure;
     push: operations.Push;
     identity: operations.Identity;
-    distribute: operations.Distribute;
+    deprecated: operations.Deprecated;
+    codepush: operations.Codepush;
     analytics: operations.Analytics;
     }
 
diff --git a/src/util/apis/generated/mobileCenterClient.js b/src/util/apis/generated/mobileCenterClient.js
index 43e831a..e70dd12 100644
--- a/src/util/apis/generated/mobileCenterClient.js
+++ b/src/util/apis/generated/mobileCenterClient.js
@@ -51,6 +51,7 @@ function MobileCenterClient(credentials, baseUri, options) {
   this.credentials = credentials;
 
   this.account = new operations.Account(this);
+  this.distribute = new operations.Distribute(this);
   this.crashOperations = new operations.CrashOperations(this);
   this.buildOperations = new operations.BuildOperations(this);
   this.test = new operations.Test(this);
@@ -58,7 +59,8 @@ function MobileCenterClient(credentials, baseUri, options) {
   this.azure = new operations.Azure(this);
   this.push = new operations.Push(this);
   this.identity = new operations.Identity(this);
-  this.distribute = new operations.Distribute(this);
+  this.deprecated = new operations.Deprecated(this);
+  this.codepush = new operations.Codepush(this);
   this.analytics = new operations.Analytics(this);
   this.models = models;
   msRest.addSerializationMixin(this);
diff --git a/src/util/apis/generated/models/app.js b/src/util/apis/generated/models/app.js
index f4f7869..9fc6636 100644
--- a/src/util/apis/generated/models/app.js
+++ b/src/util/apis/generated/models/app.js
@@ -18,10 +18,10 @@
  * @member {string} [name] The name of the app used in URLs
  * 
  * @member {string} os The OS the app will be running on. Possible values
- * include: 'iOS', 'Android'
+ * include: 'iOS', 'Android', 'Windows'
  * 
  * @member {string} platform The platform of the app. Possible values include:
- * 'Objective-C-Swift', 'Java', 'React-Native', 'Xamarin'
+ * 'Java', 'Objective-C-Swift', 'React-Native', 'UWP', 'Xamarin'
  * 
  */
 function App() {
diff --git a/src/util/apis/generated/models/appInvitationDetailResponse.js b/src/util/apis/generated/models/appInvitationDetailResponse.js
index 84dc405..2a1c2b9 100644
--- a/src/util/apis/generated/models/appInvitationDetailResponse.js
+++ b/src/util/apis/generated/models/appInvitationDetailResponse.js
@@ -35,7 +35,7 @@ var models = require('./index');
  * @member {string} [app.name] The name of the app used in URLs
  * 
  * @member {string} [app.os] The OS the app will be running on. Possible
- * values include: 'iOS', 'Android'
+ * values include: 'iOS', 'Android', 'Windows'
  * 
  * @member {object} [app.owner]
  * 
@@ -54,7 +54,11 @@ var models = require('./index');
  * 'user'. Possible values include: 'org', 'user'
  * 
  * @member {string} [app.platform] The platform of the app. Possible values
- * include: 'Objective-C-Swift', 'Java', 'React-Native', 'Xamarin'
+ * include: 'Java', 'Objective-C-Swift', 'React-Native', 'UWP', 'Xamarin'
+ * 
+ * @member {string} [app.origin] The origin of this app can only be
+ * mobile-center or hockeyapp for now. Possible values include:
+ * 'mobile-center', 'hockeyapp'
  * 
  * @member {string} email The email address of the invited user
  * 
diff --git a/src/util/apis/generated/models/appRequest.js b/src/util/apis/generated/models/appRequest.js
index 5fccb52..4faa58a 100644
--- a/src/util/apis/generated/models/appRequest.js
+++ b/src/util/apis/generated/models/appRequest.js
@@ -18,10 +18,10 @@
  * @member {string} [name] The name of the app used in URLs
  * 
  * @member {string} os The OS the app will be running on. Possible values
- * include: 'iOS', 'Android'
+ * include: 'iOS', 'Android', 'Windows'
  * 
  * @member {string} platform The platform of the app. Possible values include:
- * 'Objective-C-Swift', 'Java', 'React-Native', 'Xamarin'
+ * 'Java', 'Objective-C-Swift', 'React-Native', 'UWP', 'Xamarin'
  * 
  */
 function AppRequest() {
diff --git a/src/util/apis/generated/models/appResponse.js b/src/util/apis/generated/models/appResponse.js
index d89f1c7..20d4124 100644
--- a/src/util/apis/generated/models/appResponse.js
+++ b/src/util/apis/generated/models/appResponse.js
@@ -31,7 +31,7 @@ var models = require('./index');
  * @member {string} name The name of the app used in URLs
  * 
  * @member {string} os The OS the app will be running on. Possible values
- * include: 'iOS', 'Android'
+ * include: 'iOS', 'Android', 'Windows'
  * 
  * @member {object} owner
  * 
@@ -50,7 +50,10 @@ var models = require('./index');
  * 'user'. Possible values include: 'org', 'user'
  * 
  * @member {string} platform The platform of the app. Possible values include:
- * 'Objective-C-Swift', 'Java', 'React-Native', 'Xamarin'
+ * 'Java', 'Objective-C-Swift', 'React-Native', 'UWP', 'Xamarin'
+ * 
+ * @member {string} origin The origin of this app can only be mobile-center or
+ * hockeyapp for now. Possible values include: 'mobile-center', 'hockeyapp'
  * 
  */
 function AppResponse() {
@@ -140,6 +143,13 @@ AppResponse.prototype.mapper = function () {
           type: {
             name: 'String'
           }
+        },
+        origin: {
+          required: true,
+          serializedName: 'origin',
+          type: {
+            name: 'String'
+          }
         }
       }
     }
diff --git a/src/util/apis/generated/models/basicReleaseDetails.js b/src/util/apis/generated/models/basicReleaseDetails.js
index af50537..6d67fa1 100644
--- a/src/util/apis/generated/models/basicReleaseDetails.js
+++ b/src/util/apis/generated/models/basicReleaseDetails.js
@@ -16,7 +16,7 @@ var util = require('util');
  * @constructor
  * Basic information on a release
  *
- * @member {string} [id] ID identifying this unique release.
+ * @member {number} [id] ID identifying this unique release.
  * 
  * @member {string} [version] The release's version.<br>
  * For iOS: CFBundleVersion from info.plist.<br>
@@ -54,7 +54,7 @@ BasicReleaseDetails.prototype.mapper = function () {
           required: false,
           serializedName: 'id',
           type: {
-            name: 'String'
+            name: 'Number'
           }
         },
         version: {
diff --git a/src/util/apis/generated/models/buildLog.js b/src/util/apis/generated/models/buildLog.js
new file mode 100644
index 0000000..cf7e8a9
--- /dev/null
+++ b/src/util/apis/generated/models/buildLog.js
@@ -0,0 +1,54 @@
+/*
+ * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
+ * Changes may cause incorrect behavior and will be lost if the code is
+ * regenerated.
+ */
+
+'use strict';
+
+var util = require('util');
+
+/**
+ * @class
+ * Initializes a new instance of the BuildLog class.
+ * @constructor
+ * @member {array} [value]
+ * 
+ */
+function BuildLog() {
+}
+
+/**
+ * Defines the metadata of BuildLog
+ *
+ * @returns {object} metadata of BuildLog
+ *
+ */
+BuildLog.prototype.mapper = function () {
+  return {
+    required: false,
+    serializedName: 'BuildLog',
+    type: {
+      name: 'Composite',
+      className: 'BuildLog',
+      modelProperties: {
+        value: {
+          required: false,
+          serializedName: 'value',
+          type: {
+            name: 'Sequence',
+            element: {
+                required: false,
+                serializedName: 'StringElementType',
+                type: {
+                  name: 'String'
+                }
+            }
+          }
+        }
+      }
+    }
+  };
+};
+
+module.exports = BuildLog;
diff --git a/src/util/apis/generated/models/crashGroup.js b/src/util/apis/generated/models/crashGroup.js
index e792388..ebd1454 100644
--- a/src/util/apis/generated/models/crashGroup.js
+++ b/src/util/apis/generated/models/crashGroup.js
@@ -58,6 +58,11 @@ var models = require('./index');
  * 
  * @member {string} [reasonFrame.methodParams] parameters of the frames method
  * 
+ * @member {string} [reasonFrame.exceptionType] Exception type.
+ * 
+ * @member {string} [reasonFrame.osExceptionType] OS exception type. (aka.
+ * SIGNAL)
+ * 
  * @member {boolean} fatal Crash or handled exception
  * 
  */
diff --git a/src/util/apis/generated/models/deployment.js b/src/util/apis/generated/models/deployment.js
new file mode 100644
index 0000000..15c4c95
--- /dev/null
+++ b/src/util/apis/generated/models/deployment.js
@@ -0,0 +1,97 @@
+/*
+ * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
+ * Changes may cause incorrect behavior and will be lost if the code is
+ * regenerated.
+ */
+
+'use strict';
+
+var models = require('./index');
+
+/**
+ * @class
+ * Initializes a new instance of the Deployment class.
+ * @constructor
+ * @member {string} [key]
+ * 
+ * @member {string} name
+ * 
+ * @member {object} [latestRelease]
+ * 
+ * @member {string} [latestRelease.targetBinaryRange]
+ * 
+ * @member {string} [latestRelease.blobUrl]
+ * 
+ * @member {string} [latestRelease.description]
+ * 
+ * @member {boolean} [latestRelease.isDisabled]
+ * 
+ * @member {boolean} [latestRelease.isMandatory]
+ * 
+ * @member {string} [latestRelease.label]
+ * 
+ * @member {string} [latestRelease.originalDeployment] Set on 'Promote'
+ * 
+ * @member {string} [latestRelease.originalLabel] Set on 'Promote' and
+ * 'Rollback'
+ * 
+ * @member {string} [latestRelease.hash]
+ * 
+ * @member {string} [latestRelease.releasedBy]
+ * 
+ * @member {string} [latestRelease.releaseMethod] The release method is
+ * unknown if unspecified. Possible values include: 'Upload', 'Promote',
+ * 'Rollback'
+ * 
+ * @member {number} [latestRelease.rollout]
+ * 
+ * @member {number} [latestRelease.size]
+ * 
+ * @member {number} [latestRelease.uploadTime]
+ * 
+ */
+function Deployment() {
+}
+
+/**
+ * Defines the metadata of Deployment
+ *
+ * @returns {object} metadata of Deployment
+ *
+ */
+Deployment.prototype.mapper = function () {
+  return {
+    required: false,
+    serializedName: 'Deployment',
+    type: {
+      name: 'Composite',
+      className: 'Deployment',
+      modelProperties: {
+        key: {
+          required: false,
+          serializedName: 'key',
+          type: {
+            name: 'String'
+          }
+        },
+        name: {
+          required: true,
+          serializedName: 'name',
+          type: {
+            name: 'String'
+          }
+        },
+        latestRelease: {
+          required: false,
+          serializedName: 'latest_release',
+          type: {
+            name: 'Composite',
+            className: 'LiveUpdateRelease'
+          }
+        }
+      }
+    }
+  };
+};
+
+module.exports = Deployment;
diff --git a/src/util/apis/generated/models/deploymentModification.js b/src/util/apis/generated/models/deploymentModification.js
new file mode 100644
index 0000000..09b9c46
--- /dev/null
+++ b/src/util/apis/generated/models/deploymentModification.js
@@ -0,0 +1,45 @@
+/*
+ * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
+ * Changes may cause incorrect behavior and will be lost if the code is
+ * regenerated.
+ */
+
+'use strict';
+
+/**
+ * @class
+ * Initializes a new instance of the DeploymentModification class.
+ * @constructor
+ * @member {string} [name]
+ * 
+ */
+function DeploymentModification() {
+}
+
+/**
+ * Defines the metadata of DeploymentModification
+ *
+ * @returns {object} metadata of DeploymentModification
+ *
+ */
+DeploymentModification.prototype.mapper = function () {
+  return {
+    required: false,
+    serializedName: 'DeploymentModification',
+    type: {
+      name: 'Composite',
+      className: 'DeploymentModification',
+      modelProperties: {
+        name: {
+          required: false,
+          serializedName: 'name',
+          type: {
+            name: 'String'
+          }
+        }
+      }
+    }
+  };
+};
+
+module.exports = DeploymentModification;
diff --git a/src/util/apis/generated/models/distributionGroupResponse.js b/src/util/apis/generated/models/distributionGroupResponse.js
index e8c3116..f3507c7 100644
--- a/src/util/apis/generated/models/distributionGroupResponse.js
+++ b/src/util/apis/generated/models/distributionGroupResponse.js
@@ -14,6 +14,10 @@
  * 
  * @member {string} name The name of the distribution group used in URLs
  * 
+ * @member {string} origin Indicates the origin source of the distribution
+ * group, it can be mobile-center or hockeyapp for now. Possible values
+ * include: 'mobile-center', 'hockeyapp'
+ * 
  */
 function DistributionGroupResponse() {
 }
@@ -45,6 +49,13 @@ DistributionGroupResponse.prototype.mapper = function () {
           type: {
             name: 'String'
           }
+        },
+        origin: {
+          required: true,
+          serializedName: 'origin',
+          type: {
+            name: 'String'
+          }
         }
       }
     }
diff --git a/src/util/apis/generated/models/distributionRequest.js b/src/util/apis/generated/models/distributionRequest.js
new file mode 100644
index 0000000..e9b1a78
--- /dev/null
+++ b/src/util/apis/generated/models/distributionRequest.js
@@ -0,0 +1,54 @@
+/*
+ * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
+ * Changes may cause incorrect behavior and will be lost if the code is
+ * regenerated.
+ */
+
+'use strict';
+
+/**
+ * @class
+ * Initializes a new instance of the DistributionRequest class.
+ * @constructor
+ * @member {string} distributionGroupId The distribution group ID
+ * 
+ * @member {string} [releaseNotes] The release notes
+ * 
+ */
+function DistributionRequest() {
+}
+
+/**
+ * Defines the metadata of DistributionRequest
+ *
+ * @returns {object} metadata of DistributionRequest
+ *
+ */
+DistributionRequest.prototype.mapper = function () {
+  return {
+    required: false,
+    serializedName: 'DistributionRequest',
+    type: {
+      name: 'Composite',
+      className: 'DistributionRequest',
+      modelProperties: {
+        distributionGroupId: {
+          required: true,
+          serializedName: 'distributionGroupId',
+          type: {
+            name: 'String'
+          }
+        },
+        releaseNotes: {
+          required: false,
+          serializedName: 'releaseNotes',
+          type: {
+            name: 'String'
+          }
+        }
+      }
+    }
+  };
+};
+
+module.exports = DistributionRequest;
diff --git a/src/util/apis/generated/models/distributionResponse.js b/src/util/apis/generated/models/distributionResponse.js
new file mode 100644
index 0000000..6dd6459
--- /dev/null
+++ b/src/util/apis/generated/models/distributionResponse.js
@@ -0,0 +1,54 @@
+/*
+ * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
+ * Changes may cause incorrect behavior and will be lost if the code is
+ * regenerated.
+ */
+
+'use strict';
+
+/**
+ * @class
+ * Initializes a new instance of the DistributionResponse class.
+ * @constructor
+ * @member {string} [status] Status of the Request
+ * 
+ * @member {string} [uploadId] A unique ID of the upload
+ * 
+ */
+function DistributionResponse() {
+}
+
+/**
+ * Defines the metadata of DistributionResponse
+ *
+ * @returns {object} metadata of DistributionResponse
+ *
+ */
+DistributionResponse.prototype.mapper = function () {
+  return {
+    required: false,
+    serializedName: 'DistributionResponse',
+    type: {
+      name: 'Composite',
+      className: 'DistributionResponse',
+      modelProperties: {
+        status: {
+          required: false,
+          serializedName: 'status',
+          type: {
+            name: 'String'
+          }
+        },
+        uploadId: {
+          required: false,
+          serializedName: 'upload_id',
+          type: {
+            name: 'String'
+          }
+        }
+      }
+    }
+  };
+};
+
+module.exports = DistributionResponse;
diff --git a/src/util/apis/generated/models/downloadContainer.js b/src/util/apis/generated/models/downloadContainer.js
new file mode 100644
index 0000000..9d0d356
--- /dev/null
+++ b/src/util/apis/generated/models/downloadContainer.js
@@ -0,0 +1,47 @@
+/*
+ * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
+ * Changes may cause incorrect behavior and will be lost if the code is
+ * regenerated.
+ */
+
+'use strict';
+
+/**
+ * @class
+ * Initializes a new instance of the DownloadContainer class.
+ * @constructor
+ * A download reference
+ *
+ * @member {string} uri Download URI
+ * 
+ */
+function DownloadContainer() {
+}
+
+/**
+ * Defines the metadata of DownloadContainer
+ *
+ * @returns {object} metadata of DownloadContainer
+ *
+ */
+DownloadContainer.prototype.mapper = function () {
+  return {
+    required: false,
+    serializedName: 'DownloadContainer',
+    type: {
+      name: 'Composite',
+      className: 'DownloadContainer',
+      modelProperties: {
+        uri: {
+          required: true,
+          serializedName: 'uri',
+          type: {
+            name: 'String'
+          }
+        }
+      }
+    }
+  };
+};
+
+module.exports = DownloadContainer;
diff --git a/src/util/apis/generated/models/failureResponse.js b/src/util/apis/generated/models/failureResponse.js
new file mode 100644
index 0000000..b90d9af
--- /dev/null
+++ b/src/util/apis/generated/models/failureResponse.js
@@ -0,0 +1,56 @@
+/*
+ * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
+ * Changes may cause incorrect behavior and will be lost if the code is
+ * regenerated.
+ */
+
+'use strict';
+
+/**
+ * @class
+ * Initializes a new instance of the FailureResponse class.
+ * @constructor
+ * failure response object
+ *
+ * @member {string} code
+ * 
+ * @member {string} message
+ * 
+ */
+function FailureResponse() {
+}
+
+/**
+ * Defines the metadata of FailureResponse
+ *
+ * @returns {object} metadata of FailureResponse
+ *
+ */
+FailureResponse.prototype.mapper = function () {
+  return {
+    required: false,
+    serializedName: 'FailureResponse',
+    type: {
+      name: 'Composite',
+      className: 'FailureResponse',
+      modelProperties: {
+        code: {
+          required: true,
+          serializedName: 'code',
+          type: {
+            name: 'String'
+          }
+        },
+        message: {
+          required: true,
+          serializedName: 'message',
+          type: {
+            name: 'String'
+          }
+        }
+      }
+    }
+  };
+};
+
+module.exports = FailureResponse;
diff --git a/src/util/apis/generated/models/index.d.ts b/src/util/apis/generated/models/index.d.ts
index dea4d3b..aac5cc9 100644
--- a/src/util/apis/generated/models/index.d.ts
+++ b/src/util/apis/generated/models/index.d.ts
@@ -160,10 +160,10 @@ export interface AppPatchRequest {
  * @member {string} [name] The name of the app used in URLs
  * 
  * @member {string} os The OS the app will be running on. Possible values
- * include: 'iOS', 'Android'
+ * include: 'iOS', 'Android', 'Windows'
  * 
  * @member {string} platform The platform of the app. Possible values include:
- * 'Objective-C-Swift', 'Java', 'React-Native', 'Xamarin'
+ * 'Java', 'Objective-C-Swift', 'React-Native', 'UWP', 'Xamarin'
  * 
  */
 export interface AppRequest {
@@ -258,16 +258,16 @@ export interface GrantAdminRoleRequest {
 
 /**
  * @class
- * Initializes a new instance of the OrgPatchRequest class.
+ * Initializes a new instance of the OrganizationPatchRequest class.
  * @constructor
- * @member {string} [description] The organization's description
- * 
  * @member {string} [displayName] The full (friendly) name of the organization.
  * 
+ * @member {string} [name] The name of the organization used in URLs
+ * 
  */
-export interface OrgPatchRequest {
-  description?: string;
+export interface OrganizationPatchRequest {
   displayName?: string;
+  name?: string;
 }
 
 /**
@@ -289,6 +289,41 @@ export interface OrganizationRequest {
 
 /**
  * @class
+ * Initializes a new instance of the OrganizationUserPatchRequest class.
+ * @constructor
+ * @member {string} [role] The user's role in the organizatiion. Possible
+ * values include: 'admin', 'collaborator'
+ * 
+ */
+export interface OrganizationUserPatchRequest {
+  role?: string;
+}
+
+/**
+ * @class
+ * Initializes a new instance of the UserInvitationPermissionsUpdateRequest class.
+ * @constructor
+ * @member {array} permissions The permissions the user has for the app in the
+ * invitation
+ * 
+ */
+export interface UserInvitationPermissionsUpdateRequest {
+  permissions: string[];
+}
+
+/**
+ * @class
+ * Initializes a new instance of the UserEmailRequest class.
+ * @constructor
+ * @member {string} userEmail The user's email address'
+ * 
+ */
+export interface UserEmailRequest {
+  userEmail: string;
+}
+
+/**
+ * @class
  * Initializes a new instance of the UserUpdateRequest class.
  * @constructor
  * @member {string} [displayName] The full name of the user. Might for example
@@ -345,7 +380,7 @@ export interface UserUpdateRequestInternal {
  * @member {string} [app.name] The name of the app used in URLs
  * 
  * @member {string} [app.os] The OS the app will be running on. Possible
- * values include: 'iOS', 'Android'
+ * values include: 'iOS', 'Android', 'Windows'
  * 
  * @member {object} [app.owner]
  * 
@@ -364,7 +399,11 @@ export interface UserUpdateRequestInternal {
  * 'user'. Possible values include: 'org', 'user'
  * 
  * @member {string} [app.platform] The platform of the app. Possible values
- * include: 'Objective-C-Swift', 'Java', 'React-Native', 'Xamarin'
+ * include: 'Java', 'Objective-C-Swift', 'React-Native', 'UWP', 'Xamarin'
+ * 
+ * @member {string} [app.origin] The origin of this app can only be
+ * mobile-center or hockeyapp for now. Possible values include:
+ * 'mobile-center', 'hockeyapp'
  * 
  * @member {string} email The email address of the invited user
  * 
@@ -424,7 +463,7 @@ export interface AppInvitationDetailResponse {
  * @member {string} name The name of the app used in URLs
  * 
  * @member {string} os The OS the app will be running on. Possible values
- * include: 'iOS', 'Android'
+ * include: 'iOS', 'Android', 'Windows'
  * 
  * @member {object} owner
  * 
@@ -443,7 +482,10 @@ export interface AppInvitationDetailResponse {
  * 'user'. Possible values include: 'org', 'user'
  * 
  * @member {string} platform The platform of the app. Possible values include:
- * 'Objective-C-Swift', 'Java', 'React-Native', 'Xamarin'
+ * 'Java', 'Objective-C-Swift', 'React-Native', 'UWP', 'Xamarin'
+ * 
+ * @member {string} origin The origin of this app can only be mobile-center or
+ * hockeyapp for now. Possible values include: 'mobile-center', 'hockeyapp'
  * 
  */
 export interface AppResponse {
@@ -457,6 +499,7 @@ export interface AppResponse {
   os: string;
   owner: Owner;
   platform: string;
+  origin: string;
 }
 
 /**
@@ -524,10 +567,15 @@ export interface UserProfileResponse {
  * 
  * @member {string} name The name of the distribution group used in URLs
  * 
+ * @member {string} origin Indicates the origin source of the distribution
+ * group, it can be mobile-center or hockeyapp for now. Possible values
+ * include: 'mobile-center', 'hockeyapp'
+ * 
  */
 export interface DistributionGroupResponse {
   id: string;
   name: string;
+  origin: string;
 }
 
 /**
@@ -676,7 +724,8 @@ export interface OrgNameAvailabilityResponse {
  * @class
  * Initializes a new instance of the OrganizationResponse class.
  * @constructor
- * @member {string} id The unique id (UUID) of the organization
+ * @member {string} collaboratorRole The role the current user has within the
+ * organization
  * 
  * @member {string} displayName The display name of the organization
  * 
@@ -684,7 +733,7 @@ export interface OrgNameAvailabilityResponse {
  * 
  */
 export interface OrganizationResponse {
-  id: string;
+  collaboratorRole: string;
   displayName: string;
   name: string;
 }
@@ -698,13 +747,19 @@ export interface OrganizationResponse {
  * @member {string} displayName The full name of the user. Might for example
  * be first and last name
  * 
+ * @member {string} joinedAt The date when the user joined the organization
+ * 
  * @member {string} name The unique name that is used to identify the user.
  * 
+ * @member {string} role The role the user has within the organization
+ * 
  */
 export interface OrganizationUserResponse {
   email: string;
   displayName: string;
+  joinedAt: string;
   name: string;
+  role: string;
 }
 
 /**
@@ -730,9 +785,25 @@ export interface UserNameAvailabilityResponse {
  *
  * @member {string} [name] The repository name
  * 
+ * @member {object} [cloneUrl] URL used to clone the repository
+ * 
  */
 export interface SourceRepository {
   name?: string;
+  cloneUrl?: any;
+}
+
+/**
+ * @class
+ * Initializes a new instance of the DownloadContainer class.
+ * @constructor
+ * A download reference
+ *
+ * @member {string} uri Download URI
+ * 
+ */
+export interface DownloadContainer {
+  uri: string;
 }
 
 /**
@@ -1348,6 +1419,45 @@ export interface BuildPatch {
 
 /**
  * @class
+ * Initializes a new instance of the BuildLog class.
+ * @constructor
+ * @member {array} [value]
+ * 
+ */
+export interface BuildLog {
+  value?: string[];
+}
+
+/**
+ * @class
+ * Initializes a new instance of the DistributionRequest class.
+ * @constructor
+ * @member {string} distributionGroupId The distribution group ID
+ * 
+ * @member {string} [releaseNotes] The release notes
+ * 
+ */
+export interface DistributionRequest {
+  distributionGroupId: string;
+  releaseNotes?: string;
+}
+
+/**
+ * @class
+ * Initializes a new instance of the DistributionResponse class.
+ * @constructor
+ * @member {string} [status] Status of the Request
+ * 
+ * @member {string} [uploadId] A unique ID of the upload
+ * 
+ */
+export interface DistributionResponse {
+  status?: string;
+  uploadId?: string;
+}
+
+/**
+ * @class
  * Initializes a new instance of the ValidationErrorResponse class.
  * @constructor
  * @member {string} id
@@ -1369,7 +1479,7 @@ export interface ValidationErrorResponse {
  * @constructor
  * Basic information on a release
  *
- * @member {string} [id] ID identifying this unique release.
+ * @member {number} [id] ID identifying this unique release.
  * 
  * @member {string} [version] The release's version.<br>
  * For iOS: CFBundleVersion from info.plist.<br>
@@ -1387,7 +1497,7 @@ export interface ValidationErrorResponse {
  * 
  */
 export interface BasicReleaseDetails {
-  id?: string;
+  id?: number;
   version?: string;
   shortVersion?: string;
   uploadedAt?: string;
@@ -1418,7 +1528,7 @@ export interface DistributionGroup {
  * @constructor
  * Details of an uploaded release
  *
- * @member {string} [id] ID identifying this unique release.
+ * @member {number} [id] ID identifying this unique release.
  * 
  * @member {string} [status] OBSOLETE. Will be removed in next version. The
  * availability concept is now replaced with distributed. Any 'available'
@@ -1448,6 +1558,9 @@ export interface DistributionGroup {
  * 
  * @member {string} [minOs] The release's minimum required operating system.
  * 
+ * @member {string} [androidMinApiLevel] The release's minimum required
+ * Android API level.
+ * 
  * @member {string} [fingerprint] MD5 checksum of the release binary.
  * 
  * @member {string} [uploadedAt] UTC time in ISO 8601 format of the uploaded
@@ -1467,7 +1580,7 @@ export interface DistributionGroup {
  * 
  */
 export interface ReleaseDetails {
-  id?: string;
+  id?: number;
   status?: string;
   appName?: string;
   version?: string;
@@ -1476,6 +1589,7 @@ export interface ReleaseDetails {
   provisioningProfileName?: string;
   size?: number;
   minOs?: string;
+  androidMinApiLevel?: string;
   fingerprint?: string;
   uploadedAt?: string;
   downloadUrl?: string;
@@ -1871,82 +1985,32 @@ export interface AppVersion {
 
 /**
  * @class
- * Initializes a new instance of the Stacktrace class.
- * @constructor
- * a stacktrace in a processed and prettyfied way
- *
- * @member {string} [title]
- * 
- * @member {string} [reason]
- * 
- * @member {array} [threads]
- * 
- * @member {object} [exception]
- * 
- * @member {string} [exception.reason] Reason of the exception
- * 
- * @member {string} [exception.type] Type of the exception
- * (NSSomethingException, NullPointerException)
- * 
- * @member {array} [exception.frames] frames of the excetpion
- * 
- * @member {boolean} [exception.relevant] relevant exception (crashed)
- * 
- * @member {array} [exception.innerExceptions]
- * 
- * @member {string} [exception.platform] SDK/Platform this thread is beeing
- * generated from. Possible values include: 'ios', 'android', 'xamarin',
- * 'react-native', 'other'
- * 
- */
-export interface Stacktrace {
-  title?: string;
-  reason?: string;
-  threads?: Thread[];
-  exception?: Exception;
-}
-
-/**
- * @class
- * Initializes a new instance of the Thread class.
+ * Initializes a new instance of the Exception class.
  * @constructor
- * a thread representation
+ * a exception
  *
- * @member {string} title name of the thread
- * 
- * @member {array} frames frames of that thread
- * 
- * @member {object} [exception] potential additional exception happened in
- * that thread (Last Exception Backtrace)
- * 
- * @member {string} [exception.reason] Reason of the exception
- * 
- * @member {string} [exception.type] Type of the exception
- * (NSSomethingException, NullPointerException)
- * 
- * @member {array} [exception.frames] frames of the excetpion
+ * @member {string} [reason] Reason of the exception
  * 
- * @member {boolean} [exception.relevant] relevant exception (crashed)
+ * @member {string} [type] Type of the exception (NSSomethingException,
+ * NullPointerException)
  * 
- * @member {array} [exception.innerExceptions]
+ * @member {array} frames frames of the excetpion
  * 
- * @member {string} [exception.platform] SDK/Platform this thread is beeing
- * generated from. Possible values include: 'ios', 'android', 'xamarin',
- * 'react-native', 'other'
+ * @member {boolean} [relevant] relevant exception (crashed)
  * 
- * @member {boolean} [relevant] Shows if a thread is relevant or not. Is false
- * if all frames are non relevant, otherwise true
+ * @member {array} [innerExceptions]
  * 
  * @member {string} [platform] SDK/Platform this thread is beeing generated
  * from. Possible values include: 'ios', 'android', 'xamarin',
  * 'react-native', 'other'
  * 
  */
-export interface Thread {
-  title: string;
+export interface Exception {
+  reason?: string;
+  type?: string;
   frames: StackFrame[];
-  exception?: Exception;
   relevant?: boolean;
+  innerExceptions?: Exception[];
   platform?: string;
 }
 
@@ -2003,32 +2067,82 @@ export interface StackFrame {
 
 /**
  * @class
- * Initializes a new instance of the Exception class.
+ * Initializes a new instance of the Stacktrace class.
  * @constructor
- * a exception
+ * a stacktrace in a processed and prettyfied way
  *
- * @member {string} [reason] Reason of the exception
+ * @member {string} [title]
  * 
- * @member {string} [type] Type of the exception (NSSomethingException,
- * NullPointerException)
+ * @member {string} [reason]
  * 
- * @member {array} frames frames of the excetpion
+ * @member {array} [threads]
  * 
- * @member {boolean} [relevant] relevant exception (crashed)
+ * @member {object} [exception]
  * 
- * @member {array} [innerExceptions]
+ * @member {string} [exception.reason] Reason of the exception
+ * 
+ * @member {string} [exception.type] Type of the exception
+ * (NSSomethingException, NullPointerException)
+ * 
+ * @member {array} [exception.frames] frames of the excetpion
+ * 
+ * @member {boolean} [exception.relevant] relevant exception (crashed)
+ * 
+ * @member {array} [exception.innerExceptions]
+ * 
+ * @member {string} [exception.platform] SDK/Platform this thread is beeing
+ * generated from. Possible values include: 'ios', 'android', 'xamarin',
+ * 'react-native', 'other'
+ * 
+ */
+export interface Stacktrace {
+  title?: string;
+  reason?: string;
+  threads?: Thread[];
+  exception?: Exception;
+}
+
+/**
+ * @class
+ * Initializes a new instance of the Thread class.
+ * @constructor
+ * a thread representation
+ *
+ * @member {string} title name of the thread
+ * 
+ * @member {array} frames frames of that thread
+ * 
+ * @member {object} [exception] potential additional exception happened in
+ * that thread (Last Exception Backtrace)
+ * 
+ * @member {string} [exception.reason] Reason of the exception
+ * 
+ * @member {string} [exception.type] Type of the exception
+ * (NSSomethingException, NullPointerException)
+ * 
+ * @member {array} [exception.frames] frames of the excetpion
+ * 
+ * @member {boolean} [exception.relevant] relevant exception (crashed)
+ * 
+ * @member {array} [exception.innerExceptions]
+ * 
+ * @member {string} [exception.platform] SDK/Platform this thread is beeing
+ * generated from. Possible values include: 'ios', 'android', 'xamarin',
+ * 'react-native', 'other'
+ * 
+ * @member {boolean} [relevant] Shows if a thread is relevant or not. Is false
+ * if all frames are non relevant, otherwise true
  * 
  * @member {string} [platform] SDK/Platform this thread is beeing generated
  * from. Possible values include: 'ios', 'android', 'xamarin',
  * 'react-native', 'other'
  * 
  */
-export interface Exception {
-  reason?: string;
-  type?: string;
+export interface Thread {
+  title: string;
   frames: StackFrame[];
+  exception?: Exception;
   relevant?: boolean;
-  innerExceptions?: Exception[];
   platform?: string;
 }
 
@@ -2060,6 +2174,10 @@ export interface Exception {
  * 
  * @member {string} [methodParams] parameters of the frames method
  * 
+ * @member {string} [exceptionType] Exception type.
+ * 
+ * @member {string} [osExceptionType] OS exception type. (aka. SIGNAL)
+ * 
  */
 export interface ReasonStackFrame {
   className?: string;
@@ -2072,6 +2190,8 @@ export interface ReasonStackFrame {
   codeFormatted?: string;
   language?: string;
   methodParams?: string;
+  exceptionType?: string;
+  osExceptionType?: string;
 }
 
 /**
@@ -2124,6 +2244,11 @@ export interface ReasonStackFrame {
  * 
  * @member {string} [reasonFrame.methodParams] parameters of the frames method
  * 
+ * @member {string} [reasonFrame.exceptionType] Exception type.
+ * 
+ * @member {string} [reasonFrame.osExceptionType] OS exception type. (aka.
+ * SIGNAL)
+ * 
  * @member {boolean} fatal Crash or handled exception
  * 
  */
@@ -2205,6 +2330,96 @@ export interface Crash {
 
 /**
  * @class
+ * Initializes a new instance of the MissingSymbol class.
+ * @constructor
+ * missing symbol
+ *
+ * @member {string} symbolId symbol id
+ * 
+ * @member {string} name symbol name
+ * 
+ * @member {string} [platform] symbol plarform
+ * 
+ * @member {string} status symbol status. Possible values include: 'missing',
+ * 'ignored', 'available'
+ * 
+ */
+export interface MissingSymbol {
+  symbolId: string;
+  name: string;
+  platform?: string;
+  status: string;
+}
+
+/**
+ * @class
+ * Initializes a new instance of the MissingSymbolCrashGroup class.
+ * @constructor
+ * missing symbol crash group object
+ *
+ * @member {string} symbolGroupId id of the symbol group
+ * 
+ * @member {number} [crashCount] number of crashes that belong to this group
+ * 
+ * @member {string} appId application id
+ * 
+ * @member {string} appVer application version
+ * 
+ * @member {string} appBuild application build
+ * 
+ * @member {date} lastModified last update date for the group
+ * 
+ * @member {array} missingSymbols
+ * 
+ * @member {string} status group status. Possible values include: 'active',
+ * 'pending', 'closed'
+ * 
+ */
+export interface MissingSymbolCrashGroup {
+  symbolGroupId: string;
+  crashCount?: number;
+  appId: string;
+  appVer: string;
+  appBuild: string;
+  lastModified: Date;
+  missingSymbols: MissingSymbol[];
+  status: string;
+}
+
+/**
+ * @class
+ * Initializes a new instance of the MissingSymbolCrashGroupsResponse class.
+ * @constructor
+ * grouped by missing symbols crashes response object
+ *
+ * @member {number} totalCrashCount total number of cashes for all the groups
+ * 
+ * @member {array} groups
+ * 
+ */
+export interface MissingSymbolCrashGroupsResponse {
+  totalCrashCount: number;
+  groups: MissingSymbolCrashGroup[];
+}
+
+/**
+ * @class
+ * Initializes a new instance of the FailureResponse class.
+ * @constructor
+ * failure response object
+ *
+ * @member {string} code
+ * 
+ * @member {string} message
+ * 
+ */
+export interface FailureResponse {
+  code: string;
+  message: string;
+}
+
+/**
+ * @class
  * Initializes a new instance of the CrashCounts class.
  * @constructor
  * @member {number} [count] total crash count
@@ -3050,6 +3265,152 @@ export interface EventPropertyValue {
 
 /**
  * @class
+ * Initializes a new instance of the NotificationsListResult class.
+ * @constructor
+ * List of notifications
+ *
+ * @member {array} [values]
+ * 
+ * @member {number} [total] the total count of notifications
+ * 
+ * @member {string} [nextLink]
+ * 
+ */
+export interface NotificationsListResult {
+  values?: NotificationDetailsResult[];
+  total?: number;
+  nextLink?: string;
+}
+
+/**
+ * @class
+ * Initializes a new instance of the NotificationDefinition class.
+ * @constructor
+ * Notification definition object
+ *
+ * @member {string} name Notification name
+ * 
+ * @member {string} [title] Notification title
+ * 
+ * @member {string} body Notification body
+ * 
+ * @member {string} platformType Notification platform type. Possible values
+ * include: 'apns', 'gcm'
+ * 
+ * @member {object} [notificationTarget]
+ * 
+ * @member {string} [notificationTarget.type] Polymorhpic Discriminator
+ * 
+ * @member {object} [customData] Notification custom data(priority,
+ * expiration, etc.)
+ * 
+ */
+export interface NotificationDefinition {
+  name: string;
+  title?: string;
+  body: string;
+  platformType: string;
+  notificationTarget?: NotificationTarget;
+  customData?: { [propertyName: string]: string };
+}
+
+/**
+ * @class
+ * Initializes a new instance of the NotificationResult class.
+ * @constructor
+ * Notification result
+ *
+ * @member {date} [sendTime] Notification send time
+ * 
+ */
+export interface NotificationResult extends NotificationDefinition {
+  sendTime?: Date;
+}
+
+/**
+ * @class
+ * Initializes a new instance of the NotificationDetailsResult class.
+ * @constructor
+ * Notification statistics
+ *
+ * @member {string} [notificationId] Notification id.
+ * 
+ * @member {number} [pnsSendFailure] Number of the notifications failed to
+ * send to the push provider.
+ * 
+ * @member {number} [pnsSendSuccess] Number of the notifications successfully
+ * sent to push the provider.
+ * 
+ * @member {string} [state] State of the notification. Possible values
+ * include: 'Cancelled', 'Completed', 'Enqueued', 'Processing', 'Unknown'
+ * 
+ */
+export interface NotificationDetailsResult extends NotificationResult {
+  notificationId?: string;
+  pnsSendFailure?: number;
+  pnsSendSuccess?: number;
+  state?: string;
+}
+
+/**
+ * @class
+ * Initializes a new instance of the NotificationTarget class.
+ * @constructor
+ * Generic notification target.
+ *
+ * @member {string} type Polymorhpic Discriminator
+ * 
+ */
+export interface NotificationTarget {
+  type: string;
+}
+
+/**
+ * @class
+ * Initializes a new instance of the NotificationSendSucceededResult class.
+ * @constructor
+ * Notification send succeeded.
+ *
+ * @member {string} [notificationId] The unique notification identifier.
+ * 
+ */
+export interface NotificationSendSucceededResult {
+  notificationId?: string;
+}
+
+/**
+ * @class
+ * Initializes a new instance of the NotificationConfig class.
+ * @constructor
+ * Generic notification configuration.
+ *
+ * @member {string} type Polymorhpic Discriminator
+ * 
+ */
+export interface NotificationConfig {
+  type: string;
+}
+
+/**
+ * @class
+ * Initializes a new instance of the NotificationConfigResult class.
+ * @constructor
+ * Generic notification configuration result.
+ *
+ * @member {string} status Configuration state. Possible values include:
+ * 'configured', 'configuring', 'expired', 'not_configured', 'deleted',
+ * 'deleting'
+ * 
+ * @member {string} type Polymorhpic Discriminator
+ * 
+ */
+export interface NotificationConfigResult {
+  status: string;
+  type: string;
+}
+
+/**
+ * @class
  * Initializes a new instance of the DeviceConfiguration class.
  * @constructor
  * @member {string} [name] The name of the device model and OS version
@@ -4182,6 +4543,188 @@ export interface PushConfigGcmCredential {
 
 /**
  * @class
+ * Initializes a new instance of the Deployment class.
+ * @constructor
+ * @member {string} [key]
+ * 
+ * @member {string} name
+ * 
+ * @member {object} [latestRelease]
+ * 
+ * @member {string} [latestRelease.targetBinaryRange]
+ * 
+ * @member {string} [latestRelease.blobUrl]
+ * 
+ * @member {string} [latestRelease.description]
+ * 
+ * @member {boolean} [latestRelease.isDisabled]
+ * 
+ * @member {boolean} [latestRelease.isMandatory]
+ * 
+ * @member {string} [latestRelease.label]
+ * 
+ * @member {string} [latestRelease.originalDeployment] Set on 'Promote'
+ * 
+ * @member {string} [latestRelease.originalLabel] Set on 'Promote' and
+ * 'Rollback'
+ * 
+ * @member {string} [latestRelease.hash]
+ * 
+ * @member {string} [latestRelease.releasedBy]
+ * 
+ * @member {string} [latestRelease.releaseMethod] The release method is
+ * unknown if unspecified. Possible values include: 'Upload', 'Promote',
+ * 'Rollback'
+ * 
+ * @member {number} [latestRelease.rollout]
+ * 
+ * @member {number} [latestRelease.size]
+ * 
+ * @member {number} [latestRelease.uploadTime]
+ * 
+ */
+export interface Deployment {
+  key?: string;
+  name: string;
+  latestRelease?: LiveUpdateRelease;
+}
+
+/**
+ * @class
+ * Initializes a new instance of the LiveUpdateRelease class.
+ * @constructor
+ * @member {string} [targetBinaryRange]
+ * 
+ * @member {string} [blobUrl]
+ * 
+ * @member {string} [description]
+ * 
+ * @member {boolean} [isDisabled]
+ * 
+ * @member {boolean} [isMandatory]
+ * 
+ * @member {string} [label]
+ * 
+ * @member {string} [originalDeployment] Set on 'Promote'
+ * 
+ * @member {string} [originalLabel] Set on 'Promote' and 'Rollback'
+ * 
+ * @member {string} [hash]
+ * 
+ * @member {string} [releasedBy]
+ * 
+ * @member {string} [releaseMethod] The release method is unknown if
+ * unspecified. Possible values include: 'Upload', 'Promote', 'Rollback'
+ * 
+ * @member {number} [rollout]
+ * 
+ * @member {number} [size]
+ * 
+ * @member {number} [uploadTime]
+ * 
+ */
+export interface LiveUpdateRelease {
+  targetBinaryRange?: string;
+  blobUrl?: string;
+  description?: string;
+  isDisabled?: boolean;
+  isMandatory?: boolean;
+  label?: string;
+  originalDeployment?: string;
+  originalLabel?: string;
+  hash?: string;
+  releasedBy?: string;
+  releaseMethod?: string;
+  rollout?: number;
+  size?: number;
+  uploadTime?: number;
+}
+
+/**
+ * @class
+ * Initializes a new instance of the DeploymentModification class.
+ * @constructor
+ * @member {string} [name]
+ * 
+ */
+export interface DeploymentModification {
+  name?: string;
+}
+
+/**
+ * @class
+ * Initializes a new instance of the LiveUpdateReleaseModification class.
+ * @constructor
+ * @member {string} [targetBinaryRange]
+ * 
+ * @member {string} [description]
+ * 
+ * @member {boolean} [isDisabled]
+ * 
+ * @member {boolean} [isMandatory]
+ * 
+ * @member {number} [rollout]
+ * 
+ */
+export interface LiveUpdateReleaseModification {
+  targetBinaryRange?: string;
+  description?: string;
+  isDisabled?: boolean;
+  isMandatory?: boolean;
+  rollout?: number;
+}
+
+/**
+ * @class
+ * Initializes a new instance of the LiveUpdateReleaseMetric class.
+ * @constructor
+ * @member {string} label
+ * 
+ * @member {number} active
+ * 
+ * @member {number} [downloaded]
+ * 
+ * @member {number} [failed]
+ * 
+ * @member {number} [installed]
+ * 
+ */
+export interface LiveUpdateReleaseMetric {
+  label: string;
+  active: number;
+  downloaded?: number;
+  failed?: number;
+  installed?: number;
+}
+
+/**
+ * @class
+ * Initializes a new instance of the LiveUpdateStatusMetricMetadata class.
+ * @constructor
+ * @member {string} [label]
+ * 
+ * @member {string} [appVersion]
+ * 
+ * @member {string} [previousDeploymentKey]
+ * 
+ * @member {string} [previousLabelOrAppVersion]
+ * 
+ * @member {string} [status]
+ * 
+ * @member {string} [clientUniqueId]
+ * 
+ */
+export interface LiveUpdateStatusMetricMetadata {
+  label?: string;
+  appVersion?: string;
+  previousDeploymentKey?: string;
+  previousLabelOrAppVersion?: string;
+  status?: string;
+  clientUniqueId?: string;
+}
+
+/**
+ * @class
  * Initializes a new instance of the CrashGroups class.
  * @constructor
  * @member {array} crashGroupsProperty
@@ -4203,10 +4746,10 @@ export interface CrashGroups {
  * @member {string} [name] The name of the app used in URLs
  * 
  * @member {string} os The OS the app will be running on. Possible values
- * include: 'iOS', 'Android'
+ * include: 'iOS', 'Android', 'Windows'
  * 
  * @member {string} platform The platform of the app. Possible values include:
- * 'Objective-C-Swift', 'Java', 'React-Native', 'Xamarin'
+ * 'Java', 'Objective-C-Swift', 'React-Native', 'UWP', 'Xamarin'
  * 
  */
 export interface App {
diff --git a/src/util/apis/generated/models/index.js b/src/util/apis/generated/models/index.js
index e41666c..78a25d0 100644
--- a/src/util/apis/generated/models/index.js
+++ b/src/util/apis/generated/models/index.js
@@ -27,8 +27,11 @@ exports.DistributionGroupUserRequest = require('./distributionGroupUserRequest')
 exports.FeaturePatchRequest = require('./featurePatchRequest');
 exports.FeatureCreateRequest = require('./featureCreateRequest');
 exports.GrantAdminRoleRequest = require('./grantAdminRoleRequest');
-exports.OrgPatchRequest = require('./orgPatchRequest');
+exports.OrganizationPatchRequest = require('./organizationPatchRequest');
 exports.OrganizationRequest = require('./organizationRequest');
+exports.OrganizationUserPatchRequest = require('./organizationUserPatchRequest');
+exports.UserInvitationPermissionsUpdateRequest = require('./userInvitationPermissionsUpdateRequest');
+exports.UserEmailRequest = require('./userEmailRequest');
 exports.UserUpdateRequest = require('./userUpdateRequest');
 exports.UserUpdateRequestInternal = require('./userUpdateRequestInternal');
 exports.AppInvitationDetailResponse = require('./appInvitationDetailResponse');
@@ -47,6 +50,7 @@ exports.OrganizationResponse = require('./organizationResponse');
 exports.OrganizationUserResponse = require('./organizationUserResponse');
 exports.UserNameAvailabilityResponse = require('./userNameAvailabilityResponse');
 exports.SourceRepository = require('./sourceRepository');
+exports.DownloadContainer = require('./downloadContainer');
 exports.WebSocketContainer = require('./webSocketContainer');
 exports.XcodeScheme = require('./xcodeScheme');
 exports.XcodeSchemeContainer = require('./xcodeSchemeContainer');
@@ -70,6 +74,9 @@ exports.RepoInfo = require('./repoInfo');
 exports.XcodeVersion = require('./xcodeVersion');
 exports.BuildParams = require('./buildParams');
 exports.BuildPatch = require('./buildPatch');
+exports.BuildLog = require('./buildLog');
+exports.DistributionRequest = require('./distributionRequest');
+exports.DistributionResponse = require('./distributionResponse');
 exports.ValidationErrorResponse = require('./validationErrorResponse');
 exports.BasicReleaseDetails = require('./basicReleaseDetails');
 exports.DistributionGroup = require('./distributionGroup');
@@ -90,15 +97,19 @@ exports.SymbolUploadBeginRequest = require('./symbolUploadBeginRequest');
 exports.SymbolUploadBeginResponse = require('./symbolUploadBeginResponse');
 exports.SymbolUploadEndRequest = require('./symbolUploadEndRequest');
 exports.AppVersion = require('./appVersion');
+exports.Exception = require('./exception');
+exports.StackFrame = require('./stackFrame');
 exports.Stacktrace = require('./stacktrace');
 exports.Thread = require('./thread');
-exports.StackFrame = require('./stackFrame');
-exports.Exception = require('./exception');
 exports.ReasonStackFrame = require('./reasonStackFrame');
 exports.CrashGroup = require('./crashGroup');
 exports.CrashGroupChange = require('./crashGroupChange');
 exports.CrashGroupCounts = require('./crashGroupCounts');
 exports.Crash = require('./crash');
+exports.MissingSymbol = require('./missingSymbol');
+exports.MissingSymbolCrashGroup = require('./missingSymbolCrashGroup');
+exports.MissingSymbolCrashGroupsResponse = require('./missingSymbolCrashGroupsResponse');
+exports.FailureResponse = require('./failureResponse');
 exports.CrashCounts = require('./crashCounts');
 exports.DateTimeCounts = require('./dateTimeCounts');
 exports.ActiveDeviceCounts = require('./activeDeviceCounts');
@@ -143,6 +154,14 @@ exports.Device = require('./device');
 exports.EventProperties = require('./eventProperties');
 exports.EventPropertyValues = require('./eventPropertyValues');
 exports.EventPropertyValue = require('./eventPropertyValue');
+exports.NotificationsListResult = require('./notificationsListResult');
+exports.NotificationDefinition = require('./notificationDefinition');
+exports.NotificationResult = require('./notificationResult');
+exports.NotificationDetailsResult = require('./notificationDetailsResult');
+exports.NotificationTarget = require('./notificationTarget');
+exports.NotificationSendSucceededResult = require('./notificationSendSucceededResult');
+exports.NotificationConfig = require('./notificationConfig');
+exports.NotificationConfigResult = require('./notificationConfigResult');
 exports.DeviceConfiguration = require('./deviceConfiguration');
 exports.DeviceConfigurationImage = require('./deviceConfigurationImage');
 exports.DeviceModel = require('./deviceModel');
@@ -183,8 +202,17 @@ exports.ImportDataContainer = require('./importDataContainer');
 exports.PushConfig = require('./pushConfig');
 exports.PushConfigApnsCredential = require('./pushConfigApnsCredential');
 exports.PushConfigGcmCredential = require('./pushConfigGcmCredential');
+exports.Deployment = require('./deployment');
+exports.LiveUpdateRelease = require('./liveUpdateRelease');
+exports.DeploymentModification = require('./deploymentModification');
+exports.LiveUpdateReleaseModification = require('./liveUpdateReleaseModification');
+exports.LiveUpdateReleaseMetric = require('./liveUpdateReleaseMetric');
+exports.LiveUpdateStatusMetricMetadata = require('./liveUpdateStatusMetricMetadata');
 exports.CrashGroups = require('./crashGroups');
 exports.App = require('./app');
 exports.discriminators = {
-  'Log' : exports.Log
+  'Log' : exports.Log,
+  'NotificationTarget' : exports.NotificationTarget,
+  'NotificationConfig' : exports.NotificationConfig,
+  'NotificationConfigResult' : exports.NotificationConfigResult
 };
diff --git a/src/util/apis/generated/models/liveUpdateRelease.js b/src/util/apis/generated/models/liveUpdateRelease.js
new file mode 100644
index 0000000..c7476e0
--- /dev/null
+++ b/src/util/apis/generated/models/liveUpdateRelease.js
@@ -0,0 +1,163 @@
+/*
+ * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
+ * Changes may cause incorrect behavior and will be lost if the code is
+ * regenerated.
+ */
+
+'use strict';
+
+/**
+ * @class
+ * Initializes a new instance of the LiveUpdateRelease class.
+ * @constructor
+ * @member {string} [targetBinaryRange]
+ * 
+ * @member {string} [blobUrl]
+ * 
+ * @member {string} [description]
+ * 
+ * @member {boolean} [isDisabled]
+ * 
+ * @member {boolean} [isMandatory]
+ * 
+ * @member {string} [label]
+ * 
+ * @member {string} [originalDeployment] Set on 'Promote'
+ * 
+ * @member {string} [originalLabel] Set on 'Promote' and 'Rollback'
+ * 
+ * @member {string} [hash]
+ * 
+ * @member {string} [releasedBy]
+ * 
+ * @member {string} [releaseMethod] The release method is unknown if
+ * unspecified. Possible values include: 'Upload', 'Promote', 'Rollback'
+ * 
+ * @member {number} [rollout]
+ * 
+ * @member {number} [size]
+ * 
+ * @member {number} [uploadTime]
+ * 
+ */
+function LiveUpdateRelease() {
+}
+
+/**
+ * Defines the metadata of LiveUpdateRelease
+ *
+ * @returns {object} metadata of LiveUpdateRelease
+ *
+ */
+LiveUpdateRelease.prototype.mapper = function () {
+  return {
+    required: false,
+    serializedName: 'LiveUpdateRelease',
+    type: {
+      name: 'Composite',
+      className: 'LiveUpdateRelease',
+      modelProperties: {
+        targetBinaryRange: {
+          required: false,
+          serializedName: 'target_binary_range',
+          type: {
+            name: 'String'
+          }
+        },
+        blobUrl: {
+          required: false,
+          serializedName: 'blob_url',
+          type: {
+            name: 'String'
+          }
+        },
+        description: {
+          required: false,
+          serializedName: 'description',
+          type: {
+            name: 'String'
+          }
+        },
+        isDisabled: {
+          required: false,
+          serializedName: 'is_disabled',
+          type: {
+            name: 'Boolean'
+          }
+        },
+        isMandatory: {
+          required: false,
+          serializedName: 'is_mandatory',
+          type: {
+            name: 'Boolean'
+          }
+        },
+        label: {
+          required: false,
+          serializedName: 'label',
+          type: {
+            name: 'String'
+          }
+        },
+        originalDeployment: {
+          required: false,
+          serializedName: 'original_deployment',
+          type: {
+            name: 'String'
+          }
+        },
+        originalLabel: {
+          required: false,
+          serializedName: 'original_label',
+          type: {
+            name: 'String'
+          }
+        },
+        hash: {
+          required: false,
+          serializedName: 'hash',
+          type: {
+            name: 'String'
+          }
+        },
+        releasedBy: {
+          required: false,
+          serializedName: 'released_by',
+          type: {
+            name: 'String'
+          }
+        },
+        releaseMethod: {
+          required: false,
+          serializedName: 'release_method',
+          type: {
+            name: 'String'
+          }
+        },
+        rollout: {
+          required: false,
+          serializedName: 'rollout',
+          type: {
+            name: 'Number'
+          }
+        },
+        size: {
+          required: false,
+          serializedName: 'size',
+          type: {
+            name: 'Number'
+          }
+        },
+        uploadTime: {
+          required: false,
+          serializedName: 'upload_time',
+          type: {
+            name: 'Number'
+          }
+        }
+      }
+    }
+  };
+};
+
+module.exports = LiveUpdateRelease;
diff --git a/src/util/apis/generated/models/liveUpdateReleaseMetric.js b/src/util/apis/generated/models/liveUpdateReleaseMetric.js
new file mode 100644
index 0000000..ff26393
--- /dev/null
+++ b/src/util/apis/generated/models/liveUpdateReleaseMetric.js
@@ -0,0 +1,81 @@
+/*
+ * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
+ * Changes may cause incorrect behavior and will be lost if the code is
+ * regenerated.
+ */
+
+'use strict';
+
+/**
+ * @class
+ * Initializes a new instance of the LiveUpdateReleaseMetric class.
+ * @constructor
+ * @member {string} label
+ * 
+ * @member {number} active
+ * 
+ * @member {number} [downloaded]
+ * 
+ * @member {number} [failed]
+ * 
+ * @member {number} [installed]
+ * 
+ */
+function LiveUpdateReleaseMetric() {
+}
+
+/**
+ * Defines the metadata of LiveUpdateReleaseMetric
+ *
+ * @returns {object} metadata of LiveUpdateReleaseMetric
+ *
+ */
+LiveUpdateReleaseMetric.prototype.mapper = function () {
+  return {
+    required: false,
+    serializedName: 'LiveUpdateReleaseMetric',
+    type: {
+      name: 'Composite',
+      className: 'LiveUpdateReleaseMetric',
+      modelProperties: {
+        label: {
+          required: true,
+          serializedName: 'label',
+          type: {
+            name: 'String'
+          }
+        },
+        active: {
+          required: true,
+          serializedName: 'active',
+          type: {
+            name: 'Number'
+          }
+        },
+        downloaded: {
+          required: false,
+          serializedName: 'downloaded',
+          type: {
+            name: 'Number'
+          }
+        },
+        failed: {
+          required: false,
+          serializedName: 'failed',
+          type: {
+            name: 'Number'
+          }
+        },
+        installed: {
+          required: false,
+          serializedName: 'installed',
+          type: {
+            name: 'Number'
+          }
+        }
+      }
+    }
+  };
+};
+
+module.exports = LiveUpdateReleaseMetric;
diff --git a/src/util/apis/generated/models/liveUpdateReleaseModification.js b/src/util/apis/generated/models/liveUpdateReleaseModification.js
new file mode 100644
index 0000000..2a8c6f7
--- /dev/null
+++ b/src/util/apis/generated/models/liveUpdateReleaseModification.js
@@ -0,0 +1,81 @@
+/*
+ * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
+ * Changes may cause incorrect behavior and will be lost if the code is
+ * regenerated.
+ */
+
+'use strict';
+
+/**
+ * @class
+ * Initializes a new instance of the LiveUpdateReleaseModification class.
+ * @constructor
+ * @member {string} [targetBinaryRange]
+ * 
+ * @member {string} [description]
+ * 
+ * @member {boolean} [isDisabled]
+ * 
+ * @member {boolean} [isMandatory]
+ * 
+ * @member {number} [rollout]
+ * 
+ */
+function LiveUpdateReleaseModification() {
+}
+
+/**
+ * Defines the metadata of LiveUpdateReleaseModification
+ *
+ * @returns {object} metadata of LiveUpdateReleaseModification
+ *
+ */
+LiveUpdateReleaseModification.prototype.mapper = function () {
+  return {
+    required: false,
+    serializedName: 'LiveUpdateReleaseModification',
+    type: {
+      name: 'Composite',
+      className: 'LiveUpdateReleaseModification',
+      modelProperties: {
+        targetBinaryRange: {
+          required: false,
+          serializedName: 'target_binary_range',
+          type: {
+            name: 'String'
+          }
+        },
+        description: {
+          required: false,
+          serializedName: 'description',
+          type: {
+            name: 'String'
+          }
+        },
+        isDisabled: {
+          required: false,
+          serializedName: 'is_disabled',
+          type: {
+            name: 'Boolean'
+          }
+        },
+        isMandatory: {
+          required: false,
+          serializedName: 'is_mandatory',
+          type: {
+            name: 'Boolean'
+          }
+        },
+        rollout: {
+          required: false,
+          serializedName: 'rollout',
+          type: {
+            name: 'Number'
+          }
+        }
+      }
+    }
+  };
+};
+
+module.exports = LiveUpdateReleaseModification;
diff --git a/src/util/apis/generated/models/liveUpdateStatusMetricMetadata.js b/src/util/apis/generated/models/liveUpdateStatusMetricMetadata.js
new file mode 100644
index 0000000..51ca646
--- /dev/null
+++ b/src/util/apis/generated/models/liveUpdateStatusMetricMetadata.js
@@ -0,0 +1,90 @@
+/*
+ * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
+ * Changes may cause incorrect behavior and will be lost if the code is
+ * regenerated.
+ */
+
+'use strict';
+
+/**
+ * @class
+ * Initializes a new instance of the LiveUpdateStatusMetricMetadata class.
+ * @constructor
+ * @member {string} [label]
+ * 
+ * @member {string} [appVersion]
+ * 
+ * @member {string} [previousDeploymentKey]
+ * 
+ * @member {string} [previousLabelOrAppVersion]
+ * 
+ * @member {string} [status]
+ * 
+ * @member {string} [clientUniqueId]
+ * 
+ */
+function LiveUpdateStatusMetricMetadata() {
+}
+
+/**
+ * Defines the metadata of LiveUpdateStatusMetricMetadata
+ *
+ * @returns {object} metadata of LiveUpdateStatusMetricMetadata
+ *
+ */
+LiveUpdateStatusMetricMetadata.prototype.mapper = function () {
+  return {
+    required: false,
+    serializedName: 'LiveUpdateStatusMetricMetadata',
+    type: {
+      name: 'Composite',
+      className: 'LiveUpdateStatusMetricMetadata',
+      modelProperties: {
+        label: {
+          required: false,
+          serializedName: 'label',
+          type: {
+            name: 'String'
+          }
+        },
+        appVersion: {
+          required: false,
+          serializedName: 'app_version',
+          type: {
+            name: 'String'
+          }
+        },
+        previousDeploymentKey: {
+          required: false,
+          serializedName: 'previous_deployment_key',
+          type: {
+            name: 'String'
+          }
+        },
+        previousLabelOrAppVersion: {
+          required: false,
+          serializedName: 'previous_label_or_app_version',
+          type: {
+            name: 'String'
+          }
+        },
+        status: {
+          required: false,
+          serializedName: 'status',
+          type: {
+            name: 'String'
+          }
+        },
+        clientUniqueId: {
+          required: false,
+          serializedName: 'client_unique_id',
+          type: {
+            name: 'String'
+          }
+        }
+      }
+    }
+  };
+};
+
+module.exports = LiveUpdateStatusMetricMetadata;
diff --git a/src/util/apis/generated/models/missingSymbol.js b/src/util/apis/generated/models/missingSymbol.js
new file mode 100644
index 0000000..b984dad
--- /dev/null
+++ b/src/util/apis/generated/models/missingSymbol.js
@@ -0,0 +1,75 @@
+/*
+ * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
+ * Changes may cause incorrect behavior and will be lost if the code is
+ * regenerated.
+ */
+
+'use strict';
+
+/**
+ * @class
+ * Initializes a new instance of the MissingSymbol class.
+ * @constructor
+ * missing symbol
+ *
+ * @member {string} symbolId symbol id
+ * 
+ * @member {string} name symbol name
+ * 
+ * @member {string} [platform] symbol plarform
+ * 
+ * @member {string} status symbol status. Possible values include: 'missing',
+ * 'ignored', 'available'
+ * 
+ */
+function MissingSymbol() {
+}
+
+/**
+ * Defines the metadata of MissingSymbol
+ *
+ * @returns {object} metadata of MissingSymbol
+ *
+ */
+MissingSymbol.prototype.mapper = function () {
+  return {
+    required: false,
+    serializedName: 'MissingSymbol',
+    type: {
+      name: 'Composite',
+      className: 'MissingSymbol',
+      modelProperties: {
+        symbolId: {
+          required: true,
+          serializedName: 'symbol_id',
+          type: {
+            name: 'String'
+          }
+        },
+        name: {
+          required: true,
+          serializedName: 'name',
+          type: {
+            name: 'String'
+          }
+        },
+        platform: {
+          required: false,
+          serializedName: 'platform',
+          type: {
+            name: 'String'
+          }
+        },
+        status: {
+          required: true,
+          serializedName: 'status',
+          type: {
+            name: 'String'
+          }
+        }
+      }
+    }
+  };
+};
+
+module.exports = MissingSymbol;
diff --git a/src/util/apis/generated/models/missingSymbolCrashGroup.js b/src/util/apis/generated/models/missingSymbolCrashGroup.js
new file mode 100644
index 0000000..0d1b4eb
--- /dev/null
+++ b/src/util/apis/generated/models/missingSymbolCrashGroup.js
@@ -0,0 +1,123 @@
+/*
+ * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
+ * Changes may cause incorrect behavior and will be lost if the code is
+ * regenerated.
+ */
+
+'use strict';
+
+var models = require('./index');
+
+var util = require('util');
+
+/**
+ * @class
+ * Initializes a new instance of the MissingSymbolCrashGroup class.
+ * @constructor
+ * missing symbol crash group object
+ *
+ * @member {string} symbolGroupId id of the symbol group
+ * 
+ * @member {number} [crashCount] number of crashes that belong to this group
+ * 
+ * @member {string} appId application id
+ * 
+ * @member {string} appVer application version
+ * 
+ * @member {string} appBuild application build
+ * 
+ * @member {date} lastModified last update date for the group
+ * 
+ * @member {array} missingSymbols
+ * 
+ * @member {string} status group status. Possible values include: 'active',
+ * 'pending', 'closed'
+ * 
+ */
+function MissingSymbolCrashGroup() {
+}
+
+/**
+ * Defines the metadata of MissingSymbolCrashGroup
+ *
+ * @returns {object} metadata of MissingSymbolCrashGroup
+ *
+ */
+MissingSymbolCrashGroup.prototype.mapper = function () {
+  return {
+    required: false,
+    serializedName: 'MissingSymbolCrashGroup',
+    type: {
+      name: 'Composite',
+      className: 'MissingSymbolCrashGroup',
+      modelProperties: {
+        symbolGroupId: {
+          required: true,
+          serializedName: 'symbol_group_id',
+          type: {
+            name: 'String'
+          }
+        },
+        crashCount: {
+          required: false,
+          serializedName: 'crash_count',
+          type: {
+            name: 'Number'
+          }
+        },
+        appId: {
+          required: true,
+          serializedName: 'app_id',
+          type: {
+            name: 'String'
+          }
+        },
+        appVer: {
+          required: true,
+          serializedName: 'app_ver',
+          type: {
+            name: 'String'
+          }
+        },
+        appBuild: {
+          required: true,
+          serializedName: 'app_build',
+          type: {
+            name: 'String'
+          }
+        },
+        lastModified: {
+          required: true,
+          serializedName: 'last_modified',
+          type: {
+            name: 'DateTime'
+          }
+        },
+        missingSymbols: {
+          required: true,
+          serializedName: 'missing_symbols',
+          type: {
+            name: 'Sequence',
+            element: {
+                required: false,
+                serializedName: 'MissingSymbolElementType',
+                type: {
+                  name: 'Composite',
+                  className: 'MissingSymbol'
+                }
+            }
+          }
+        },
+        status: {
+          required: true,
+          serializedName: 'status',
+          type: {
+            name: 'String'
+          }
+        }
+      }
+    }
+  };
+};
+
+module.exports = MissingSymbolCrashGroup;
diff --git a/src/util/apis/generated/models/missingSymbolCrashGroupsResponse.js b/src/util/apis/generated/models/missingSymbolCrashGroupsResponse.js
new file mode 100644
index 0000000..6d71756
--- /dev/null
+++ b/src/util/apis/generated/models/missingSymbolCrashGroupsResponse.js
@@ -0,0 +1,68 @@
+/*
+ * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
+ * Changes may cause incorrect behavior and will be lost if the code is
+ * regenerated.
+ */
+
+'use strict';
+
+var models = require('./index');
+
+var util = require('util');
+
+/**
+ * @class
+ * Initializes a new instance of the MissingSymbolCrashGroupsResponse class.
+ * @constructor
+ * grouped by missing symbols crashes response object
+ *
+ * @member {number} totalCrashCount total number of cashes for all the groups
+ * 
+ * @member {array} groups
+ * 
+ */
+function MissingSymbolCrashGroupsResponse() {
+}
+
+/**
+ * Defines the metadata of MissingSymbolCrashGroupsResponse
+ *
+ * @returns {object} metadata of MissingSymbolCrashGroupsResponse
+ *
+ */
+MissingSymbolCrashGroupsResponse.prototype.mapper = function () {
+  return {
+    required: false,
+    serializedName: 'MissingSymbolCrashGroupsResponse',
+    type: {
+      name: 'Composite',
+      className: 'MissingSymbolCrashGroupsResponse',
+      modelProperties: {
+        totalCrashCount: {
+          required: true,
+          serializedName: 'total_crash_count',
+          type: {
+            name: 'Number'
+          }
+        },
+        groups: {
+          required: true,
+          serializedName: 'groups',
+          type: {
+            name: 'Sequence',
+            element: {
+                required: false,
+                serializedName: 'MissingSymbolCrashGroupElementType',
+                type: {
+                  name: 'Composite',
+                  className: 'MissingSymbolCrashGroup'
+                }
+            }
+          }
+        }
+      }
+    }
+  };
+};
+
+module.exports = MissingSymbolCrashGroupsResponse;
diff --git a/src/util/apis/generated/models/notificationConfig.js b/src/util/apis/generated/models/notificationConfig.js
new file mode 100644
index 0000000..a9ed5ca
--- /dev/null
+++ b/src/util/apis/generated/models/notificationConfig.js
@@ -0,0 +1,49 @@
+/*
+ * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
+ * Changes may cause incorrect behavior and will be lost if the code is
+ * regenerated.
+ */
+
+'use strict';
+
+/**
+ * @class
+ * Initializes a new instance of the NotificationConfig class.
+ * @constructor
+ * Generic notification configuration.
+ *
+ * @member {string} type Polymorhpic Discriminator
+ * 
+ */
+function NotificationConfig() {
+}
+
+/**
+ * Defines the metadata of NotificationConfig
+ *
+ * @returns {object} metadata of NotificationConfig
+ *
+ */
+NotificationConfig.prototype.mapper = function () {
+  return {
+    required: false,
+    serializedName: 'NotificationConfig',
+    type: {
+      name: 'Composite',
+      polymorphicDiscriminator: 'type',
+      uberParent: 'NotificationConfig',
+      className: 'NotificationConfig',
+      modelProperties: {
+        type: {
+          required: true,
+          serializedName: 'type',
+          type: {
+            name: 'String'
+          }
+        }
+      }
+    }
+  };
+};
+
+module.exports = NotificationConfig;
diff --git a/src/util/apis/generated/models/notificationConfigResult.js b/src/util/apis/generated/models/notificationConfigResult.js
new file mode 100644
index 0000000..b3216be
--- /dev/null
+++ b/src/util/apis/generated/models/notificationConfigResult.js
@@ -0,0 +1,60 @@
+/*
+ * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
+ * Changes may cause incorrect behavior and will be lost if the code is
+ * regenerated.
+ */
+
+'use strict';
+
+/**
+ * @class
+ * Initializes a new instance of the NotificationConfigResult class.
+ * @constructor
+ * Generic notification configuration result.
+ *
+ * @member {string} status Configuration state. Possible values include:
+ * 'configured', 'configuring', 'expired', 'not_configured', 'deleted',
+ * 'deleting'
+ * 
+ * @member {string} type Polymorhpic Discriminator
+ * 
+ */
+function NotificationConfigResult() {
+}
+
+/**
+ * Defines the metadata of NotificationConfigResult
+ *
+ * @returns {object} metadata of NotificationConfigResult
+ *
+ */
+NotificationConfigResult.prototype.mapper = function () {
+  return {
+    required: false,
+    serializedName: 'NotificationConfigResult',
+    type: {
+      name: 'Composite',
+      polymorphicDiscriminator: 'type',
+      uberParent: 'NotificationConfigResult',
+      className: 'NotificationConfigResult',
+      modelProperties: {
+        status: {
+          required: true,
+          serializedName: 'status',
+          type: {
+            name: 'String'
+          }
+        },
+        type: {
+          required: true,
+          serializedName: 'type',
+          type: {
+            name: 'String'
+          }
+        }
+      }
+    }
+  };
+};
+
+module.exports = NotificationConfigResult;
diff --git a/src/util/apis/generated/models/notificationDefinition.js b/src/util/apis/generated/models/notificationDefinition.js
new file mode 100644
index 0000000..5a9be8a
--- /dev/null
+++ b/src/util/apis/generated/models/notificationDefinition.js
@@ -0,0 +1,117 @@
+/*
+ * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
+ * Changes may cause incorrect behavior and will be lost if the code is
+ * regenerated.
+ */
+
+'use strict';
+
+var models = require('./index');
+
+/**
+ * @class
+ * Initializes a new instance of the NotificationDefinition class.
+ * @constructor
+ * Notification definition object
+ *
+ * @member {string} name Notification name
+ * 
+ * @member {string} [title] Notification title
+ * 
+ * @member {string} body Notification body
+ * 
+ * @member {string} platformType Notification platform type. Possible values
+ * include: 'apns', 'gcm'
+ * 
+ * @member {object} [notificationTarget]
+ * 
+ * @member {string} [notificationTarget.type] Polymorhpic Discriminator
+ * 
+ * @member {object} [customData] Notification custom data(priority,
+ * expiration, etc.)
+ * 
+ */
+function NotificationDefinition() {
+}
+
+/**
+ * Defines the metadata of NotificationDefinition
+ *
+ * @returns {object} metadata of NotificationDefinition
+ *
+ */
+NotificationDefinition.prototype.mapper = function () {
+  return {
+    required: false,
+    serializedName: 'NotificationDefinition',
+    type: {
+      name: 'Composite',
+      className: 'NotificationDefinition',
+      modelProperties: {
+        name: {
+          required: true,
+          serializedName: 'name',
+          constraints: {
+            MaxLength: 64
+          },
+          type: {
+            name: 'String'
+          }
+        },
+        title: {
+          required: false,
+          serializedName: 'title',
+          constraints: {
+            MaxLength: 128
+          },
+          type: {
+            name: 'String'
+          }
+        },
+        body: {
+          required: true,
+          serializedName: 'body',
+          constraints: {
+            MaxLength: 4000
+          },
+          type: {
+            name: 'String'
+          }
+        },
+        platformType: {
+          required: true,
+          serializedName: 'platform_type',
+          type: {
+            name: 'String'
+          }
+        },
+        notificationTarget: {
+          required: false,
+          serializedName: 'notification_target',
+          type: {
+            name: 'Composite',
+            polymorphicDiscriminator: 'type',
+            uberParent: 'NotificationTarget',
+            className: 'NotificationTarget'
+          }
+        },
+        customData: {
+          required: false,
+          serializedName: 'custom_data',
+          type: {
+            name: 'Dictionary',
+            value: {
+                required: false,
+                serializedName: 'StringElementType',
+                type: {
+                  name: 'String'
+                }
+            }
+          }
+        }
+      }
+    }
+  };
+};
+
+module.exports = NotificationDefinition;
diff --git a/src/util/apis/generated/models/notificationDetailsResult.js b/src/util/apis/generated/models/notificationDetailsResult.js
new file mode 100644
index 0000000..9cb9841
--- /dev/null
+++ b/src/util/apis/generated/models/notificationDetailsResult.js
@@ -0,0 +1,152 @@
+/*
+ * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
+ * Changes may cause incorrect behavior and will be lost if the code is
+ * regenerated.
+ */
+
+'use strict';
+
+var models = require('./index');
+
+var util = require('util');
+
+/**
+ * @class
+ * Initializes a new instance of the NotificationDetailsResult class.
+ * @constructor
+ * Notification statistics
+ *
+ * @member {string} [notificationId] Notification id.
+ * 
+ * @member {number} [pnsSendFailure] Number of the notifications failed to
+ * send to the push provider.
+ * 
+ * @member {number} [pnsSendSuccess] Number of the notifications successfully
+ * sent to push the provider.
+ * 
+ * @member {string} [state] State of the notification. Possible values
+ * include: 'Cancelled', 'Completed', 'Enqueued', 'Processing', 'Unknown'
+ * 
+ */
+function NotificationDetailsResult() {
+  NotificationDetailsResult['super_'].call(this);
+}
+
+util.inherits(NotificationDetailsResult, models['NotificationResult']);
+
+/**
+ * Defines the metadata of NotificationDetailsResult
+ *
+ * @returns {object} metadata of NotificationDetailsResult
+ *
+ */
+NotificationDetailsResult.prototype.mapper = function () {
+  return {
+    required: false,
+    serializedName: 'NotificationDetailsResult',
+    type: {
+      name: 'Composite',
+      className: 'NotificationDetailsResult',
+      modelProperties: {
+        name: {
+          required: true,
+          serializedName: 'name',
+          constraints: {
+            MaxLength: 64
+          },
+          type: {
+            name: 'String'
+          }
+        },
+        title: {
+          required: false,
+          serializedName: 'title',
+          constraints: {
+            MaxLength: 128
+          },
+          type: {
+            name: 'String'
+          }
+        },
+        body: {
+          required: true,
+          serializedName: 'body',
+          constraints: {
+            MaxLength: 4000
+          },
+          type: {
+            name: 'String'
+          }
+        },
+        platformType: {
+          required: true,
+          serializedName: 'platform_type',
+          type: {
+            name: 'String'
+          }
+        },
+        notificationTarget: {
+          required: false,
+          serializedName: 'notification_target',
+          type: {
+            name: 'Composite',
+            polymorphicDiscriminator: 'type',
+            uberParent: 'NotificationTarget',
+            className: 'NotificationTarget'
+          }
+        },
+        customData: {
+          required: false,
+          serializedName: 'custom_data',
+          type: {
+            name: 'Dictionary',
+            value: {
+                required: false,
+                serializedName: 'StringElementType',
+                type: {
+                  name: 'String'
+                }
+            }
+          }
+        },
+        sendTime: {
+          required: false,
+          serializedName: 'send_time',
+          type: {
+            name: 'DateTime'
+          }
+        },
+        notificationId: {
+          required: false,
+          serializedName: 'notification_id',
+          type: {
+            name: 'String'
+          }
+        },
+        pnsSendFailure: {
+          required: false,
+          serializedName: 'pns_send_failure',
+          type: {
+            name: 'Number'
+          }
+        },
+        pnsSendSuccess: {
+          required: false,
+          serializedName: 'pns_send_success',
+          type: {
+            name: 'Number'
+          }
+        },
+        state: {
+          required: false,
+          serializedName: 'state',
+          type: {
+            name: 'String'
+          }
+        }
+      }
+    }
+  };
+};
+
+module.exports = NotificationDetailsResult;
diff --git a/src/util/apis/generated/models/notificationResult.js b/src/util/apis/generated/models/notificationResult.js
new file mode 100644
index 0000000..f646948
--- /dev/null
+++ b/src/util/apis/generated/models/notificationResult.js
@@ -0,0 +1,115 @@
+/*
+ * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
+ * Changes may cause incorrect behavior and will be lost if the code is
+ * regenerated.
+ */
+
+'use strict';
+
+var models = require('./index');
+
+var util = require('util');
+
+/**
+ * @class
+ * Initializes a new instance of the NotificationResult class.
+ * @constructor
+ * Notification result
+ *
+ * @member {date} [sendTime] Notification send time
+ * 
+ */
+function NotificationResult() {
+  NotificationResult['super_'].call(this);
+}
+
+util.inherits(NotificationResult, models['NotificationDefinition']);
+
+/**
+ * Defines the metadata of NotificationResult
+ *
+ * @returns {object} metadata of NotificationResult
+ *
+ */
+NotificationResult.prototype.mapper = function () {
+  return {
+    required: false,
+    serializedName: 'NotificationResult',
+    type: {
+      name: 'Composite',
+      className: 'NotificationResult',
+      modelProperties: {
+        name: {
+          required: true,
+          serializedName: 'name',
+          constraints: {
+            MaxLength: 64
+          },
+          type: {
+            name: 'String'
+          }
+        },
+        title: {
+          required: false,
+          serializedName: 'title',
+          constraints: {
+            MaxLength: 128
+          },
+          type: {
+            name: 'String'
+          }
+        },
+        body: {
+          required: true,
+          serializedName: 'body',
+          constraints: {
+            MaxLength: 4000
+          },
+          type: {
+            name: 'String'
+          }
+        },
+        platformType: {
+          required: true,
+          serializedName: 'platform_type',
+          type: {
+            name: 'String'
+          }
+        },
+        notificationTarget: {
+          required: false,
+          serializedName: 'notification_target',
+          type: {
+            name: 'Composite',
+            polymorphicDiscriminator: 'type',
+            uberParent: 'NotificationTarget',
+            className: 'NotificationTarget'
+          }
+        },
+        customData: {
+          required: false,
+          serializedName: 'custom_data',
+          type: {
+            name: 'Dictionary',
+            value: {
+                required: false,
+                serializedName: 'StringElementType',
+                type: {
+                  name: 'String'
+                }
+            }
+          }
+        },
+        sendTime: {
+          required: false,
+          serializedName: 'send_time',
+          type: {
+            name: 'DateTime'
+          }
+        }
+      }
+    }
+  };
+};
+
+module.exports = NotificationResult;
diff --git a/src/util/apis/generated/models/notificationSendSucceededResult.js b/src/util/apis/generated/models/notificationSendSucceededResult.js
new file mode 100644
index 0000000..f68106a
--- /dev/null
+++ b/src/util/apis/generated/models/notificationSendSucceededResult.js
@@ -0,0 +1,47 @@
+/*
+ * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
+ * Changes may cause incorrect behavior and will be lost if the code is
+ * regenerated.
+ */
+
+'use strict';
+
+/**
+ * @class
+ * Initializes a new instance of the NotificationSendSucceededResult class.
+ * @constructor
+ * Notification send succeeded.
+ *
+ * @member {string} [notificationId] The unique notification identifier.
+ * 
+ */
+function NotificationSendSucceededResult() {
+}
+
+/**
+ * Defines the metadata of NotificationSendSucceededResult
+ *
+ * @returns {object} metadata of NotificationSendSucceededResult
+ *
+ */
+NotificationSendSucceededResult.prototype.mapper = function () {
+  return {
+    required: false,
+    serializedName: 'NotificationSendSucceededResult',
+    type: {
+      name: 'Composite',
+      className: 'NotificationSendSucceededResult',
+      modelProperties: {
+        notificationId: {
+          required: false,
+          serializedName: 'notification_id',
+          type: {
+            name: 'String'
+          }
+        }
+      }
+    }
+  };
+};
+
+module.exports = NotificationSendSucceededResult;
diff --git a/src/util/apis/generated/models/notificationTarget.js b/src/util/apis/generated/models/notificationTarget.js
new file mode 100644
index 0000000..a879d3c
--- /dev/null
+++ b/src/util/apis/generated/models/notificationTarget.js
@@ -0,0 +1,49 @@
+/*
+ * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
+ * Changes may cause incorrect behavior and will be lost if the code is
+ * regenerated.
+ */
+
+'use strict';
+
+/**
+ * @class
+ * Initializes a new instance of the NotificationTarget class.
+ * @constructor
+ * Generic notification target.
+ *
+ * @member {string} type Polymorhpic Discriminator
+ * 
+ */
+function NotificationTarget() {
+}
+
+/**
+ * Defines the metadata of NotificationTarget
+ *
+ * @returns {object} metadata of NotificationTarget
+ *
+ */
+NotificationTarget.prototype.mapper = function () {
+  return {
+    required: false,
+    serializedName: 'NotificationTarget',
+    type: {
+      name: 'Composite',
+      polymorphicDiscriminator: 'type',
+      uberParent: 'NotificationTarget',
+      className: 'NotificationTarget',
+      modelProperties: {
+        type: {
+          required: true,
+          serializedName: 'type',
+          type: {
+            name: 'String'
+          }
+        }
+      }
+    }
+  };
+};
+
+module.exports = NotificationTarget;
diff --git a/src/util/apis/generated/models/notificationsListResult.js b/src/util/apis/generated/models/notificationsListResult.js
new file mode 100644
index 0000000..5bb84fc
--- /dev/null
+++ b/src/util/apis/generated/models/notificationsListResult.js
@@ -0,0 +1,77 @@
+/*
+ * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
+ * Changes may cause incorrect behavior and will be lost if the code is
+ * regenerated.
+ */
+
+'use strict';
+
+var models = require('./index');
+
+var util = require('util');
+
+/**
+ * @class
+ * Initializes a new instance of the NotificationsListResult class.
+ * @constructor
+ * List of notifications
+ *
+ * @member {array} [values]
+ * 
+ * @member {number} [total] the total count of notifications
+ * 
+ * @member {string} [nextLink]
+ * 
+ */
+function NotificationsListResult() {
+}
+
+/**
+ * Defines the metadata of NotificationsListResult
+ *
+ * @returns {object} metadata of NotificationsListResult
+ *
+ */
+NotificationsListResult.prototype.mapper = function () {
+  return {
+    required: false,
+    serializedName: 'NotificationsListResult',
+    type: {
+      name: 'Composite',
+      className: 'NotificationsListResult',
+      modelProperties: {
+        values: {
+          required: false,
+          serializedName: 'values',
+          type: {
+            name: 'Sequence',
+            element: {
+                required: false,
+                serializedName: 'NotificationDetailsResultElementType',
+                type: {
+                  name: 'Composite',
+                  className: 'NotificationDetailsResult'
+                }
+            }
+          }
+        },
+        total: {
+          required: false,
+          serializedName: 'total',
+          type: {
+            name: 'Number'
+          }
+        },
+        nextLink: {
+          required: false,
+          serializedName: 'nextLink',
+          type: {
+            name: 'String'
+          }
+        }
+      }
+    }
+  };
+};
+
+module.exports = NotificationsListResult;
diff --git a/src/util/apis/generated/models/orgPatchRequest.js b/src/util/apis/generated/models/orgPatchRequest.js
deleted file mode 100644
index f222288..0000000
--- a/src/util/apis/generated/models/orgPatchRequest.js
+++ /dev/null
@@ -1,54 +0,0 @@
-/*
- * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
- * Changes may cause incorrect behavior and will be lost if the code is
- * regenerated.
- */
-
-'use strict';
-
-/**
- * @class
- * Initializes a new instance of the OrgPatchRequest class.
- * @constructor
- * @member {string} [description] The organization's description
- * 
- * @member {string} [displayName] The full (friendly) name of the organization.
- * 
- */
-function OrgPatchRequest() {
-}
-
-/**
- * Defines the metadata of OrgPatchRequest
- *
- * @returns {object} metadata of OrgPatchRequest
- *
- */
-OrgPatchRequest.prototype.mapper = function () {
-  return {
-    required: false,
-    serializedName: 'OrgPatchRequest',
-    type: {
-      name: 'Composite',
-      className: 'OrgPatchRequest',
-      modelProperties: {
-        description: {
-          required: false,
-          serializedName: 'description',
-          type: {
-            name: 'String'
-          }
-        },
-        displayName: {
-          required: false,
-          serializedName: 'display_name',
-          type: {
-            name: 'String'
-          }
-        }
-      }
-    }
-  };
-};
-
-module.exports = OrgPatchRequest;
diff --git a/src/util/apis/generated/models/organizationPatchRequest.js b/src/util/apis/generated/models/organizationPatchRequest.js
new file mode 100644
index 0000000..9e905bf
--- /dev/null
+++ b/src/util/apis/generated/models/organizationPatchRequest.js
@@ -0,0 +1,54 @@
+/*
+ * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
+ * Changes may cause incorrect behavior and will be lost if the code is
+ * regenerated.
+ */
+
+'use strict';
+
+/**
+ * @class
+ * Initializes a new instance of the OrganizationPatchRequest class.
+ * @constructor
+ * @member {string} [displayName] The full (friendly) name of the organization.
+ * 
+ * @member {string} [name] The name of the organization used in URLs
+ * 
+ */
+function OrganizationPatchRequest() {
+}
+
+/**
+ * Defines the metadata of OrganizationPatchRequest
+ *
+ * @returns {object} metadata of OrganizationPatchRequest
+ *
+ */
+OrganizationPatchRequest.prototype.mapper = function () {
+  return {
+    required: false,
+    serializedName: 'OrganizationPatchRequest',
+    type: {
+      name: 'Composite',
+      className: 'OrganizationPatchRequest',
+      modelProperties: {
+        displayName: {
+          required: false,
+          serializedName: 'display_name',
+          type: {
+            name: 'String'
+          }
+        },
+        name: {
+          required: false,
+          serializedName: 'name',
+          type: {
+            name: 'String'
+          }
+        }
+      }
+    }
+  };
+};
+
+module.exports = OrganizationPatchRequest;
diff --git a/src/util/apis/generated/models/organizationResponse.js b/src/util/apis/generated/models/organizationResponse.js
index 4d94f8d..79c730c 100644
--- a/src/util/apis/generated/models/organizationResponse.js
+++ b/src/util/apis/generated/models/organizationResponse.js
@@ -10,7 +10,8 @@
  * @class
  * Initializes a new instance of the OrganizationResponse class.
  * @constructor
- * @member {string} id The unique id (UUID) of the organization
+ * @member {string} collaboratorRole The role the current user has within the
+ * organization
  * 
  * @member {string} displayName The display name of the organization
  * 
@@ -34,9 +35,9 @@ OrganizationResponse.prototype.mapper = function () {
       name: 'Composite',
       className: 'OrganizationResponse',
       modelProperties: {
-        id: {
+        collaboratorRole: {
           required: true,
-          serializedName: 'id',
+          serializedName: 'collaborator_role',
           type: {
             name: 'String'
           }
diff --git a/src/util/apis/generated/models/organizationUserPatchRequest.js b/src/util/apis/generated/models/organizationUserPatchRequest.js
new file mode 100644
index 0000000..1fa922e
--- /dev/null
+++ b/src/util/apis/generated/models/organizationUserPatchRequest.js
@@ -0,0 +1,46 @@
+/*
+ * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
+ * Changes may cause incorrect behavior and will be lost if the code is
+ * regenerated.
+ */
+
+'use strict';
+
+/**
+ * @class
+ * Initializes a new instance of the OrganizationUserPatchRequest class.
+ * @constructor
+ * @member {string} [role] The user's role in the organizatiion. Possible
+ * values include: 'admin', 'collaborator'
+ * 
+ */
+function OrganizationUserPatchRequest() {
+}
+
+/**
+ * Defines the metadata of OrganizationUserPatchRequest
+ *
+ * @returns {object} metadata of OrganizationUserPatchRequest
+ *
+ */
+OrganizationUserPatchRequest.prototype.mapper = function () {
+  return {
+    required: false,
+    serializedName: 'OrganizationUserPatchRequest',
+    type: {
+      name: 'Composite',
+      className: 'OrganizationUserPatchRequest',
+      modelProperties: {
+        role: {
+          required: false,
+          serializedName: 'role',
+          type: {
+            name: 'String'
+          }
+        }
+      }
+    }
+  };
+};
+
+module.exports = OrganizationUserPatchRequest;
diff --git a/src/util/apis/generated/models/organizationUserResponse.js b/src/util/apis/generated/models/organizationUserResponse.js
index 4d66b65..ad84d66 100644
--- a/src/util/apis/generated/models/organizationUserResponse.js
+++ b/src/util/apis/generated/models/organizationUserResponse.js
@@ -15,8 +15,12 @@
  * @member {string} displayName The full name of the user. Might for example
  * be first and last name
  * 
+ * @member {string} joinedAt The date when the user joined the organization
+ * 
  * @member {string} name The unique name that is used to identify the user.
  * 
+ * @member {string} role The role the user has within the organization
+ * 
  */
 function OrganizationUserResponse() {
 }
@@ -49,12 +53,26 @@ OrganizationUserResponse.prototype.mapper = function () {
             name: 'String'
           }
         },
+        joinedAt: {
+          required: true,
+          serializedName: 'joined_at',
+          type: {
+            name: 'String'
+          }
+        },
         name: {
           required: true,
           serializedName: 'name',
           type: {
             name: 'String'
           }
+        },
+        role: {
+          required: true,
+          serializedName: 'role',
+          type: {
+            name: 'String'
+          }
         }
       }
     }
diff --git a/src/util/apis/generated/models/reasonStackFrame.js b/src/util/apis/generated/models/reasonStackFrame.js
index e7456be..41a7d29 100644
--- a/src/util/apis/generated/models/reasonStackFrame.js
+++ b/src/util/apis/generated/models/reasonStackFrame.js
@@ -34,6 +34,10 @@
  * 
  * @member {string} [methodParams] parameters of the frames method
  * 
+ * @member {string} [exceptionType] Exception type.
+ * 
+ * @member {string} [osExceptionType] OS exception type. (aka. SIGNAL)
+ * 
  */
 function ReasonStackFrame() {
 }
@@ -121,6 +125,20 @@ ReasonStackFrame.prototype.mapper = function () {
           type: {
             name: 'String'
           }
+        },
+        exceptionType: {
+          required: false,
+          serializedName: 'exception_type',
+          type: {
+            name: 'String'
+          }
+        },
+        osExceptionType: {
+          required: false,
+          serializedName: 'os_exception_type',
+          type: {
+            name: 'String'
+          }
         }
       }
     }
diff --git a/src/util/apis/generated/models/releaseDetails.js b/src/util/apis/generated/models/releaseDetails.js
index ccb80fe..54381fd 100644
--- a/src/util/apis/generated/models/releaseDetails.js
+++ b/src/util/apis/generated/models/releaseDetails.js
@@ -16,7 +16,7 @@ var util = require('util');
  * @constructor
  * Details of an uploaded release
  *
- * @member {string} [id] ID identifying this unique release.
+ * @member {number} [id] ID identifying this unique release.
  * 
  * @member {string} [status] OBSOLETE. Will be removed in next version. The
  * availability concept is now replaced with distributed. Any 'available'
@@ -46,6 +46,9 @@ var util = require('util');
  * 
  * @member {string} [minOs] The release's minimum required operating system.
  * 
+ * @member {string} [androidMinApiLevel] The release's minimum required
+ * Android API level.
+ * 
  * @member {string} [fingerprint] MD5 checksum of the release binary.
  * 
  * @member {string} [uploadedAt] UTC time in ISO 8601 format of the uploaded
@@ -85,7 +88,7 @@ ReleaseDetails.prototype.mapper = function () {
           required: false,
           serializedName: 'id',
           type: {
-            name: 'String'
+            name: 'Number'
           }
         },
         status: {
@@ -144,6 +147,13 @@ ReleaseDetails.prototype.mapper = function () {
             name: 'String'
           }
         },
+        androidMinApiLevel: {
+          required: false,
+          serializedName: 'android_min_api_level',
+          type: {
+            name: 'String'
+          }
+        },
         fingerprint: {
           required: false,
           serializedName: 'fingerprint',
diff --git a/src/util/apis/generated/models/sourceRepository.js b/src/util/apis/generated/models/sourceRepository.js
index bc426f8..13aa4b0 100644
--- a/src/util/apis/generated/models/sourceRepository.js
+++ b/src/util/apis/generated/models/sourceRepository.js
@@ -14,6 +14,8 @@
  *
  * @member {string} [name] The repository name
  * 
+ * @member {object} [cloneUrl] URL used to clone the repository
+ * 
  */
 function SourceRepository() {
 }
@@ -38,6 +40,13 @@ SourceRepository.prototype.mapper = function () {
           type: {
             name: 'String'
           }
+        },
+        cloneUrl: {
+          required: false,
+          serializedName: 'clone_url',
+          type: {
+            name: 'Object'
+          }
         }
       }
     }
diff --git a/src/util/apis/generated/models/userEmailRequest.js b/src/util/apis/generated/models/userEmailRequest.js
new file mode 100644
index 0000000..3b4d79f
--- /dev/null
+++ b/src/util/apis/generated/models/userEmailRequest.js
@@ -0,0 +1,45 @@
+/*
+ * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
+ * Changes may cause incorrect behavior and will be lost if the code is
+ * regenerated.
+ */
+
+'use strict';
+
+/**
+ * @class
+ * Initializes a new instance of the UserEmailRequest class.
+ * @constructor
+ * @member {string} userEmail The user's email address'
+ * 
+ */
+function UserEmailRequest() {
+}
+
+/**
+ * Defines the metadata of UserEmailRequest
+ *
+ * @returns {object} metadata of UserEmailRequest
+ *
+ */
+UserEmailRequest.prototype.mapper = function () {
+  return {
+    required: false,
+    serializedName: 'UserEmailRequest',
+    type: {
+      name: 'Composite',
+      className: 'UserEmailRequest',
+      modelProperties: {
+        userEmail: {
+          required: true,
+          serializedName: 'user_email',
+          type: {
+            name: 'String'
+          }
+        }
+      }
+    }
+  };
+};
+
+module.exports = UserEmailRequest;
diff --git a/src/util/apis/generated/models/userInvitationPermissionsUpdateRequest.js b/src/util/apis/generated/models/userInvitationPermissionsUpdateRequest.js
new file mode 100644
index 0000000..2543a7a
--- /dev/null
+++ b/src/util/apis/generated/models/userInvitationPermissionsUpdateRequest.js
@@ -0,0 +1,55 @@
+/*
+ * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
+ * Changes may cause incorrect behavior and will be lost if the code is
+ * regenerated.
+ */
+
+'use strict';
+
+var util = require('util');
+
+/**
+ * @class
+ * Initializes a new instance of the UserInvitationPermissionsUpdateRequest class.
+ * @constructor
+ * @member {array} permissions The permissions the user has for the app in the
+ * invitation
+ * 
+ */
+function UserInvitationPermissionsUpdateRequest() {
+}
+
+/**
+ * Defines the metadata of UserInvitationPermissionsUpdateRequest
+ *
+ * @returns {object} metadata of UserInvitationPermissionsUpdateRequest
+ *
+ */
+UserInvitationPermissionsUpdateRequest.prototype.mapper = function () {
+  return {
+    required: false,
+    serializedName: 'UserInvitationPermissionsUpdateRequest',
+    type: {
+      name: 'Composite',
+      className: 'UserInvitationPermissionsUpdateRequest',
+      modelProperties: {
+        permissions: {
+          required: true,
+          serializedName: 'permissions',
+          type: {
+            name: 'Sequence',
+            element: {
+                required: false,
+                serializedName: 'StringElementType',
+                type: {
+                  name: 'String'
+                }
+            }
+          }
+        }
+      }
+    }
+  };
+};
+
+module.exports = UserInvitationPermissionsUpdateRequest;
diff --git a/src/util/apis/generated/operations/account.js b/src/util/apis/generated/operations/account.js
index 4f70805..e3e45c9 100644
--- a/src/util/apis/generated/operations/account.js
+++ b/src/util/apis/generated/operations/account.js
@@ -725,169 +725,11 @@ Account.prototype.updateUserProfile = function (options, callback) {
 };
 
 /**
- * Returns a list of users that belong to an organization
+ * Removes the user from the app
  *
- * @param {string} orgName The organization's name
- * 
- * @param {object} [options] Optional Parameters.
- * 
- * @param {object} [options.customHeaders] Headers that will be added to the
- * request
+ * @param {string} ownerName The name of the owner
  * 
- * @param {function} callback
- *
- * @returns {function} callback(err, result, request, response)
- *
- *                      {Error}  err        - The Error object if an error occurred, null otherwise.
- *
- *                      {object} [result]   - The deserialized result object.
- *
- *                      {object} [request]  - The HTTP Request object if an error did not occur.
- *
- *                      {stream} [response] - The HTTP Response stream if an error did not occur.
- */
-Account.prototype.getOrganizationUsers = function (orgName, options, callback) {
-  var client = this.client;
-  if(!callback && typeof options === 'function') {
-    callback = options;
-    options = null;
-  }
-  if (!callback) {
-    throw new Error('callback cannot be null.');
-  }
-  // Validate
-  try {
-    if (orgName === null || orgName === undefined || typeof orgName.valueOf() !== 'string') {
-      throw new Error('orgName cannot be null or undefined and it must be of type string.');
-    }
-  } catch (error) {
-    return callback(error);
-  }
-
-  // Construct URL
-  var baseUrl = this.client.baseUri;
-  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/orgs/{org_name}/users';
-  requestUrl = requestUrl.replace('{org_name}', encodeURIComponent(orgName));
-
-  // Create HTTP transport objects
-  var httpRequest = new WebResource();
-  httpRequest.method = 'GET';
-  httpRequest.headers = {};
-  httpRequest.url = requestUrl;
-  // Set Headers
-  if(options) {
-    for(var headerName in options['customHeaders']) {
-      if (options['customHeaders'].hasOwnProperty(headerName)) {
-        httpRequest.headers[headerName] = options['customHeaders'][headerName];
-      }
-    }
-  }
-  httpRequest.headers['Content-Type'] = 'application/json; charset=utf-8';
-  httpRequest.body = null;
-  // Send Request
-  return client.pipeline(httpRequest, function (err, response, responseBody) {
-    if (err) {
-      return callback(err);
-    }
-    var statusCode = response.statusCode;
-    if (statusCode !== 200 && statusCode !== 400 && statusCode !== 404) {
-      var error = new Error(responseBody);
-      error.statusCode = response.statusCode;
-      error.request = msRest.stripRequest(httpRequest);
-      error.response = msRest.stripResponse(response);
-      if (responseBody === '') responseBody = null;
-      var parsedErrorResponse;
-      try {
-        parsedErrorResponse = JSON.parse(responseBody);
-        if (parsedErrorResponse) {
-          if (parsedErrorResponse.error) parsedErrorResponse = parsedErrorResponse.error;
-          if (parsedErrorResponse.code) error.code = parsedErrorResponse.code;
-          if (parsedErrorResponse.message) error.message = parsedErrorResponse.message;
-        }
-      } catch (defaultError) {
-        error.message = util.format('Error "%s" occurred in deserializing the responseBody ' + 
-                         '- "%s" for the default response.', defaultError.message, responseBody);
-        return callback(error);
-      }
-      return callback(error);
-    }
-    // Create Result
-    var result = null;
-    if (responseBody === '') responseBody = null;
-    // Deserialize Response
-    if (statusCode === 200) {
-      var parsedResponse = null;
-      try {
-        parsedResponse = JSON.parse(responseBody);
-        result = JSON.parse(responseBody);
-        if (parsedResponse !== null && parsedResponse !== undefined) {
-          var resultMapper = {
-            required: false,
-            serializedName: 'parsedResponse',
-            type: {
-              name: 'Sequence',
-              element: {
-                  required: false,
-                  serializedName: 'OrganizationUserResponseElementType',
-                  type: {
-                    name: 'Composite',
-                    className: 'OrganizationUserResponse'
-                  }
-              }
-            }
-          };
-          result = client.deserialize(resultMapper, parsedResponse, 'result');
-        }
-      } catch (error) {
-        var deserializationError = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
-        deserializationError.request = msRest.stripRequest(httpRequest);
-        deserializationError.response = msRest.stripResponse(response);
-        return callback(deserializationError);
-      }
-    }
-    // Deserialize Response
-    if (statusCode === 400) {
-      var parsedResponse = null;
-      try {
-        parsedResponse = JSON.parse(responseBody);
-        result = JSON.parse(responseBody);
-        if (parsedResponse !== null && parsedResponse !== undefined) {
-          var resultMapper = new client.models['ErrorResponse']().mapper();
-          result = client.deserialize(resultMapper, parsedResponse, 'result');
-        }
-      } catch (error) {
-        var deserializationError1 = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
-        deserializationError1.request = msRest.stripRequest(httpRequest);
-        deserializationError1.response = msRest.stripResponse(response);
-        return callback(deserializationError1);
-      }
-    }
-    // Deserialize Response
-    if (statusCode === 404) {
-      var parsedResponse = null;
-      try {
-        parsedResponse = JSON.parse(responseBody);
-        result = JSON.parse(responseBody);
-        if (parsedResponse !== null && parsedResponse !== undefined) {
-          var resultMapper = new client.models['ErrorResponse']().mapper();
-          result = client.deserialize(resultMapper, parsedResponse, 'result');
-        }
-      } catch (error) {
-        var deserializationError2 = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
-        deserializationError2.request = msRest.stripRequest(httpRequest);
-        deserializationError2.response = msRest.stripResponse(response);
-        return callback(deserializationError2);
-      }
-    }
-
-    return callback(null, result, httpRequest, response);
-  });
-};
-
-/**
- * Invites a new or existing user to an organization
- *
- * @param {string} orgName The organization's name
+ * @param {string} appName The name of the application
  * 
  * @param {string} userEmail The email of the user to invite
  * 
@@ -909,7 +751,7 @@ Account.prototype.getOrganizationUsers = function (orgName, options, callback) {
  *
  *                      {stream} [response] - The HTTP Response stream if an error did not occur.
  */
-Account.prototype.inviteOrganizationUser = function (orgName, userEmail, options, callback) {
+Account.prototype.deleteAppUser = function (ownerName, appName, userEmail, options, callback) {
   var client = this.client;
   if(!callback && typeof options === 'function') {
     callback = options;
@@ -920,8 +762,11 @@ Account.prototype.inviteOrganizationUser = function (orgName, userEmail, options
   }
   // Validate
   try {
-    if (orgName === null || orgName === undefined || typeof orgName.valueOf() !== 'string') {
-      throw new Error('orgName cannot be null or undefined and it must be of type string.');
+    if (ownerName === null || ownerName === undefined || typeof ownerName.valueOf() !== 'string') {
+      throw new Error('ownerName cannot be null or undefined and it must be of type string.');
+    }
+    if (appName === null || appName === undefined || typeof appName.valueOf() !== 'string') {
+      throw new Error('appName cannot be null or undefined and it must be of type string.');
     }
     if (userEmail === null || userEmail === undefined || typeof userEmail.valueOf() !== 'string') {
       throw new Error('userEmail cannot be null or undefined and it must be of type string.');
@@ -932,13 +777,14 @@ Account.prototype.inviteOrganizationUser = function (orgName, userEmail, options
 
   // Construct URL
   var baseUrl = this.client.baseUri;
-  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/orgs/{org_name}/invitations/{user_email}';
-  requestUrl = requestUrl.replace('{org_name}', encodeURIComponent(orgName));
+  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/users/{user_email}';
+  requestUrl = requestUrl.replace('{owner_name}', encodeURIComponent(ownerName));
+  requestUrl = requestUrl.replace('{app_name}', encodeURIComponent(appName));
   requestUrl = requestUrl.replace('{user_email}', encodeURIComponent(userEmail));
 
   // Create HTTP transport objects
   var httpRequest = new WebResource();
-  httpRequest.method = 'POST';
+  httpRequest.method = 'DELETE';
   httpRequest.headers = {};
   httpRequest.url = requestUrl;
   // Set Headers
@@ -957,7 +803,7 @@ Account.prototype.inviteOrganizationUser = function (orgName, userEmail, options
       return callback(err);
     }
     var statusCode = response.statusCode;
-    if (statusCode !== 204 && statusCode !== 400 && statusCode !== 403 && statusCode !== 404 && statusCode !== 409) {
+    if (statusCode !== 204 && statusCode !== 400 && statusCode !== 403 && statusCode !== 404) {
       var error = new Error(responseBody);
       error.statusCode = response.statusCode;
       error.request = msRest.stripRequest(httpRequest);
@@ -1032,37 +878,19 @@ Account.prototype.inviteOrganizationUser = function (orgName, userEmail, options
         return callback(deserializationError2);
       }
     }
-    // Deserialize Response
-    if (statusCode === 409) {
-      var parsedResponse = null;
-      try {
-        parsedResponse = JSON.parse(responseBody);
-        result = JSON.parse(responseBody);
-        if (parsedResponse !== null && parsedResponse !== undefined) {
-          var resultMapper = new client.models['ErrorResponse']().mapper();
-          result = client.deserialize(resultMapper, parsedResponse, 'result');
-        }
-      } catch (error) {
-        var deserializationError3 = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
-        deserializationError3.request = msRest.stripRequest(httpRequest);
-        deserializationError3.response = msRest.stripResponse(response);
-        return callback(deserializationError3);
-      }
-    }
 
     return callback(null, result, httpRequest, response);
   });
 };
 
 /**
- * Removes the user from the app
+ * Returns the users associated with the app specified with the given app name
+ * which belongs to the given owner.
  *
  * @param {string} ownerName The name of the owner
  * 
  * @param {string} appName The name of the application
  * 
- * @param {string} userEmail The email of the user to invite
- * 
  * @param {object} [options] Optional Parameters.
  * 
  * @param {object} [options.customHeaders] Headers that will be added to the
@@ -1075,13 +903,12 @@ Account.prototype.inviteOrganizationUser = function (orgName, userEmail, options
  *                      {Error}  err        - The Error object if an error occurred, null otherwise.
  *
  *                      {object} [result]   - The deserialized result object.
- *                      See {@link ErrorResponse} for more information.
  *
  *                      {object} [request]  - The HTTP Request object if an error did not occur.
  *
  *                      {stream} [response] - The HTTP Response stream if an error did not occur.
  */
-Account.prototype.deleteAppUser = function (ownerName, appName, userEmail, options, callback) {
+Account.prototype.getAppUsers = function (ownerName, appName, options, callback) {
   var client = this.client;
   if(!callback && typeof options === 'function') {
     callback = options;
@@ -1098,23 +925,19 @@ Account.prototype.deleteAppUser = function (ownerName, appName, userEmail, optio
     if (appName === null || appName === undefined || typeof appName.valueOf() !== 'string') {
       throw new Error('appName cannot be null or undefined and it must be of type string.');
     }
-    if (userEmail === null || userEmail === undefined || typeof userEmail.valueOf() !== 'string') {
-      throw new Error('userEmail cannot be null or undefined and it must be of type string.');
-    }
   } catch (error) {
     return callback(error);
   }
 
   // Construct URL
   var baseUrl = this.client.baseUri;
-  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/users/{user_email}';
+  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/users';
   requestUrl = requestUrl.replace('{owner_name}', encodeURIComponent(ownerName));
   requestUrl = requestUrl.replace('{app_name}', encodeURIComponent(appName));
-  requestUrl = requestUrl.replace('{user_email}', encodeURIComponent(userEmail));
 
   // Create HTTP transport objects
   var httpRequest = new WebResource();
-  httpRequest.method = 'DELETE';
+  httpRequest.method = 'GET';
   httpRequest.headers = {};
   httpRequest.url = requestUrl;
   // Set Headers
@@ -1133,7 +956,7 @@ Account.prototype.deleteAppUser = function (ownerName, appName, userEmail, optio
       return callback(err);
     }
     var statusCode = response.statusCode;
-    if (statusCode !== 204 && statusCode !== 400 && statusCode !== 403 && statusCode !== 404) {
+    if (statusCode !== 200 && statusCode !== 400 && statusCode !== 403 && statusCode !== 404) {
       var error = new Error(responseBody);
       error.statusCode = response.statusCode;
       error.request = msRest.stripRequest(httpRequest);
@@ -1158,13 +981,27 @@ Account.prototype.deleteAppUser = function (ownerName, appName, userEmail, optio
     var result = null;
     if (responseBody === '') responseBody = null;
     // Deserialize Response
-    if (statusCode === 400) {
+    if (statusCode === 200) {
       var parsedResponse = null;
       try {
         parsedResponse = JSON.parse(responseBody);
         result = JSON.parse(responseBody);
         if (parsedResponse !== null && parsedResponse !== undefined) {
-          var resultMapper = new client.models['ErrorResponse']().mapper();
+          var resultMapper = {
+            required: false,
+            serializedName: 'parsedResponse',
+            type: {
+              name: 'Sequence',
+              element: {
+                  required: false,
+                  serializedName: 'UserProfileResponseElementType',
+                  type: {
+                    name: 'Composite',
+                    className: 'UserProfileResponse'
+                  }
+              }
+            }
+          };
           result = client.deserialize(resultMapper, parsedResponse, 'result');
         }
       } catch (error) {
@@ -1175,7 +1012,7 @@ Account.prototype.deleteAppUser = function (ownerName, appName, userEmail, optio
       }
     }
     // Deserialize Response
-    if (statusCode === 403) {
+    if (statusCode === 400) {
       var parsedResponse = null;
       try {
         parsedResponse = JSON.parse(responseBody);
@@ -1192,7 +1029,7 @@ Account.prototype.deleteAppUser = function (ownerName, appName, userEmail, optio
       }
     }
     // Deserialize Response
-    if (statusCode === 404) {
+    if (statusCode === 403) {
       var parsedResponse = null;
       try {
         parsedResponse = JSON.parse(responseBody);
@@ -1208,14 +1045,31 @@ Account.prototype.deleteAppUser = function (ownerName, appName, userEmail, optio
         return callback(deserializationError2);
       }
     }
+    // Deserialize Response
+    if (statusCode === 404) {
+      var parsedResponse = null;
+      try {
+        parsedResponse = JSON.parse(responseBody);
+        result = JSON.parse(responseBody);
+        if (parsedResponse !== null && parsedResponse !== undefined) {
+          var resultMapper = new client.models['ErrorResponse']().mapper();
+          result = client.deserialize(resultMapper, parsedResponse, 'result');
+        }
+      } catch (error) {
+        var deserializationError3 = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
+        deserializationError3.request = msRest.stripRequest(httpRequest);
+        deserializationError3.response = msRest.stripResponse(response);
+        return callback(deserializationError3);
+      }
+    }
 
     return callback(null, result, httpRequest, response);
   });
 };
 
 /**
- * Returns the users associated with the app specified with the given app name
- * which belongs to the given owner.
+ * Returns the testers associated with the app specified with the given app
+ * name which belongs to the given owner.
  *
  * @param {string} ownerName The name of the owner
  * 
@@ -1238,7 +1092,7 @@ Account.prototype.deleteAppUser = function (ownerName, appName, userEmail, optio
  *
  *                      {stream} [response] - The HTTP Response stream if an error did not occur.
  */
-Account.prototype.getAppUsers = function (ownerName, appName, options, callback) {
+Account.prototype.getAppTesters = function (ownerName, appName, options, callback) {
   var client = this.client;
   if(!callback && typeof options === 'function') {
     callback = options;
@@ -1261,7 +1115,7 @@ Account.prototype.getAppUsers = function (ownerName, appName, options, callback)
 
   // Construct URL
   var baseUrl = this.client.baseUri;
-  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/users';
+  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/testers';
   requestUrl = requestUrl.replace('{owner_name}', encodeURIComponent(ownerName));
   requestUrl = requestUrl.replace('{app_name}', encodeURIComponent(appName));
 
@@ -1398,13 +1252,17 @@ Account.prototype.getAppUsers = function (ownerName, appName, options, callback)
 };
 
 /**
- * Returns the testers associated with the app specified with the given app
- * name which belongs to the given owner.
+ * Update pending invitation permission
  *
  * @param {string} ownerName The name of the owner
  * 
  * @param {string} appName The name of the application
  * 
+ * @param {string} userEmail The email of the user to invite
+ * 
+ * @param {array} permissions The permissions the user has for the app in the
+ * invitation
+ * 
  * @param {object} [options] Optional Parameters.
  * 
  * @param {object} [options.customHeaders] Headers that will be added to the
@@ -1417,12 +1275,13 @@ Account.prototype.getAppUsers = function (ownerName, appName, options, callback)
  *                      {Error}  err        - The Error object if an error occurred, null otherwise.
  *
  *                      {object} [result]   - The deserialized result object.
+ *                      See {@link ErrorResponse} for more information.
  *
  *                      {object} [request]  - The HTTP Request object if an error did not occur.
  *
  *                      {stream} [response] - The HTTP Response stream if an error did not occur.
  */
-Account.prototype.getAppTesters = function (ownerName, appName, options, callback) {
+Account.prototype.updateAppUserInvitationsPermission = function (ownerName, appName, userEmail, permissions, options, callback) {
   var client = this.client;
   if(!callback && typeof options === 'function') {
     callback = options;
@@ -1439,19 +1298,36 @@ Account.prototype.getAppTesters = function (ownerName, appName, options, callbac
     if (appName === null || appName === undefined || typeof appName.valueOf() !== 'string') {
       throw new Error('appName cannot be null or undefined and it must be of type string.');
     }
+    if (userEmail === null || userEmail === undefined || typeof userEmail.valueOf() !== 'string') {
+      throw new Error('userEmail cannot be null or undefined and it must be of type string.');
+    }
+    if (!util.isArray(permissions)) {
+      throw new Error('permissions cannot be null or undefined and it must be of type array.');
+    }
+    for (var i = 0; i < permissions.length; i++) {
+      if (permissions[i] !== null && permissions[i] !== undefined && typeof permissions[i].valueOf() !== 'string') {
+        throw new Error('permissions[i] must be of type string.');
+      }
+    }
   } catch (error) {
     return callback(error);
   }
+  var userInvitationPermissionsData;
+  if (permissions !== null && permissions !== undefined) {
+      userInvitationPermissionsData = new client.models['UserInvitationPermissionsUpdateRequest']();
+      userInvitationPermissionsData.permissions = permissions;
+  }
 
   // Construct URL
   var baseUrl = this.client.baseUri;
-  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/testers';
+  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/invitations/{user_email}';
   requestUrl = requestUrl.replace('{owner_name}', encodeURIComponent(ownerName));
   requestUrl = requestUrl.replace('{app_name}', encodeURIComponent(appName));
+  requestUrl = requestUrl.replace('{user_email}', encodeURIComponent(userEmail));
 
   // Create HTTP transport objects
   var httpRequest = new WebResource();
-  httpRequest.method = 'GET';
+  httpRequest.method = 'PATCH';
   httpRequest.headers = {};
   httpRequest.url = requestUrl;
   // Set Headers
@@ -1463,14 +1339,28 @@ Account.prototype.getAppTesters = function (ownerName, appName, options, callbac
     }
   }
   httpRequest.headers['Content-Type'] = 'application/json; charset=utf-8';
-  httpRequest.body = null;
+  // Serialize Request
+  var requestContent = null;
+  var requestModel = null;
+  try {
+    if (userInvitationPermissionsData !== null && userInvitationPermissionsData !== undefined) {
+      var requestModelMapper = new client.models['UserInvitationPermissionsUpdateRequest']().mapper();
+      requestModel = client.serialize(requestModelMapper, userInvitationPermissionsData, 'userInvitationPermissionsData');
+      requestContent = JSON.stringify(requestModel);
+    }
+  } catch (error) {
+    var serializationError = new Error(util.format('Error "%s" occurred in serializing the ' + 
+        'payload - "%s"', error.message, util.inspect(userInvitationPermissionsData, {depth: null})));
+    return callback(serializationError);
+  }
+  httpRequest.body = requestContent;
   // Send Request
   return client.pipeline(httpRequest, function (err, response, responseBody) {
     if (err) {
       return callback(err);
     }
     var statusCode = response.statusCode;
-    if (statusCode !== 200 && statusCode !== 400 && statusCode !== 403 && statusCode !== 404) {
+    if (statusCode !== 204 && statusCode !== 400 && statusCode !== 403 && statusCode !== 404) {
       var error = new Error(responseBody);
       error.statusCode = response.statusCode;
       error.request = msRest.stripRequest(httpRequest);
@@ -1495,27 +1385,13 @@ Account.prototype.getAppTesters = function (ownerName, appName, options, callbac
     var result = null;
     if (responseBody === '') responseBody = null;
     // Deserialize Response
-    if (statusCode === 200) {
+    if (statusCode === 400) {
       var parsedResponse = null;
       try {
         parsedResponse = JSON.parse(responseBody);
         result = JSON.parse(responseBody);
         if (parsedResponse !== null && parsedResponse !== undefined) {
-          var resultMapper = {
-            required: false,
-            serializedName: 'parsedResponse',
-            type: {
-              name: 'Sequence',
-              element: {
-                  required: false,
-                  serializedName: 'UserProfileResponseElementType',
-                  type: {
-                    name: 'Composite',
-                    className: 'UserProfileResponse'
-                  }
-              }
-            }
-          };
+          var resultMapper = new client.models['ErrorResponse']().mapper();
           result = client.deserialize(resultMapper, parsedResponse, 'result');
         }
       } catch (error) {
@@ -1526,7 +1402,7 @@ Account.prototype.getAppTesters = function (ownerName, appName, options, callbac
       }
     }
     // Deserialize Response
-    if (statusCode === 400) {
+    if (statusCode === 403) {
       var parsedResponse = null;
       try {
         parsedResponse = JSON.parse(responseBody);
@@ -1543,7 +1419,7 @@ Account.prototype.getAppTesters = function (ownerName, appName, options, callbac
       }
     }
     // Deserialize Response
-    if (statusCode === 403) {
+    if (statusCode === 404) {
       var parsedResponse = null;
       try {
         parsedResponse = JSON.parse(responseBody);
@@ -1559,30 +1435,13 @@ Account.prototype.getAppTesters = function (ownerName, appName, options, callbac
         return callback(deserializationError2);
       }
     }
-    // Deserialize Response
-    if (statusCode === 404) {
-      var parsedResponse = null;
-      try {
-        parsedResponse = JSON.parse(responseBody);
-        result = JSON.parse(responseBody);
-        if (parsedResponse !== null && parsedResponse !== undefined) {
-          var resultMapper = new client.models['ErrorResponse']().mapper();
-          result = client.deserialize(resultMapper, parsedResponse, 'result');
-        }
-      } catch (error) {
-        var deserializationError3 = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
-        deserializationError3.request = msRest.stripRequest(httpRequest);
-        deserializationError3.response = msRest.stripResponse(response);
-        return callback(deserializationError3);
-      }
-    }
 
     return callback(null, result, httpRequest, response);
   });
 };
 
 /**
- * Invites a new or existing user to an app
+ * Removes a user's invitation to an app
  *
  * @param {string} ownerName The name of the owner
  * 
@@ -1608,7 +1467,7 @@ Account.prototype.getAppTesters = function (ownerName, appName, options, callbac
  *
  *                      {stream} [response] - The HTTP Response stream if an error did not occur.
  */
-Account.prototype.inviteAppUser = function (ownerName, appName, userEmail, options, callback) {
+Account.prototype.deleteAppInvitation = function (ownerName, appName, userEmail, options, callback) {
   var client = this.client;
   if(!callback && typeof options === 'function') {
     callback = options;
@@ -1641,7 +1500,7 @@ Account.prototype.inviteAppUser = function (ownerName, appName, userEmail, optio
 
   // Create HTTP transport objects
   var httpRequest = new WebResource();
-  httpRequest.method = 'POST';
+  httpRequest.method = 'DELETE';
   httpRequest.headers = {};
   httpRequest.url = requestUrl;
   // Set Headers
@@ -1660,7 +1519,7 @@ Account.prototype.inviteAppUser = function (ownerName, appName, userEmail, optio
       return callback(err);
     }
     var statusCode = response.statusCode;
-    if (statusCode !== 204 && statusCode !== 400 && statusCode !== 403 && statusCode !== 404 && statusCode !== 409) {
+    if (statusCode !== 204 && statusCode !== 400 && statusCode !== 403 && statusCode !== 404) {
       var error = new Error(responseBody);
       error.statusCode = response.statusCode;
       error.request = msRest.stripRequest(httpRequest);
@@ -1735,36 +1594,19 @@ Account.prototype.inviteAppUser = function (ownerName, appName, userEmail, optio
         return callback(deserializationError2);
       }
     }
-    // Deserialize Response
-    if (statusCode === 409) {
-      var parsedResponse = null;
-      try {
-        parsedResponse = JSON.parse(responseBody);
-        result = JSON.parse(responseBody);
-        if (parsedResponse !== null && parsedResponse !== undefined) {
-          var resultMapper = new client.models['ErrorResponse']().mapper();
-          result = client.deserialize(resultMapper, parsedResponse, 'result');
-        }
-      } catch (error) {
-        var deserializationError3 = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
-        deserializationError3.request = msRest.stripRequest(httpRequest);
-        deserializationError3.response = msRest.stripResponse(response);
-        return callback(deserializationError3);
-      }
-    }
 
     return callback(null, result, httpRequest, response);
   });
 };
 
 /**
- * Removes a user's invitation to an app
+ * Invites a new or existing user to an app
  *
  * @param {string} ownerName The name of the owner
  * 
  * @param {string} appName The name of the application
  * 
- * @param {string} userEmail The email of the user to invite
+ * @param {string} userEmail The user's email address'
  * 
  * @param {object} [options] Optional Parameters.
  * 
@@ -1784,7 +1626,7 @@ Account.prototype.inviteAppUser = function (ownerName, appName, userEmail, optio
  *
  *                      {stream} [response] - The HTTP Response stream if an error did not occur.
  */
-Account.prototype.deleteAppInvitation = function (ownerName, appName, userEmail, options, callback) {
+Account.prototype.inviteAppUser = function (ownerName, appName, userEmail, options, callback) {
   var client = this.client;
   if(!callback && typeof options === 'function') {
     callback = options;
@@ -1807,17 +1649,21 @@ Account.prototype.deleteAppInvitation = function (ownerName, appName, userEmail,
   } catch (error) {
     return callback(error);
   }
+  var userEmail1;
+  if (userEmail !== null && userEmail !== undefined) {
+      userEmail1 = new client.models['UserEmailRequest']();
+      userEmail1.userEmail = userEmail;
+  }
 
   // Construct URL
   var baseUrl = this.client.baseUri;
-  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/invitations/{user_email}';
+  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/invitations';
   requestUrl = requestUrl.replace('{owner_name}', encodeURIComponent(ownerName));
   requestUrl = requestUrl.replace('{app_name}', encodeURIComponent(appName));
-  requestUrl = requestUrl.replace('{user_email}', encodeURIComponent(userEmail));
 
   // Create HTTP transport objects
   var httpRequest = new WebResource();
-  httpRequest.method = 'DELETE';
+  httpRequest.method = 'POST';
   httpRequest.headers = {};
   httpRequest.url = requestUrl;
   // Set Headers
@@ -1829,14 +1675,28 @@ Account.prototype.deleteAppInvitation = function (ownerName, appName, userEmail,
     }
   }
   httpRequest.headers['Content-Type'] = 'application/json; charset=utf-8';
-  httpRequest.body = null;
+  // Serialize Request
+  var requestContent = null;
+  var requestModel = null;
+  try {
+    if (userEmail1 !== null && userEmail1 !== undefined) {
+      var requestModelMapper = new client.models['UserEmailRequest']().mapper();
+      requestModel = client.serialize(requestModelMapper, userEmail1, 'userEmail1');
+      requestContent = JSON.stringify(requestModel);
+    }
+  } catch (error) {
+    var serializationError = new Error(util.format('Error "%s" occurred in serializing the ' + 
+        'payload - "%s"', error.message, util.inspect(userEmail1, {depth: null})));
+    return callback(serializationError);
+  }
+  httpRequest.body = requestContent;
   // Send Request
   return client.pipeline(httpRequest, function (err, response, responseBody) {
     if (err) {
       return callback(err);
     }
     var statusCode = response.statusCode;
-    if (statusCode !== 204 && statusCode !== 400 && statusCode !== 403 && statusCode !== 404) {
+    if (statusCode !== 204 && statusCode !== 400 && statusCode !== 403 && statusCode !== 404 && statusCode !== 409) {
       var error = new Error(responseBody);
       error.statusCode = response.statusCode;
       error.request = msRest.stripRequest(httpRequest);
@@ -1911,6 +1771,23 @@ Account.prototype.deleteAppInvitation = function (ownerName, appName, userEmail,
         return callback(deserializationError2);
       }
     }
+    // Deserialize Response
+    if (statusCode === 409) {
+      var parsedResponse = null;
+      try {
+        parsedResponse = JSON.parse(responseBody);
+        result = JSON.parse(responseBody);
+        if (parsedResponse !== null && parsedResponse !== undefined) {
+          var resultMapper = new client.models['ErrorResponse']().mapper();
+          result = client.deserialize(resultMapper, parsedResponse, 'result');
+        }
+      } catch (error) {
+        var deserializationError3 = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
+        deserializationError3.request = msRest.stripRequest(httpRequest);
+        deserializationError3.response = msRest.stripResponse(response);
+        return callback(deserializationError3);
+      }
+    }
 
     return callback(null, result, httpRequest, response);
   });
@@ -4113,10 +3990,10 @@ Account.prototype.deleteApp = function (appName, ownerName, options, callback) {
  * @param {string} [app.name] The name of the app used in URLs
  * 
  * @param {string} app.os The OS the app will be running on. Possible values
- * include: 'iOS', 'Android'
+ * include: 'iOS', 'Android', 'Windows'
  * 
  * @param {string} app.platform The platform of the app. Possible values
- * include: 'Objective-C-Swift', 'Java', 'React-Native', 'Xamarin'
+ * include: 'Java', 'Objective-C-Swift', 'React-Native', 'UWP', 'Xamarin'
  * 
  * @param {object} [options] Optional Parameters.
  * 
@@ -4326,7 +4203,7 @@ Account.prototype.createApp = function (app, options, callback) {
  *
  *                      {stream} [response] - The HTTP Response stream if an error did not occur.
  */
-Account.prototype.getApps = function (options, callback) {
+Account.prototype.getMemberApps = function (options, callback) {
   var client = this.client;
   if(!callback && typeof options === 'function') {
     callback = options;
diff --git a/src/util/apis/generated/operations/analytics.js b/src/util/apis/generated/operations/analytics.js
index 9964bda..bb7b1b0 100644
--- a/src/util/apis/generated/operations/analytics.js
+++ b/src/util/apis/generated/operations/analytics.js
@@ -2466,6 +2466,117 @@ Analytics.prototype.eventPerDeviceCount = function (eventName, start, ownerName,
 };
 
 /**
+ * Delete the set of Events with the specified event names
+ *
+ * @param {string} eventName The id of the event
+ * 
+ * @param {string} ownerName The name of the owner
+ * 
+ * @param {string} appName The name of the application
+ * 
+ * @param {object} [options] Optional Parameters.
+ * 
+ * @param {object} [options.customHeaders] Headers that will be added to the
+ * request
+ * 
+ * @param {function} callback
+ *
+ * @returns {function} callback(err, result, request, response)
+ *
+ *                      {Error}  err        - The Error object if an error occurred, null otherwise.
+ *
+ *                      {null} [result]   - The deserialized result object.
+ *
+ *                      {object} [request]  - The HTTP Request object if an error did not occur.
+ *
+ *                      {stream} [response] - The HTTP Response stream if an error did not occur.
+ */
+Analytics.prototype.eventsDelete = function (eventName, ownerName, appName, options, callback) {
+  var client = this.client;
+  if(!callback && typeof options === 'function') {
+    callback = options;
+    options = null;
+  }
+  if (!callback) {
+    throw new Error('callback cannot be null.');
+  }
+  // Validate
+  try {
+    if (eventName === null || eventName === undefined || typeof eventName.valueOf() !== 'string') {
+      throw new Error('eventName cannot be null or undefined and it must be of type string.');
+    }
+    if (ownerName === null || ownerName === undefined || typeof ownerName.valueOf() !== 'string') {
+      throw new Error('ownerName cannot be null or undefined and it must be of type string.');
+    }
+    if (appName === null || appName === undefined || typeof appName.valueOf() !== 'string') {
+      throw new Error('appName cannot be null or undefined and it must be of type string.');
+    }
+  } catch (error) {
+    return callback(error);
+  }
+
+  // Construct URL
+  var baseUrl = this.client.baseUri;
+  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/analytics/events/{event_name}';
+  requestUrl = requestUrl.replace('{event_name}', encodeURIComponent(eventName));
+  requestUrl = requestUrl.replace('{owner_name}', encodeURIComponent(ownerName));
+  requestUrl = requestUrl.replace('{app_name}', encodeURIComponent(appName));
+
+  // Create HTTP transport objects
+  var httpRequest = new WebResource();
+  httpRequest.method = 'DELETE';
+  httpRequest.headers = {};
+  httpRequest.url = requestUrl;
+  // Set Headers
+  if(options) {
+    for(var headerName in options['customHeaders']) {
+      if (options['customHeaders'].hasOwnProperty(headerName)) {
+        httpRequest.headers[headerName] = options['customHeaders'][headerName];
+      }
+    }
+  }
+  httpRequest.headers['Content-Type'] = 'application/json; charset=utf-8';
+  httpRequest.body = null;
+  // Send Request
+  return client.pipeline(httpRequest, function (err, response, responseBody) {
+    if (err) {
+      return callback(err);
+    }
+    var statusCode = response.statusCode;
+    if (statusCode !== 200) {
+      var error = new Error(responseBody);
+      error.statusCode = response.statusCode;
+      error.request = msRest.stripRequest(httpRequest);
+      error.response = msRest.stripResponse(response);
+      if (responseBody === '') responseBody = null;
+      var parsedErrorResponse;
+      try {
+        parsedErrorResponse = JSON.parse(responseBody);
+        if (parsedErrorResponse) {
+          if (parsedErrorResponse.error) parsedErrorResponse = parsedErrorResponse.error;
+          if (parsedErrorResponse.code) error.code = parsedErrorResponse.code;
+          if (parsedErrorResponse.message) error.message = parsedErrorResponse.message;
+        }
+        if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {
+          var resultMapper = new client.models['ErrorModel']().mapper();
+          error.body = client.deserialize(resultMapper, parsedErrorResponse, 'error.body');
+        }
+      } catch (defaultError) {
+        error.message = util.format('Error "%s" occurred in deserializing the responseBody ' + 
+                         '- "%s" for the default response.', defaultError.message, responseBody);
+        return callback(error);
+      }
+      return callback(error);
+    }
+    // Create Result
+    var result = null;
+    if (responseBody === '') responseBody = null;
+
+    return callback(null, result, httpRequest, response);
+  });
+};
+
+/**
  * Count of active events in the time range ordered by event.
  *
  * @param {date} start Start date time in data in ISO 8601 date time format
@@ -2695,6 +2806,117 @@ Analytics.prototype.events = function (start, ownerName, appName, options, callb
 };
 
 /**
+ * Delete the set of Events with the specified event names
+ *
+ * @param {string} eventName The id of the event
+ * 
+ * @param {string} ownerName The name of the owner
+ * 
+ * @param {string} appName The name of the application
+ * 
+ * @param {object} [options] Optional Parameters.
+ * 
+ * @param {object} [options.customHeaders] Headers that will be added to the
+ * request
+ * 
+ * @param {function} callback
+ *
+ * @returns {function} callback(err, result, request, response)
+ *
+ *                      {Error}  err        - The Error object if an error occurred, null otherwise.
+ *
+ *                      {null} [result]   - The deserialized result object.
+ *
+ *                      {object} [request]  - The HTTP Request object if an error did not occur.
+ *
+ *                      {stream} [response] - The HTTP Response stream if an error did not occur.
+ */
+Analytics.prototype.eventsDeleteLogs = function (eventName, ownerName, appName, options, callback) {
+  var client = this.client;
+  if(!callback && typeof options === 'function') {
+    callback = options;
+    options = null;
+  }
+  if (!callback) {
+    throw new Error('callback cannot be null.');
+  }
+  // Validate
+  try {
+    if (eventName === null || eventName === undefined || typeof eventName.valueOf() !== 'string') {
+      throw new Error('eventName cannot be null or undefined and it must be of type string.');
+    }
+    if (ownerName === null || ownerName === undefined || typeof ownerName.valueOf() !== 'string') {
+      throw new Error('ownerName cannot be null or undefined and it must be of type string.');
+    }
+    if (appName === null || appName === undefined || typeof appName.valueOf() !== 'string') {
+      throw new Error('appName cannot be null or undefined and it must be of type string.');
+    }
+  } catch (error) {
+    return callback(error);
+  }
+
+  // Construct URL
+  var baseUrl = this.client.baseUri;
+  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/analytics/event_logs/{event_name}';
+  requestUrl = requestUrl.replace('{event_name}', encodeURIComponent(eventName));
+  requestUrl = requestUrl.replace('{owner_name}', encodeURIComponent(ownerName));
+  requestUrl = requestUrl.replace('{app_name}', encodeURIComponent(appName));
+
+  // Create HTTP transport objects
+  var httpRequest = new WebResource();
+  httpRequest.method = 'DELETE';
+  httpRequest.headers = {};
+  httpRequest.url = requestUrl;
+  // Set Headers
+  if(options) {
+    for(var headerName in options['customHeaders']) {
+      if (options['customHeaders'].hasOwnProperty(headerName)) {
+        httpRequest.headers[headerName] = options['customHeaders'][headerName];
+      }
+    }
+  }
+  httpRequest.headers['Content-Type'] = 'application/json; charset=utf-8';
+  httpRequest.body = null;
+  // Send Request
+  return client.pipeline(httpRequest, function (err, response, responseBody) {
+    if (err) {
+      return callback(err);
+    }
+    var statusCode = response.statusCode;
+    if (statusCode !== 200) {
+      var error = new Error(responseBody);
+      error.statusCode = response.statusCode;
+      error.request = msRest.stripRequest(httpRequest);
+      error.response = msRest.stripResponse(response);
+      if (responseBody === '') responseBody = null;
+      var parsedErrorResponse;
+      try {
+        parsedErrorResponse = JSON.parse(responseBody);
+        if (parsedErrorResponse) {
+          if (parsedErrorResponse.error) parsedErrorResponse = parsedErrorResponse.error;
+          if (parsedErrorResponse.code) error.code = parsedErrorResponse.code;
+          if (parsedErrorResponse.message) error.message = parsedErrorResponse.message;
+        }
+        if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {
+          var resultMapper = new client.models['ErrorModel']().mapper();
+          error.body = client.deserialize(resultMapper, parsedErrorResponse, 'error.body');
+        }
+      } catch (defaultError) {
+        error.message = util.format('Error "%s" occurred in deserializing the responseBody ' + 
+                         '- "%s" for the default response.', defaultError.message, responseBody);
+        return callback(error);
+      }
+      return callback(error);
+    }
+    // Create Result
+    var result = null;
+    if (responseBody === '') responseBody = null;
+
+    return callback(null, result, httpRequest, response);
+  });
+};
+
+/**
  * Percentage of crash-free device by day in the time range based on the
  * selected versions. Api will return -1 if crash devices is greater than
  * active devices
diff --git a/src/util/apis/generated/operations/buildOperations.js b/src/util/apis/generated/operations/buildOperations.js
index a019cc6..b7fefa0 100644
--- a/src/util/apis/generated/operations/buildOperations.js
+++ b/src/util/apis/generated/operations/buildOperations.js
@@ -176,6 +176,9 @@ BuildOperations.prototype.getXcodeVersions = function (ownerName, appName, optio
 /**
  * Gets the repositories available from the source code host
  *
+ * @param {string} sourceHost The source host. Possible values include:
+ * 'github', 'bitbucket'
+ * 
  * @param {string} ownerName The name of the owner
  * 
  * @param {string} appName The name of the application
@@ -200,7 +203,7 @@ BuildOperations.prototype.getXcodeVersions = function (ownerName, appName, optio
  *
  *                      {stream} [response] - The HTTP Response stream if an error did not occur.
  */
-BuildOperations.prototype.getRepositories = function (ownerName, appName, options, callback) {
+BuildOperations.prototype.getRepositories = function (sourceHost, ownerName, appName, options, callback) {
   var client = this.client;
   if(!callback && typeof options === 'function') {
     callback = options;
@@ -210,9 +213,11 @@ BuildOperations.prototype.getRepositories = function (ownerName, appName, option
     throw new Error('callback cannot be null.');
   }
   var form = (options && options.form !== undefined) ? options.form : undefined;
-  var sourceHost = 'github';
   // Validate
   try {
+    if (sourceHost === null || sourceHost === undefined || typeof sourceHost.valueOf() !== 'string') {
+      throw new Error('sourceHost cannot be null or undefined and it must be of type string.');
+    }
     if (form !== null && form !== undefined && typeof form.valueOf() !== 'string') {
       throw new Error('form must be of type string.');
     }
@@ -967,7 +972,8 @@ BuildOperations.prototype.getCommits = function (shaCollection, ownerName, appNa
  *
  *                      {Error}  err        - The Error object if an error occurred, null otherwise.
  *
- *                      {null} [result]   - The deserialized result object.
+ *                      {object} [result]   - The deserialized result object.
+ *                      See {@link BuildLog} for more information.
  *
  *                      {object} [request]  - The HTTP Request object if an error did not occur.
  *
@@ -1055,6 +1061,23 @@ BuildOperations.prototype.getBuildLogs = function (buildId, ownerName, appName, 
     // Create Result
     var result = null;
     if (responseBody === '') responseBody = null;
+    // Deserialize Response
+    if (statusCode === 200) {
+      var parsedResponse = null;
+      try {
+        parsedResponse = JSON.parse(responseBody);
+        result = JSON.parse(responseBody);
+        if (parsedResponse !== null && parsedResponse !== undefined) {
+          var resultMapper = new client.models['BuildLog']().mapper();
+          result = client.deserialize(resultMapper, parsedResponse, 'result');
+        }
+      } catch (error) {
+        var deserializationError = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
+        deserializationError.request = msRest.stripRequest(httpRequest);
+        deserializationError.response = msRest.stripResponse(response);
+        return callback(deserializationError);
+      }
+    }
 
     return callback(null, result, httpRequest, response);
   });
@@ -1083,7 +1106,8 @@ BuildOperations.prototype.getBuildLogs = function (buildId, ownerName, appName, 
  *
  *                      {Error}  err        - The Error object if an error occurred, null otherwise.
  *
- *                      {null} [result]   - The deserialized result object.
+ *                      {object} [result]   - The deserialized result object.
+ *                      See {@link DownloadContainer} for more information.
  *
  *                      {object} [request]  - The HTTP Request object if an error did not occur.
  *
@@ -1175,6 +1199,185 @@ BuildOperations.prototype.getBuildDownload = function (buildId, downloadType, ow
     // Create Result
     var result = null;
     if (responseBody === '') responseBody = null;
+    // Deserialize Response
+    if (statusCode === 200) {
+      var parsedResponse = null;
+      try {
+        parsedResponse = JSON.parse(responseBody);
+        result = JSON.parse(responseBody);
+        if (parsedResponse !== null && parsedResponse !== undefined) {
+          var resultMapper = new client.models['DownloadContainer']().mapper();
+          result = client.deserialize(resultMapper, parsedResponse, 'result');
+        }
+      } catch (error) {
+        var deserializationError = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
+        deserializationError.request = msRest.stripRequest(httpRequest);
+        deserializationError.response = msRest.stripResponse(response);
+        return callback(deserializationError);
+      }
+    }
+
+    return callback(null, result, httpRequest, response);
+  });
+};
+
+/**
+ * Distribute a build
+ *
+ * @param {number} buildId The build ID
+ * 
+ * @param {string} ownerName The name of the owner
+ * 
+ * @param {string} appName The name of the application
+ * 
+ * @param {string} distributionGroupId The distribution group ID
+ * 
+ * @param {object} [options] Optional Parameters.
+ * 
+ * @param {string} [options.releaseNotes] The release notes
+ * 
+ * @param {object} [options.customHeaders] Headers that will be added to the
+ * request
+ * 
+ * @param {function} callback
+ *
+ * @returns {function} callback(err, result, request, response)
+ *
+ *                      {Error}  err        - The Error object if an error occurred, null otherwise.
+ *
+ *                      {object} [result]   - The deserialized result object.
+ *                      See {@link DistributionResponse} for more information.
+ *
+ *                      {object} [request]  - The HTTP Request object if an error did not occur.
+ *
+ *                      {stream} [response] - The HTTP Response stream if an error did not occur.
+ */
+BuildOperations.prototype.postDistributeRequest = function (buildId, ownerName, appName, distributionGroupId, options, callback) {
+  var client = this.client;
+  if(!callback && typeof options === 'function') {
+    callback = options;
+    options = null;
+  }
+  if (!callback) {
+    throw new Error('callback cannot be null.');
+  }
+  var releaseNotes = (options && options.releaseNotes !== undefined) ? options.releaseNotes : undefined;
+  // Validate
+  try {
+    if (buildId === null || buildId === undefined || typeof buildId !== 'number') {
+      throw new Error('buildId cannot be null or undefined and it must be of type number.');
+    }
+    if (buildId !== null && buildId !== undefined) {
+      if (buildId <= 0)
+      {
+        throw new Error('"buildId" should satisfy the constraint - "ExclusiveMinimum": 0');
+      }
+    }
+    if (ownerName === null || ownerName === undefined || typeof ownerName.valueOf() !== 'string') {
+      throw new Error('ownerName cannot be null or undefined and it must be of type string.');
+    }
+    if (appName === null || appName === undefined || typeof appName.valueOf() !== 'string') {
+      throw new Error('appName cannot be null or undefined and it must be of type string.');
+    }
+    if (distributionGroupId === null || distributionGroupId === undefined || typeof distributionGroupId.valueOf() !== 'string') {
+      throw new Error('distributionGroupId cannot be null or undefined and it must be of type string.');
+    }
+    if (releaseNotes !== null && releaseNotes !== undefined && typeof releaseNotes.valueOf() !== 'string') {
+      throw new Error('releaseNotes must be of type string.');
+    }
+  } catch (error) {
+    return callback(error);
+  }
+  var distributeInfo;
+  if ((distributionGroupId !== null && distributionGroupId !== undefined) || (releaseNotes !== null && releaseNotes !== undefined)) {
+      distributeInfo = new client.models['DistributionRequest']();
+      distributeInfo.distributionGroupId = distributionGroupId;
+      distributeInfo.releaseNotes = releaseNotes;
+  }
+
+  // Construct URL
+  var baseUrl = this.client.baseUri;
+  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/builds/{build_id}/distribute';
+  requestUrl = requestUrl.replace('{build_id}', encodeURIComponent(buildId.toString()));
+  requestUrl = requestUrl.replace('{owner_name}', encodeURIComponent(ownerName));
+  requestUrl = requestUrl.replace('{app_name}', encodeURIComponent(appName));
+
+  // Create HTTP transport objects
+  var httpRequest = new WebResource();
+  httpRequest.method = 'POST';
+  httpRequest.headers = {};
+  httpRequest.url = requestUrl;
+  // Set Headers
+  if(options) {
+    for(var headerName in options['customHeaders']) {
+      if (options['customHeaders'].hasOwnProperty(headerName)) {
+        httpRequest.headers[headerName] = options['customHeaders'][headerName];
+      }
+    }
+  }
+  httpRequest.headers['Content-Type'] = 'application/json; charset=utf-8';
+  // Serialize Request
+  var requestContent = null;
+  var requestModel = null;
+  try {
+    if (distributeInfo !== null && distributeInfo !== undefined) {
+      var requestModelMapper = new client.models['DistributionRequest']().mapper();
+      requestModel = client.serialize(requestModelMapper, distributeInfo, 'distributeInfo');
+      requestContent = JSON.stringify(requestModel);
+    }
+  } catch (error) {
+    var serializationError = new Error(util.format('Error "%s" occurred in serializing the ' + 
+        'payload - "%s"', error.message, util.inspect(distributeInfo, {depth: null})));
+    return callback(serializationError);
+  }
+  httpRequest.body = requestContent;
+  // Send Request
+  return client.pipeline(httpRequest, function (err, response, responseBody) {
+    if (err) {
+      return callback(err);
+    }
+    var statusCode = response.statusCode;
+    if (statusCode !== 200) {
+      var error = new Error(responseBody);
+      error.statusCode = response.statusCode;
+      error.request = msRest.stripRequest(httpRequest);
+      error.response = msRest.stripResponse(response);
+      if (responseBody === '') responseBody = null;
+      var parsedErrorResponse;
+      try {
+        parsedErrorResponse = JSON.parse(responseBody);
+        if (parsedErrorResponse) {
+          if (parsedErrorResponse.error) parsedErrorResponse = parsedErrorResponse.error;
+          if (parsedErrorResponse.code) error.code = parsedErrorResponse.code;
+          if (parsedErrorResponse.message) error.message = parsedErrorResponse.message;
+        }
+      } catch (defaultError) {
+        error.message = util.format('Error "%s" occurred in deserializing the responseBody ' + 
+                         '- "%s" for the default response.', defaultError.message, responseBody);
+        return callback(error);
+      }
+      return callback(error);
+    }
+    // Create Result
+    var result = null;
+    if (responseBody === '') responseBody = null;
+    // Deserialize Response
+    if (statusCode === 200) {
+      var parsedResponse = null;
+      try {
+        parsedResponse = JSON.parse(responseBody);
+        result = JSON.parse(responseBody);
+        if (parsedResponse !== null && parsedResponse !== undefined) {
+          var resultMapper = new client.models['DistributionResponse']().mapper();
+          result = client.deserialize(resultMapper, parsedResponse, 'result');
+        }
+      } catch (error) {
+        var deserializationError = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
+        deserializationError.request = msRest.stripRequest(httpRequest);
+        deserializationError.response = msRest.stripResponse(response);
+        return callback(deserializationError);
+      }
+    }
 
     return callback(null, result, httpRequest, response);
   });
diff --git a/src/util/apis/generated/operations/codepush.js b/src/util/apis/generated/operations/codepush.js
new file mode 100644
index 0000000..101be2f
--- /dev/null
+++ b/src/util/apis/generated/operations/codepush.js
@@ -0,0 +1,1556 @@
+/*
+ * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
+ * Changes may cause incorrect behavior and will be lost if the code is
+ * regenerated.
+ */
+
+'use strict';
+
+var util = require('util');
+var msRest = require('ms-rest');
+var WebResource = msRest.WebResource;
+
+/**
+ * @class
+ * Codepush
+ * __NOTE__: An instance of this class is automatically created for an
+ * instance of the MobileCenterClient.
+ * Initializes a new instance of the Codepush class.
+ * @constructor
+ *
+ * @param {MobileCenterClient} client Reference to the service client.
+ */
+function Codepush(client) {
+  this.client = client;
+}
+
+/**
+ * Modifies a CodePush release metadata under the given Deployment
+ *
+ * @param {string} deploymentName deployment name
+ * 
+ * @param {string} releaseLabel release label
+ * 
+ * @param {object} release Release modification. All fields are optional and
+ * only provided fields will get updated.
+ * 
+ * @param {string} [release.targetBinaryRange]
+ * 
+ * @param {string} [release.description]
+ * 
+ * @param {boolean} [release.isDisabled]
+ * 
+ * @param {boolean} [release.isMandatory]
+ * 
+ * @param {number} [release.rollout]
+ * 
+ * @param {string} ownerName The name of the owner
+ * 
+ * @param {string} appName The name of the application
+ * 
+ * @param {object} [options] Optional Parameters.
+ * 
+ * @param {object} [options.customHeaders] Headers that will be added to the
+ * request
+ * 
+ * @param {function} callback
+ *
+ * @returns {function} callback(err, result, request, response)
+ *
+ *                      {Error}  err        - The Error object if an error occurred, null otherwise.
+ *
+ *                      {null} [result]   - The deserialized result object.
+ *
+ *                      {object} [request]  - The HTTP Request object if an error did not occur.
+ *
+ *                      {stream} [response] - The HTTP Response stream if an error did not occur.
+ */
+Codepush.prototype.patchRelease = function (deploymentName, releaseLabel, release, ownerName, appName, options, callback) {
+  var client = this.client;
+  if(!callback && typeof options === 'function') {
+    callback = options;
+    options = null;
+  }
+  if (!callback) {
+    throw new Error('callback cannot be null.');
+  }
+  // Validate
+  try {
+    if (deploymentName === null || deploymentName === undefined || typeof deploymentName.valueOf() !== 'string') {
+      throw new Error('deploymentName cannot be null or undefined and it must be of type string.');
+    }
+    if (releaseLabel === null || releaseLabel === undefined || typeof releaseLabel.valueOf() !== 'string') {
+      throw new Error('releaseLabel cannot be null or undefined and it must be of type string.');
+    }
+    if (release === null || release === undefined) {
+      throw new Error('release cannot be null or undefined.');
+    }
+    if (ownerName === null || ownerName === undefined || typeof ownerName.valueOf() !== 'string') {
+      throw new Error('ownerName cannot be null or undefined and it must be of type string.');
+    }
+    if (appName === null || appName === undefined || typeof appName.valueOf() !== 'string') {
+      throw new Error('appName cannot be null or undefined and it must be of type string.');
+    }
+  } catch (error) {
+    return callback(error);
+  }
+
+  // Construct URL
+  var baseUrl = this.client.baseUri;
+  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}/releases/{release_label}';
+  requestUrl = requestUrl.replace('{deployment_name}', encodeURIComponent(deploymentName));
+  requestUrl = requestUrl.replace('{release_label}', encodeURIComponent(releaseLabel));
+  requestUrl = requestUrl.replace('{owner_name}', encodeURIComponent(ownerName));
+  requestUrl = requestUrl.replace('{app_name}', encodeURIComponent(appName));
+
+  // Create HTTP transport objects
+  var httpRequest = new WebResource();
+  httpRequest.method = 'PATCH';
+  httpRequest.headers = {};
+  httpRequest.url = requestUrl;
+  // Set Headers
+  if(options) {
+    for(var headerName in options['customHeaders']) {
+      if (options['customHeaders'].hasOwnProperty(headerName)) {
+        httpRequest.headers[headerName] = options['customHeaders'][headerName];
+      }
+    }
+  }
+  httpRequest.headers['Content-Type'] = 'application/json; charset=utf-8';
+  // Serialize Request
+  var requestContent = null;
+  var requestModel = null;
+  try {
+    if (release !== null && release !== undefined) {
+      var requestModelMapper = new client.models['LiveUpdateReleaseModification']().mapper();
+      requestModel = client.serialize(requestModelMapper, release, 'release');
+      requestContent = JSON.stringify(requestModel);
+    }
+  } catch (error) {
+    var serializationError = new Error(util.format('Error "%s" occurred in serializing the ' + 
+        'payload - "%s"', error.message, util.inspect(release, {depth: null})));
+    return callback(serializationError);
+  }
+  httpRequest.body = requestContent;
+  // Send Request
+  return client.pipeline(httpRequest, function (err, response, responseBody) {
+    if (err) {
+      return callback(err);
+    }
+    var statusCode = response.statusCode;
+    if (statusCode !== 204) {
+      var error = new Error(responseBody);
+      error.statusCode = response.statusCode;
+      error.request = msRest.stripRequest(httpRequest);
+      error.response = msRest.stripResponse(response);
+      if (responseBody === '') responseBody = null;
+      var parsedErrorResponse;
+      try {
+        parsedErrorResponse = JSON.parse(responseBody);
+        if (parsedErrorResponse) {
+          if (parsedErrorResponse.error) parsedErrorResponse = parsedErrorResponse.error;
+          if (parsedErrorResponse.code) error.code = parsedErrorResponse.code;
+          if (parsedErrorResponse.message) error.message = parsedErrorResponse.message;
+        }
+        if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {
+          var resultMapper = new client.models['Failure']().mapper();
+          error.body = client.deserialize(resultMapper, parsedErrorResponse, 'error.body');
+        }
+      } catch (defaultError) {
+        error.message = util.format('Error "%s" occurred in deserializing the responseBody ' + 
+                         '- "%s" for the default response.', defaultError.message, responseBody);
+        return callback(error);
+      }
+      return callback(error);
+    }
+    // Create Result
+    var result = null;
+    if (responseBody === '') responseBody = null;
+
+    return callback(null, result, httpRequest, response);
+  });
+};
+
+/**
+ * Clears a Deployment of releases
+ *
+ * @param {string} deploymentName deployment name
+ * 
+ * @param {string} ownerName The name of the owner
+ * 
+ * @param {string} appName The name of the application
+ * 
+ * @param {object} [options] Optional Parameters.
+ * 
+ * @param {object} [options.customHeaders] Headers that will be added to the
+ * request
+ * 
+ * @param {function} callback
+ *
+ * @returns {function} callback(err, result, request, response)
+ *
+ *                      {Error}  err        - The Error object if an error occurred, null otherwise.
+ *
+ *                      {null} [result]   - The deserialized result object.
+ *
+ *                      {object} [request]  - The HTTP Request object if an error did not occur.
+ *
+ *                      {stream} [response] - The HTTP Response stream if an error did not occur.
+ */
+Codepush.prototype.deleteReleases = function (deploymentName, ownerName, appName, options, callback) {
+  var client = this.client;
+  if(!callback && typeof options === 'function') {
+    callback = options;
+    options = null;
+  }
+  if (!callback) {
+    throw new Error('callback cannot be null.');
+  }
+  // Validate
+  try {
+    if (deploymentName === null || deploymentName === undefined || typeof deploymentName.valueOf() !== 'string') {
+      throw new Error('deploymentName cannot be null or undefined and it must be of type string.');
+    }
+    if (ownerName === null || ownerName === undefined || typeof ownerName.valueOf() !== 'string') {
+      throw new Error('ownerName cannot be null or undefined and it must be of type string.');
+    }
+    if (appName === null || appName === undefined || typeof appName.valueOf() !== 'string') {
+      throw new Error('appName cannot be null or undefined and it must be of type string.');
+    }
+  } catch (error) {
+    return callback(error);
+  }
+
+  // Construct URL
+  var baseUrl = this.client.baseUri;
+  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}/releases';
+  requestUrl = requestUrl.replace('{deployment_name}', encodeURIComponent(deploymentName));
+  requestUrl = requestUrl.replace('{owner_name}', encodeURIComponent(ownerName));
+  requestUrl = requestUrl.replace('{app_name}', encodeURIComponent(appName));
+
+  // Create HTTP transport objects
+  var httpRequest = new WebResource();
+  httpRequest.method = 'DELETE';
+  httpRequest.headers = {};
+  httpRequest.url = requestUrl;
+  // Set Headers
+  if(options) {
+    for(var headerName in options['customHeaders']) {
+      if (options['customHeaders'].hasOwnProperty(headerName)) {
+        httpRequest.headers[headerName] = options['customHeaders'][headerName];
+      }
+    }
+  }
+  httpRequest.headers['Content-Type'] = 'application/json; charset=utf-8';
+  httpRequest.body = null;
+  // Send Request
+  return client.pipeline(httpRequest, function (err, response, responseBody) {
+    if (err) {
+      return callback(err);
+    }
+    var statusCode = response.statusCode;
+    if (statusCode !== 204) {
+      var error = new Error(responseBody);
+      error.statusCode = response.statusCode;
+      error.request = msRest.stripRequest(httpRequest);
+      error.response = msRest.stripResponse(response);
+      if (responseBody === '') responseBody = null;
+      var parsedErrorResponse;
+      try {
+        parsedErrorResponse = JSON.parse(responseBody);
+        if (parsedErrorResponse) {
+          if (parsedErrorResponse.error) parsedErrorResponse = parsedErrorResponse.error;
+          if (parsedErrorResponse.code) error.code = parsedErrorResponse.code;
+          if (parsedErrorResponse.message) error.message = parsedErrorResponse.message;
+        }
+        if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {
+          var resultMapper = new client.models['Failure']().mapper();
+          error.body = client.deserialize(resultMapper, parsedErrorResponse, 'error.body');
+        }
+      } catch (defaultError) {
+        error.message = util.format('Error "%s" occurred in deserializing the responseBody ' + 
+                         '- "%s" for the default response.', defaultError.message, responseBody);
+        return callback(error);
+      }
+      return callback(error);
+    }
+    // Create Result
+    var result = null;
+    if (responseBody === '') responseBody = null;
+
+    return callback(null, result, httpRequest, response);
+  });
+};
+
+/**
+ * Gets the history of releases on a Deployment
+ *
+ * @param {string} deploymentName deployment name
+ * 
+ * @param {string} ownerName The name of the owner
+ * 
+ * @param {string} appName The name of the application
+ * 
+ * @param {object} [options] Optional Parameters.
+ * 
+ * @param {object} [options.customHeaders] Headers that will be added to the
+ * request
+ * 
+ * @param {function} callback
+ *
+ * @returns {function} callback(err, result, request, response)
+ *
+ *                      {Error}  err        - The Error object if an error occurred, null otherwise.
+ *
+ *                      {array} [result]   - The deserialized result object.
+ *
+ *                      {object} [request]  - The HTTP Request object if an error did not occur.
+ *
+ *                      {stream} [response] - The HTTP Response stream if an error did not occur.
+ */
+Codepush.prototype.getReleases = function (deploymentName, ownerName, appName, options, callback) {
+  var client = this.client;
+  if(!callback && typeof options === 'function') {
+    callback = options;
+    options = null;
+  }
+  if (!callback) {
+    throw new Error('callback cannot be null.');
+  }
+  // Validate
+  try {
+    if (deploymentName === null || deploymentName === undefined || typeof deploymentName.valueOf() !== 'string') {
+      throw new Error('deploymentName cannot be null or undefined and it must be of type string.');
+    }
+    if (ownerName === null || ownerName === undefined || typeof ownerName.valueOf() !== 'string') {
+      throw new Error('ownerName cannot be null or undefined and it must be of type string.');
+    }
+    if (appName === null || appName === undefined || typeof appName.valueOf() !== 'string') {
+      throw new Error('appName cannot be null or undefined and it must be of type string.');
+    }
+  } catch (error) {
+    return callback(error);
+  }
+
+  // Construct URL
+  var baseUrl = this.client.baseUri;
+  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}/releases';
+  requestUrl = requestUrl.replace('{deployment_name}', encodeURIComponent(deploymentName));
+  requestUrl = requestUrl.replace('{owner_name}', encodeURIComponent(ownerName));
+  requestUrl = requestUrl.replace('{app_name}', encodeURIComponent(appName));
+
+  // Create HTTP transport objects
+  var httpRequest = new WebResource();
+  httpRequest.method = 'GET';
+  httpRequest.headers = {};
+  httpRequest.url = requestUrl;
+  // Set Headers
+  if(options) {
+    for(var headerName in options['customHeaders']) {
+      if (options['customHeaders'].hasOwnProperty(headerName)) {
+        httpRequest.headers[headerName] = options['customHeaders'][headerName];
+      }
+    }
+  }
+  httpRequest.headers['Content-Type'] = 'application/json; charset=utf-8';
+  httpRequest.body = null;
+  // Send Request
+  return client.pipeline(httpRequest, function (err, response, responseBody) {
+    if (err) {
+      return callback(err);
+    }
+    var statusCode = response.statusCode;
+    if (statusCode !== 200) {
+      var error = new Error(responseBody);
+      error.statusCode = response.statusCode;
+      error.request = msRest.stripRequest(httpRequest);
+      error.response = msRest.stripResponse(response);
+      if (responseBody === '') responseBody = null;
+      var parsedErrorResponse;
+      try {
+        parsedErrorResponse = JSON.parse(responseBody);
+        if (parsedErrorResponse) {
+          if (parsedErrorResponse.error) parsedErrorResponse = parsedErrorResponse.error;
+          if (parsedErrorResponse.code) error.code = parsedErrorResponse.code;
+          if (parsedErrorResponse.message) error.message = parsedErrorResponse.message;
+        }
+        if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {
+          var resultMapper = new client.models['Failure']().mapper();
+          error.body = client.deserialize(resultMapper, parsedErrorResponse, 'error.body');
+        }
+      } catch (defaultError) {
+        error.message = util.format('Error "%s" occurred in deserializing the responseBody ' + 
+                         '- "%s" for the default response.', defaultError.message, responseBody);
+        return callback(error);
+      }
+      return callback(error);
+    }
+    // Create Result
+    var result = null;
+    if (responseBody === '') responseBody = null;
+    // Deserialize Response
+    if (statusCode === 200) {
+      var parsedResponse = null;
+      try {
+        parsedResponse = JSON.parse(responseBody);
+        result = JSON.parse(responseBody);
+        if (parsedResponse !== null && parsedResponse !== undefined) {
+          var resultMapper = {
+            required: false,
+            serializedName: 'parsedResponse',
+            type: {
+              name: 'Sequence',
+              element: {
+                  required: false,
+                  serializedName: 'LiveUpdateReleaseElementType',
+                  type: {
+                    name: 'Composite',
+                    className: 'LiveUpdateRelease'
+                  }
+              }
+            }
+          };
+          result = client.deserialize(resultMapper, parsedResponse, 'result');
+        }
+      } catch (error) {
+        var deserializationError = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
+        deserializationError.request = msRest.stripRequest(httpRequest);
+        deserializationError.response = msRest.stripResponse(response);
+        return callback(deserializationError);
+      }
+    }
+
+    return callback(null, result, httpRequest, response);
+  });
+};
+
+/**
+ * Gets all releases metrics for specified Deployment
+ *
+ * @param {string} deploymentName deployment name
+ * 
+ * @param {string} ownerName The name of the owner
+ * 
+ * @param {string} appName The name of the application
+ * 
+ * @param {object} [options] Optional Parameters.
+ * 
+ * @param {object} [options.customHeaders] Headers that will be added to the
+ * request
+ * 
+ * @param {function} callback
+ *
+ * @returns {function} callback(err, result, request, response)
+ *
+ *                      {Error}  err        - The Error object if an error occurred, null otherwise.
+ *
+ *                      {array} [result]   - The deserialized result object.
+ *
+ *                      {object} [request]  - The HTTP Request object if an error did not occur.
+ *
+ *                      {stream} [response] - The HTTP Response stream if an error did not occur.
+ */
+Codepush.prototype.getDeploymentMetrics = function (deploymentName, ownerName, appName, options, callback) {
+  var client = this.client;
+  if(!callback && typeof options === 'function') {
+    callback = options;
+    options = null;
+  }
+  if (!callback) {
+    throw new Error('callback cannot be null.');
+  }
+  // Validate
+  try {
+    if (deploymentName === null || deploymentName === undefined || typeof deploymentName.valueOf() !== 'string') {
+      throw new Error('deploymentName cannot be null or undefined and it must be of type string.');
+    }
+    if (ownerName === null || ownerName === undefined || typeof ownerName.valueOf() !== 'string') {
+      throw new Error('ownerName cannot be null or undefined and it must be of type string.');
+    }
+    if (appName === null || appName === undefined || typeof appName.valueOf() !== 'string') {
+      throw new Error('appName cannot be null or undefined and it must be of type string.');
+    }
+  } catch (error) {
+    return callback(error);
+  }
+
+  // Construct URL
+  var baseUrl = this.client.baseUri;
+  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}/metrics';
+  requestUrl = requestUrl.replace('{deployment_name}', encodeURIComponent(deploymentName));
+  requestUrl = requestUrl.replace('{owner_name}', encodeURIComponent(ownerName));
+  requestUrl = requestUrl.replace('{app_name}', encodeURIComponent(appName));
+
+  // Create HTTP transport objects
+  var httpRequest = new WebResource();
+  httpRequest.method = 'GET';
+  httpRequest.headers = {};
+  httpRequest.url = requestUrl;
+  // Set Headers
+  if(options) {
+    for(var headerName in options['customHeaders']) {
+      if (options['customHeaders'].hasOwnProperty(headerName)) {
+        httpRequest.headers[headerName] = options['customHeaders'][headerName];
+      }
+    }
+  }
+  httpRequest.headers['Content-Type'] = 'application/json; charset=utf-8';
+  httpRequest.body = null;
+  // Send Request
+  return client.pipeline(httpRequest, function (err, response, responseBody) {
+    if (err) {
+      return callback(err);
+    }
+    var statusCode = response.statusCode;
+    if (statusCode !== 200) {
+      var error = new Error(responseBody);
+      error.statusCode = response.statusCode;
+      error.request = msRest.stripRequest(httpRequest);
+      error.response = msRest.stripResponse(response);
+      if (responseBody === '') responseBody = null;
+      var parsedErrorResponse;
+      try {
+        parsedErrorResponse = JSON.parse(responseBody);
+        if (parsedErrorResponse) {
+          if (parsedErrorResponse.error) parsedErrorResponse = parsedErrorResponse.error;
+          if (parsedErrorResponse.code) error.code = parsedErrorResponse.code;
+          if (parsedErrorResponse.message) error.message = parsedErrorResponse.message;
+        }
+        if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {
+          var resultMapper = new client.models['Failure']().mapper();
+          error.body = client.deserialize(resultMapper, parsedErrorResponse, 'error.body');
+        }
+      } catch (defaultError) {
+        error.message = util.format('Error "%s" occurred in deserializing the responseBody ' + 
+                         '- "%s" for the default response.', defaultError.message, responseBody);
+        return callback(error);
+      }
+      return callback(error);
+    }
+    // Create Result
+    var result = null;
+    if (responseBody === '') responseBody = null;
+    // Deserialize Response
+    if (statusCode === 200) {
+      var parsedResponse = null;
+      try {
+        parsedResponse = JSON.parse(responseBody);
+        result = JSON.parse(responseBody);
+        if (parsedResponse !== null && parsedResponse !== undefined) {
+          var resultMapper = {
+            required: false,
+            serializedName: 'parsedResponse',
+            type: {
+              name: 'Sequence',
+              element: {
+                  required: false,
+                  serializedName: 'LiveUpdateReleaseMetricElementType',
+                  type: {
+                    name: 'Composite',
+                    className: 'LiveUpdateReleaseMetric'
+                  }
+              }
+            }
+          };
+          result = client.deserialize(resultMapper, parsedResponse, 'result');
+        }
+      } catch (error) {
+        var deserializationError = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
+        deserializationError.request = msRest.stripRequest(httpRequest);
+        deserializationError.response = msRest.stripResponse(response);
+        return callback(deserializationError);
+      }
+    }
+
+    return callback(null, result, httpRequest, response);
+  });
+};
+
+/**
+ * Deletes a CodePush Deployment (e.g. 'Staging') for the given app
+ *
+ * @param {string} deploymentName deployment name
+ * 
+ * @param {string} ownerName The name of the owner
+ * 
+ * @param {string} appName The name of the application
+ * 
+ * @param {object} [options] Optional Parameters.
+ * 
+ * @param {object} [options.customHeaders] Headers that will be added to the
+ * request
+ * 
+ * @param {function} callback
+ *
+ * @returns {function} callback(err, result, request, response)
+ *
+ *                      {Error}  err        - The Error object if an error occurred, null otherwise.
+ *
+ *                      {null} [result]   - The deserialized result object.
+ *
+ *                      {object} [request]  - The HTTP Request object if an error did not occur.
+ *
+ *                      {stream} [response] - The HTTP Response stream if an error did not occur.
+ */
+Codepush.prototype.deleteDeployment = function (deploymentName, ownerName, appName, options, callback) {
+  var client = this.client;
+  if(!callback && typeof options === 'function') {
+    callback = options;
+    options = null;
+  }
+  if (!callback) {
+    throw new Error('callback cannot be null.');
+  }
+  // Validate
+  try {
+    if (deploymentName === null || deploymentName === undefined || typeof deploymentName.valueOf() !== 'string') {
+      throw new Error('deploymentName cannot be null or undefined and it must be of type string.');
+    }
+    if (ownerName === null || ownerName === undefined || typeof ownerName.valueOf() !== 'string') {
+      throw new Error('ownerName cannot be null or undefined and it must be of type string.');
+    }
+    if (appName === null || appName === undefined || typeof appName.valueOf() !== 'string') {
+      throw new Error('appName cannot be null or undefined and it must be of type string.');
+    }
+  } catch (error) {
+    return callback(error);
+  }
+
+  // Construct URL
+  var baseUrl = this.client.baseUri;
+  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}';
+  requestUrl = requestUrl.replace('{deployment_name}', encodeURIComponent(deploymentName));
+  requestUrl = requestUrl.replace('{owner_name}', encodeURIComponent(ownerName));
+  requestUrl = requestUrl.replace('{app_name}', encodeURIComponent(appName));
+
+  // Create HTTP transport objects
+  var httpRequest = new WebResource();
+  httpRequest.method = 'DELETE';
+  httpRequest.headers = {};
+  httpRequest.url = requestUrl;
+  // Set Headers
+  if(options) {
+    for(var headerName in options['customHeaders']) {
+      if (options['customHeaders'].hasOwnProperty(headerName)) {
+        httpRequest.headers[headerName] = options['customHeaders'][headerName];
+      }
+    }
+  }
+  httpRequest.headers['Content-Type'] = 'application/json; charset=utf-8';
+  httpRequest.body = null;
+  // Send Request
+  return client.pipeline(httpRequest, function (err, response, responseBody) {
+    if (err) {
+      return callback(err);
+    }
+    var statusCode = response.statusCode;
+    if (statusCode !== 204) {
+      var error = new Error(responseBody);
+      error.statusCode = response.statusCode;
+      error.request = msRest.stripRequest(httpRequest);
+      error.response = msRest.stripResponse(response);
+      if (responseBody === '') responseBody = null;
+      var parsedErrorResponse;
+      try {
+        parsedErrorResponse = JSON.parse(responseBody);
+        if (parsedErrorResponse) {
+          if (parsedErrorResponse.error) parsedErrorResponse = parsedErrorResponse.error;
+          if (parsedErrorResponse.code) error.code = parsedErrorResponse.code;
+          if (parsedErrorResponse.message) error.message = parsedErrorResponse.message;
+        }
+        if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {
+          var resultMapper = new client.models['Failure']().mapper();
+          error.body = client.deserialize(resultMapper, parsedErrorResponse, 'error.body');
+        }
+      } catch (defaultError) {
+        error.message = util.format('Error "%s" occurred in deserializing the responseBody ' + 
+                         '- "%s" for the default response.', defaultError.message, responseBody);
+        return callback(error);
+      }
+      return callback(error);
+    }
+    // Create Result
+    var result = null;
+    if (responseBody === '') responseBody = null;
+
+    return callback(null, result, httpRequest, response);
+  });
+};
+
+/**
+ * Gets a CodePush Deployment (e.g. 'Staging') for the given app
+ *
+ * @param {string} deploymentName deployment name
+ * 
+ * @param {string} ownerName The name of the owner
+ * 
+ * @param {string} appName The name of the application
+ * 
+ * @param {object} [options] Optional Parameters.
+ * 
+ * @param {object} [options.customHeaders] Headers that will be added to the
+ * request
+ * 
+ * @param {function} callback
+ *
+ * @returns {function} callback(err, result, request, response)
+ *
+ *                      {Error}  err        - The Error object if an error occurred, null otherwise.
+ *
+ *                      {object} [result]   - The deserialized result object.
+ *                      See {@link Deployment} for more information.
+ *
+ *                      {object} [request]  - The HTTP Request object if an error did not occur.
+ *
+ *                      {stream} [response] - The HTTP Response stream if an error did not occur.
+ */
+Codepush.prototype.getDeployment = function (deploymentName, ownerName, appName, options, callback) {
+  var client = this.client;
+  if(!callback && typeof options === 'function') {
+    callback = options;
+    options = null;
+  }
+  if (!callback) {
+    throw new Error('callback cannot be null.');
+  }
+  // Validate
+  try {
+    if (deploymentName === null || deploymentName === undefined || typeof deploymentName.valueOf() !== 'string') {
+      throw new Error('deploymentName cannot be null or undefined and it must be of type string.');
+    }
+    if (ownerName === null || ownerName === undefined || typeof ownerName.valueOf() !== 'string') {
+      throw new Error('ownerName cannot be null or undefined and it must be of type string.');
+    }
+    if (appName === null || appName === undefined || typeof appName.valueOf() !== 'string') {
+      throw new Error('appName cannot be null or undefined and it must be of type string.');
+    }
+  } catch (error) {
+    return callback(error);
+  }
+
+  // Construct URL
+  var baseUrl = this.client.baseUri;
+  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}';
+  requestUrl = requestUrl.replace('{deployment_name}', encodeURIComponent(deploymentName));
+  requestUrl = requestUrl.replace('{owner_name}', encodeURIComponent(ownerName));
+  requestUrl = requestUrl.replace('{app_name}', encodeURIComponent(appName));
+
+  // Create HTTP transport objects
+  var httpRequest = new WebResource();
+  httpRequest.method = 'GET';
+  httpRequest.headers = {};
+  httpRequest.url = requestUrl;
+  // Set Headers
+  if(options) {
+    for(var headerName in options['customHeaders']) {
+      if (options['customHeaders'].hasOwnProperty(headerName)) {
+        httpRequest.headers[headerName] = options['customHeaders'][headerName];
+      }
+    }
+  }
+  httpRequest.headers['Content-Type'] = 'application/json; charset=utf-8';
+  httpRequest.body = null;
+  // Send Request
+  return client.pipeline(httpRequest, function (err, response, responseBody) {
+    if (err) {
+      return callback(err);
+    }
+    var statusCode = response.statusCode;
+    if (statusCode !== 200) {
+      var error = new Error(responseBody);
+      error.statusCode = response.statusCode;
+      error.request = msRest.stripRequest(httpRequest);
+      error.response = msRest.stripResponse(response);
+      if (responseBody === '') responseBody = null;
+      var parsedErrorResponse;
+      try {
+        parsedErrorResponse = JSON.parse(responseBody);
+        if (parsedErrorResponse) {
+          if (parsedErrorResponse.error) parsedErrorResponse = parsedErrorResponse.error;
+          if (parsedErrorResponse.code) error.code = parsedErrorResponse.code;
+          if (parsedErrorResponse.message) error.message = parsedErrorResponse.message;
+        }
+        if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {
+          var resultMapper = new client.models['Failure']().mapper();
+          error.body = client.deserialize(resultMapper, parsedErrorResponse, 'error.body');
+        }
+      } catch (defaultError) {
+        error.message = util.format('Error "%s" occurred in deserializing the responseBody ' + 
+                         '- "%s" for the default response.', defaultError.message, responseBody);
+        return callback(error);
+      }
+      return callback(error);
+    }
+    // Create Result
+    var result = null;
+    if (responseBody === '') responseBody = null;
+    // Deserialize Response
+    if (statusCode === 200) {
+      var parsedResponse = null;
+      try {
+        parsedResponse = JSON.parse(responseBody);
+        result = JSON.parse(responseBody);
+        if (parsedResponse !== null && parsedResponse !== undefined) {
+          var resultMapper = new client.models['Deployment']().mapper();
+          result = client.deserialize(resultMapper, parsedResponse, 'result');
+        }
+      } catch (error) {
+        var deserializationError = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
+        deserializationError.request = msRest.stripRequest(httpRequest);
+        deserializationError.response = msRest.stripResponse(response);
+        return callback(deserializationError);
+      }
+    }
+
+    return callback(null, result, httpRequest, response);
+  });
+};
+
+/**
+ * Modifies a CodePush Deployment (e.g. 'Staging') for the given app
+ *
+ * @param {string} deploymentName deployment name
+ * 
+ * @param {string} ownerName The name of the owner
+ * 
+ * @param {string} appName The name of the application
+ * 
+ * @param {object} [options] Optional Parameters.
+ * 
+ * @param {string} [options.name]
+ * 
+ * @param {object} [options.customHeaders] Headers that will be added to the
+ * request
+ * 
+ * @param {function} callback
+ *
+ * @returns {function} callback(err, result, request, response)
+ *
+ *                      {Error}  err        - The Error object if an error occurred, null otherwise.
+ *
+ *                      {null} [result]   - The deserialized result object.
+ *
+ *                      {object} [request]  - The HTTP Request object if an error did not occur.
+ *
+ *                      {stream} [response] - The HTTP Response stream if an error did not occur.
+ */
+Codepush.prototype.patchDeployment = function (deploymentName, ownerName, appName, options, callback) {
+  var client = this.client;
+  if(!callback && typeof options === 'function') {
+    callback = options;
+    options = null;
+  }
+  if (!callback) {
+    throw new Error('callback cannot be null.');
+  }
+  var name = (options && options.name !== undefined) ? options.name : undefined;
+  // Validate
+  try {
+    if (deploymentName === null || deploymentName === undefined || typeof deploymentName.valueOf() !== 'string') {
+      throw new Error('deploymentName cannot be null or undefined and it must be of type string.');
+    }
+    if (ownerName === null || ownerName === undefined || typeof ownerName.valueOf() !== 'string') {
+      throw new Error('ownerName cannot be null or undefined and it must be of type string.');
+    }
+    if (appName === null || appName === undefined || typeof appName.valueOf() !== 'string') {
+      throw new Error('appName cannot be null or undefined and it must be of type string.');
+    }
+    if (name !== null && name !== undefined && typeof name.valueOf() !== 'string') {
+      throw new Error('name must be of type string.');
+    }
+  } catch (error) {
+    return callback(error);
+  }
+  var deployment;
+  if (name !== null && name !== undefined) {
+      deployment = new client.models['DeploymentModification']();
+      deployment.name = name;
+  }
+
+  // Construct URL
+  var baseUrl = this.client.baseUri;
+  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}';
+  requestUrl = requestUrl.replace('{deployment_name}', encodeURIComponent(deploymentName));
+  requestUrl = requestUrl.replace('{owner_name}', encodeURIComponent(ownerName));
+  requestUrl = requestUrl.replace('{app_name}', encodeURIComponent(appName));
+
+  // Create HTTP transport objects
+  var httpRequest = new WebResource();
+  httpRequest.method = 'PATCH';
+  httpRequest.headers = {};
+  httpRequest.url = requestUrl;
+  // Set Headers
+  if(options) {
+    for(var headerName in options['customHeaders']) {
+      if (options['customHeaders'].hasOwnProperty(headerName)) {
+        httpRequest.headers[headerName] = options['customHeaders'][headerName];
+      }
+    }
+  }
+  httpRequest.headers['Content-Type'] = 'application/json; charset=utf-8';
+  // Serialize Request
+  var requestContent = null;
+  var requestModel = null;
+  try {
+    if (deployment !== null && deployment !== undefined) {
+      var requestModelMapper = new client.models['DeploymentModification']().mapper();
+      requestModel = client.serialize(requestModelMapper, deployment, 'deployment');
+      requestContent = JSON.stringify(requestModel);
+    }
+  } catch (error) {
+    var serializationError = new Error(util.format('Error "%s" occurred in serializing the ' + 
+        'payload - "%s"', error.message, util.inspect(deployment, {depth: null})));
+    return callback(serializationError);
+  }
+  httpRequest.body = requestContent;
+  // Send Request
+  return client.pipeline(httpRequest, function (err, response, responseBody) {
+    if (err) {
+      return callback(err);
+    }
+    var statusCode = response.statusCode;
+    if (statusCode !== 204) {
+      var error = new Error(responseBody);
+      error.statusCode = response.statusCode;
+      error.request = msRest.stripRequest(httpRequest);
+      error.response = msRest.stripResponse(response);
+      if (responseBody === '') responseBody = null;
+      var parsedErrorResponse;
+      try {
+        parsedErrorResponse = JSON.parse(responseBody);
+        if (parsedErrorResponse) {
+          if (parsedErrorResponse.error) parsedErrorResponse = parsedErrorResponse.error;
+          if (parsedErrorResponse.code) error.code = parsedErrorResponse.code;
+          if (parsedErrorResponse.message) error.message = parsedErrorResponse.message;
+        }
+        if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {
+          var resultMapper = new client.models['Failure']().mapper();
+          error.body = client.deserialize(resultMapper, parsedErrorResponse, 'error.body');
+        }
+      } catch (defaultError) {
+        error.message = util.format('Error "%s" occurred in deserializing the responseBody ' + 
+                         '- "%s" for the default response.', defaultError.message, responseBody);
+        return callback(error);
+      }
+      return callback(error);
+    }
+    // Create Result
+    var result = null;
+    if (responseBody === '') responseBody = null;
+
+    return callback(null, result, httpRequest, response);
+  });
+};
+
+/**
+ * Report download of specified release
+ *
+ * @param {string} deploymentKey deployment key
+ * 
+ * @param {object} releaseMetadata Deployment status metric properties
+ * 
+ * @param {string} [releaseMetadata.label]
+ * 
+ * @param {string} [releaseMetadata.appVersion]
+ * 
+ * @param {string} [releaseMetadata.previousDeploymentKey]
+ * 
+ * @param {string} [releaseMetadata.previousLabelOrAppVersion]
+ * 
+ * @param {string} [releaseMetadata.status]
+ * 
+ * @param {string} [releaseMetadata.clientUniqueId]
+ * 
+ * @param {string} ownerName The name of the owner
+ * 
+ * @param {string} appName The name of the application
+ * 
+ * @param {object} [options] Optional Parameters.
+ * 
+ * @param {object} [options.customHeaders] Headers that will be added to the
+ * request
+ * 
+ * @param {function} callback
+ *
+ * @returns {function} callback(err, result, request, response)
+ *
+ *                      {Error}  err        - The Error object if an error occurred, null otherwise.
+ *
+ *                      {null} [result]   - The deserialized result object.
+ *
+ *                      {object} [request]  - The HTTP Request object if an error did not occur.
+ *
+ *                      {stream} [response] - The HTTP Response stream if an error did not occur.
+ */
+Codepush.prototype.postDownloadStatusMetric = function (deploymentKey, releaseMetadata, ownerName, appName, options, callback) {
+  var client = this.client;
+  if(!callback && typeof options === 'function') {
+    callback = options;
+    options = null;
+  }
+  if (!callback) {
+    throw new Error('callback cannot be null.');
+  }
+  // Validate
+  try {
+    if (deploymentKey === null || deploymentKey === undefined || typeof deploymentKey.valueOf() !== 'string') {
+      throw new Error('deploymentKey cannot be null or undefined and it must be of type string.');
+    }
+    if (releaseMetadata === null || releaseMetadata === undefined) {
+      throw new Error('releaseMetadata cannot be null or undefined.');
+    }
+    if (ownerName === null || ownerName === undefined || typeof ownerName.valueOf() !== 'string') {
+      throw new Error('ownerName cannot be null or undefined and it must be of type string.');
+    }
+    if (appName === null || appName === undefined || typeof appName.valueOf() !== 'string') {
+      throw new Error('appName cannot be null or undefined and it must be of type string.');
+    }
+  } catch (error) {
+    return callback(error);
+  }
+
+  // Construct URL
+  var baseUrl = this.client.baseUri;
+  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/deployments/by_key/{deployment_key}/report_status/download';
+  requestUrl = requestUrl.replace('{deployment_key}', encodeURIComponent(deploymentKey));
+  requestUrl = requestUrl.replace('{owner_name}', encodeURIComponent(ownerName));
+  requestUrl = requestUrl.replace('{app_name}', encodeURIComponent(appName));
+
+  // Create HTTP transport objects
+  var httpRequest = new WebResource();
+  httpRequest.method = 'POST';
+  httpRequest.headers = {};
+  httpRequest.url = requestUrl;
+  // Set Headers
+  if(options) {
+    for(var headerName in options['customHeaders']) {
+      if (options['customHeaders'].hasOwnProperty(headerName)) {
+        httpRequest.headers[headerName] = options['customHeaders'][headerName];
+      }
+    }
+  }
+  httpRequest.headers['Content-Type'] = 'application/json; charset=utf-8';
+  // Serialize Request
+  var requestContent = null;
+  var requestModel = null;
+  try {
+    if (releaseMetadata !== null && releaseMetadata !== undefined) {
+      var requestModelMapper = new client.models['LiveUpdateStatusMetricMetadata']().mapper();
+      requestModel = client.serialize(requestModelMapper, releaseMetadata, 'releaseMetadata');
+      requestContent = JSON.stringify(requestModel);
+    }
+  } catch (error) {
+    var serializationError = new Error(util.format('Error "%s" occurred in serializing the ' + 
+        'payload - "%s"', error.message, util.inspect(releaseMetadata, {depth: null})));
+    return callback(serializationError);
+  }
+  httpRequest.body = requestContent;
+  // Send Request
+  return client.pipeline(httpRequest, function (err, response, responseBody) {
+    if (err) {
+      return callback(err);
+    }
+    var statusCode = response.statusCode;
+    if (statusCode !== 200) {
+      var error = new Error(responseBody);
+      error.statusCode = response.statusCode;
+      error.request = msRest.stripRequest(httpRequest);
+      error.response = msRest.stripResponse(response);
+      if (responseBody === '') responseBody = null;
+      var parsedErrorResponse;
+      try {
+        parsedErrorResponse = JSON.parse(responseBody);
+        if (parsedErrorResponse) {
+          if (parsedErrorResponse.error) parsedErrorResponse = parsedErrorResponse.error;
+          if (parsedErrorResponse.code) error.code = parsedErrorResponse.code;
+          if (parsedErrorResponse.message) error.message = parsedErrorResponse.message;
+        }
+        if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {
+          var resultMapper = new client.models['Failure']().mapper();
+          error.body = client.deserialize(resultMapper, parsedErrorResponse, 'error.body');
+        }
+      } catch (defaultError) {
+        error.message = util.format('Error "%s" occurred in deserializing the responseBody ' + 
+                         '- "%s" for the default response.', defaultError.message, responseBody);
+        return callback(error);
+      }
+      return callback(error);
+    }
+    // Create Result
+    var result = null;
+    if (responseBody === '') responseBody = null;
+
+    return callback(null, result, httpRequest, response);
+  });
+};
+
+/**
+ * Report Deployment status metric
+ *
+ * @param {string} deploymentKey deployment key
+ * 
+ * @param {object} releaseMetadata Deployment status metric properties
+ * 
+ * @param {string} [releaseMetadata.label]
+ * 
+ * @param {string} [releaseMetadata.appVersion]
+ * 
+ * @param {string} [releaseMetadata.previousDeploymentKey]
+ * 
+ * @param {string} [releaseMetadata.previousLabelOrAppVersion]
+ * 
+ * @param {string} [releaseMetadata.status]
+ * 
+ * @param {string} [releaseMetadata.clientUniqueId]
+ * 
+ * @param {string} ownerName The name of the owner
+ * 
+ * @param {string} appName The name of the application
+ * 
+ * @param {object} [options] Optional Parameters.
+ * 
+ * @param {object} [options.customHeaders] Headers that will be added to the
+ * request
+ * 
+ * @param {function} callback
+ *
+ * @returns {function} callback(err, result, request, response)
+ *
+ *                      {Error}  err        - The Error object if an error occurred, null otherwise.
+ *
+ *                      {null} [result]   - The deserialized result object.
+ *
+ *                      {object} [request]  - The HTTP Request object if an error did not occur.
+ *
+ *                      {stream} [response] - The HTTP Response stream if an error did not occur.
+ */
+Codepush.prototype.postDeployStatusMetric = function (deploymentKey, releaseMetadata, ownerName, appName, options, callback) {
+  var client = this.client;
+  if(!callback && typeof options === 'function') {
+    callback = options;
+    options = null;
+  }
+  if (!callback) {
+    throw new Error('callback cannot be null.');
+  }
+  // Validate
+  try {
+    if (deploymentKey === null || deploymentKey === undefined || typeof deploymentKey.valueOf() !== 'string') {
+      throw new Error('deploymentKey cannot be null or undefined and it must be of type string.');
+    }
+    if (releaseMetadata === null || releaseMetadata === undefined) {
+      throw new Error('releaseMetadata cannot be null or undefined.');
+    }
+    if (ownerName === null || ownerName === undefined || typeof ownerName.valueOf() !== 'string') {
+      throw new Error('ownerName cannot be null or undefined and it must be of type string.');
+    }
+    if (appName === null || appName === undefined || typeof appName.valueOf() !== 'string') {
+      throw new Error('appName cannot be null or undefined and it must be of type string.');
+    }
+  } catch (error) {
+    return callback(error);
+  }
+
+  // Construct URL
+  var baseUrl = this.client.baseUri;
+  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/deployments/by_key/{deployment_key}/report_status/deploy';
+  requestUrl = requestUrl.replace('{deployment_key}', encodeURIComponent(deploymentKey));
+  requestUrl = requestUrl.replace('{owner_name}', encodeURIComponent(ownerName));
+  requestUrl = requestUrl.replace('{app_name}', encodeURIComponent(appName));
+
+  // Create HTTP transport objects
+  var httpRequest = new WebResource();
+  httpRequest.method = 'POST';
+  httpRequest.headers = {};
+  httpRequest.url = requestUrl;
+  // Set Headers
+  if(options) {
+    for(var headerName in options['customHeaders']) {
+      if (options['customHeaders'].hasOwnProperty(headerName)) {
+        httpRequest.headers[headerName] = options['customHeaders'][headerName];
+      }
+    }
+  }
+  httpRequest.headers['Content-Type'] = 'application/json; charset=utf-8';
+  // Serialize Request
+  var requestContent = null;
+  var requestModel = null;
+  try {
+    if (releaseMetadata !== null && releaseMetadata !== undefined) {
+      var requestModelMapper = new client.models['LiveUpdateStatusMetricMetadata']().mapper();
+      requestModel = client.serialize(requestModelMapper, releaseMetadata, 'releaseMetadata');
+      requestContent = JSON.stringify(requestModel);
+    }
+  } catch (error) {
+    var serializationError = new Error(util.format('Error "%s" occurred in serializing the ' + 
+        'payload - "%s"', error.message, util.inspect(releaseMetadata, {depth: null})));
+    return callback(serializationError);
+  }
+  httpRequest.body = requestContent;
+  // Send Request
+  return client.pipeline(httpRequest, function (err, response, responseBody) {
+    if (err) {
+      return callback(err);
+    }
+    var statusCode = response.statusCode;
+    if (statusCode !== 200) {
+      var error = new Error(responseBody);
+      error.statusCode = response.statusCode;
+      error.request = msRest.stripRequest(httpRequest);
+      error.response = msRest.stripResponse(response);
+      if (responseBody === '') responseBody = null;
+      var parsedErrorResponse;
+      try {
+        parsedErrorResponse = JSON.parse(responseBody);
+        if (parsedErrorResponse) {
+          if (parsedErrorResponse.error) parsedErrorResponse = parsedErrorResponse.error;
+          if (parsedErrorResponse.code) error.code = parsedErrorResponse.code;
+          if (parsedErrorResponse.message) error.message = parsedErrorResponse.message;
+        }
+        if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {
+          var resultMapper = new client.models['Failure']().mapper();
+          error.body = client.deserialize(resultMapper, parsedErrorResponse, 'error.body');
+        }
+      } catch (defaultError) {
+        error.message = util.format('Error "%s" occurred in deserializing the responseBody ' + 
+                         '- "%s" for the default response.', defaultError.message, responseBody);
+        return callback(error);
+      }
+      return callback(error);
+    }
+    // Create Result
+    var result = null;
+    if (responseBody === '') responseBody = null;
+
+    return callback(null, result, httpRequest, response);
+  });
+};
+
+/**
+ * Gets a list of CodePush deployments (e.g. 'Staging', 'Production') for the
+ * given app
+ *
+ * @param {string} ownerName The name of the owner
+ * 
+ * @param {string} appName The name of the application
+ * 
+ * @param {object} [options] Optional Parameters.
+ * 
+ * @param {object} [options.customHeaders] Headers that will be added to the
+ * request
+ * 
+ * @param {function} callback
+ *
+ * @returns {function} callback(err, result, request, response)
+ *
+ *                      {Error}  err        - The Error object if an error occurred, null otherwise.
+ *
+ *                      {array} [result]   - The deserialized result object.
+ *
+ *                      {object} [request]  - The HTTP Request object if an error did not occur.
+ *
+ *                      {stream} [response] - The HTTP Response stream if an error did not occur.
+ */
+Codepush.prototype.getDeployments = function (ownerName, appName, options, callback) {
+  var client = this.client;
+  if(!callback && typeof options === 'function') {
+    callback = options;
+    options = null;
+  }
+  if (!callback) {
+    throw new Error('callback cannot be null.');
+  }
+  // Validate
+  try {
+    if (ownerName === null || ownerName === undefined || typeof ownerName.valueOf() !== 'string') {
+      throw new Error('ownerName cannot be null or undefined and it must be of type string.');
+    }
+    if (appName === null || appName === undefined || typeof appName.valueOf() !== 'string') {
+      throw new Error('appName cannot be null or undefined and it must be of type string.');
+    }
+  } catch (error) {
+    return callback(error);
+  }
+
+  // Construct URL
+  var baseUrl = this.client.baseUri;
+  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/deployments';
+  requestUrl = requestUrl.replace('{owner_name}', encodeURIComponent(ownerName));
+  requestUrl = requestUrl.replace('{app_name}', encodeURIComponent(appName));
+
+  // Create HTTP transport objects
+  var httpRequest = new WebResource();
+  httpRequest.method = 'GET';
+  httpRequest.headers = {};
+  httpRequest.url = requestUrl;
+  // Set Headers
+  if(options) {
+    for(var headerName in options['customHeaders']) {
+      if (options['customHeaders'].hasOwnProperty(headerName)) {
+        httpRequest.headers[headerName] = options['customHeaders'][headerName];
+      }
+    }
+  }
+  httpRequest.headers['Content-Type'] = 'application/json; charset=utf-8';
+  httpRequest.body = null;
+  // Send Request
+  return client.pipeline(httpRequest, function (err, response, responseBody) {
+    if (err) {
+      return callback(err);
+    }
+    var statusCode = response.statusCode;
+    if (statusCode !== 200) {
+      var error = new Error(responseBody);
+      error.statusCode = response.statusCode;
+      error.request = msRest.stripRequest(httpRequest);
+      error.response = msRest.stripResponse(response);
+      if (responseBody === '') responseBody = null;
+      var parsedErrorResponse;
+      try {
+        parsedErrorResponse = JSON.parse(responseBody);
+        if (parsedErrorResponse) {
+          if (parsedErrorResponse.error) parsedErrorResponse = parsedErrorResponse.error;
+          if (parsedErrorResponse.code) error.code = parsedErrorResponse.code;
+          if (parsedErrorResponse.message) error.message = parsedErrorResponse.message;
+        }
+        if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {
+          var resultMapper = new client.models['Failure']().mapper();
+          error.body = client.deserialize(resultMapper, parsedErrorResponse, 'error.body');
+        }
+      } catch (defaultError) {
+        error.message = util.format('Error "%s" occurred in deserializing the responseBody ' + 
+                         '- "%s" for the default response.', defaultError.message, responseBody);
+        return callback(error);
+      }
+      return callback(error);
+    }
+    // Create Result
+    var result = null;
+    if (responseBody === '') responseBody = null;
+    // Deserialize Response
+    if (statusCode === 200) {
+      var parsedResponse = null;
+      try {
+        parsedResponse = JSON.parse(responseBody);
+        result = JSON.parse(responseBody);
+        if (parsedResponse !== null && parsedResponse !== undefined) {
+          var resultMapper = {
+            required: false,
+            serializedName: 'parsedResponse',
+            type: {
+              name: 'Sequence',
+              element: {
+                  required: false,
+                  serializedName: 'DeploymentElementType',
+                  type: {
+                    name: 'Composite',
+                    className: 'Deployment'
+                  }
+              }
+            }
+          };
+          result = client.deserialize(resultMapper, parsedResponse, 'result');
+        }
+      } catch (error) {
+        var deserializationError = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
+        deserializationError.request = msRest.stripRequest(httpRequest);
+        deserializationError.response = msRest.stripResponse(response);
+        return callback(deserializationError);
+      }
+    }
+
+    return callback(null, result, httpRequest, response);
+  });
+};
+
+/**
+ * Creates a CodePush Deployment (e.g. 'Staging') for the given app
+ *
+ * @param {string} ownerName The name of the owner
+ * 
+ * @param {string} appName The name of the application
+ * 
+ * @param {string} name
+ * 
+ * @param {object} [options] Optional Parameters.
+ * 
+ * @param {string} [options.key]
+ * 
+ * @param {object} [options.latestRelease]
+ * 
+ * @param {string} [options.latestRelease.targetBinaryRange]
+ * 
+ * @param {string} [options.latestRelease.blobUrl]
+ * 
+ * @param {string} [options.latestRelease.description]
+ * 
+ * @param {boolean} [options.latestRelease.isDisabled]
+ * 
+ * @param {boolean} [options.latestRelease.isMandatory]
+ * 
+ * @param {string} [options.latestRelease.label]
+ * 
+ * @param {string} [options.latestRelease.originalDeployment] Set on 'Promote'
+ * 
+ * @param {string} [options.latestRelease.originalLabel] Set on 'Promote' and
+ * 'Rollback'
+ * 
+ * @param {string} [options.latestRelease.hash]
+ * 
+ * @param {string} [options.latestRelease.releasedBy]
+ * 
+ * @param {string} [options.latestRelease.releaseMethod] The release method is
+ * unknown if unspecified. Possible values include: 'Upload', 'Promote',
+ * 'Rollback'
+ * 
+ * @param {number} [options.latestRelease.rollout]
+ * 
+ * @param {number} [options.latestRelease.size]
+ * 
+ * @param {number} [options.latestRelease.uploadTime]
+ * 
+ * @param {object} [options.customHeaders] Headers that will be added to the
+ * request
+ * 
+ * @param {function} callback
+ *
+ * @returns {function} callback(err, result, request, response)
+ *
+ *                      {Error}  err        - The Error object if an error occurred, null otherwise.
+ *
+ *                      {object} [result]   - The deserialized result object.
+ *                      See {@link Deployment} for more information.
+ *
+ *                      {object} [request]  - The HTTP Request object if an error did not occur.
+ *
+ *                      {stream} [response] - The HTTP Response stream if an error did not occur.
+ */
+Codepush.prototype.postDeployments = function (ownerName, appName, name, options, callback) {
+  var client = this.client;
+  if(!callback && typeof options === 'function') {
+    callback = options;
+    options = null;
+  }
+  if (!callback) {
+    throw new Error('callback cannot be null.');
+  }
+  var key = (options && options.key !== undefined) ? options.key : undefined;
+  var latestRelease = (options && options.latestRelease !== undefined) ? options.latestRelease : undefined;
+  // Validate
+  try {
+    if (ownerName === null || ownerName === undefined || typeof ownerName.valueOf() !== 'string') {
+      throw new Error('ownerName cannot be null or undefined and it must be of type string.');
+    }
+    if (appName === null || appName === undefined || typeof appName.valueOf() !== 'string') {
+      throw new Error('appName cannot be null or undefined and it must be of type string.');
+    }
+    if (key !== null && key !== undefined && typeof key.valueOf() !== 'string') {
+      throw new Error('key must be of type string.');
+    }
+    if (name === null || name === undefined || typeof name.valueOf() !== 'string') {
+      throw new Error('name cannot be null or undefined and it must be of type string.');
+    }
+  } catch (error) {
+    return callback(error);
+  }
+  var deployment;
+  if ((key !== null && key !== undefined) || (name !== null && name !== undefined) || (latestRelease !== null && latestRelease !== undefined)) {
+      deployment = new client.models['Deployment']();
+      deployment.key = key;
+      deployment.name = name;
+      deployment.latestRelease = latestRelease;
+  }
+
+  // Construct URL
+  var baseUrl = this.client.baseUri;
+  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/deployments';
+  requestUrl = requestUrl.replace('{owner_name}', encodeURIComponent(ownerName));
+  requestUrl = requestUrl.replace('{app_name}', encodeURIComponent(appName));
+
+  // Create HTTP transport objects
+  var httpRequest = new WebResource();
+  httpRequest.method = 'POST';
+  httpRequest.headers = {};
+  httpRequest.url = requestUrl;
+  // Set Headers
+  if(options) {
+    for(var headerName in options['customHeaders']) {
+      if (options['customHeaders'].hasOwnProperty(headerName)) {
+        httpRequest.headers[headerName] = options['customHeaders'][headerName];
+      }
+    }
+  }
+  httpRequest.headers['Content-Type'] = 'application/json; charset=utf-8';
+  // Serialize Request
+  var requestContent = null;
+  var requestModel = null;
+  try {
+    if (deployment !== null && deployment !== undefined) {
+      var requestModelMapper = new client.models['Deployment']().mapper();
+      requestModel = client.serialize(requestModelMapper, deployment, 'deployment');
+      requestContent = JSON.stringify(requestModel);
+    }
+  } catch (error) {
+    var serializationError = new Error(util.format('Error "%s" occurred in serializing the ' + 
+        'payload - "%s"', error.message, util.inspect(deployment, {depth: null})));
+    return callback(serializationError);
+  }
+  httpRequest.body = requestContent;
+  // Send Request
+  return client.pipeline(httpRequest, function (err, response, responseBody) {
+    if (err) {
+      return callback(err);
+    }
+    var statusCode = response.statusCode;
+    if (statusCode !== 201) {
+      var error = new Error(responseBody);
+      error.statusCode = response.statusCode;
+      error.request = msRest.stripRequest(httpRequest);
+      error.response = msRest.stripResponse(response);
+      if (responseBody === '') responseBody = null;
+      var parsedErrorResponse;
+      try {
+        parsedErrorResponse = JSON.parse(responseBody);
+        if (parsedErrorResponse) {
+          if (parsedErrorResponse.error) parsedErrorResponse = parsedErrorResponse.error;
+          if (parsedErrorResponse.code) error.code = parsedErrorResponse.code;
+          if (parsedErrorResponse.message) error.message = parsedErrorResponse.message;
+        }
+        if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {
+          var resultMapper = new client.models['Failure']().mapper();
+          error.body = client.deserialize(resultMapper, parsedErrorResponse, 'error.body');
+        }
+      } catch (defaultError) {
+        error.message = util.format('Error "%s" occurred in deserializing the responseBody ' + 
+                         '- "%s" for the default response.', defaultError.message, responseBody);
+        return callback(error);
+      }
+      return callback(error);
+    }
+    // Create Result
+    var result = null;
+    if (responseBody === '') responseBody = null;
+    // Deserialize Response
+    if (statusCode === 201) {
+      var parsedResponse = null;
+      try {
+        parsedResponse = JSON.parse(responseBody);
+        result = JSON.parse(responseBody);
+        if (parsedResponse !== null && parsedResponse !== undefined) {
+          var resultMapper = new client.models['Deployment']().mapper();
+          result = client.deserialize(resultMapper, parsedResponse, 'result');
+        }
+      } catch (error) {
+        var deserializationError = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
+        deserializationError.request = msRest.stripRequest(httpRequest);
+        deserializationError.response = msRest.stripResponse(response);
+        return callback(deserializationError);
+      }
+    }
+
+    return callback(null, result, httpRequest, response);
+  });
+};
+
+
+module.exports = Codepush;
diff --git a/src/util/apis/generated/operations/crashOperations.js b/src/util/apis/generated/operations/crashOperations.js
index 91d42ab..1eeed86 100644
--- a/src/util/apis/generated/operations/crashOperations.js
+++ b/src/util/apis/generated/operations/crashOperations.js
@@ -1730,6 +1730,284 @@ CrashOperations.prototype.postSymbolUpload = function (ownerName, appName, optio
 };
 
 /**
+ * @summary Gets missing symbol crash group by its id
+ *
+ * Gets missing symbol crash group by its id
+ *
+ * @param {string} symbolGroupId missing symbol crash group id
+ * 
+ * @param {string} ownerName The name of the owner
+ * 
+ * @param {string} appName The name of the application
+ * 
+ * @param {object} [options] Optional Parameters.
+ * 
+ * @param {object} [options.customHeaders] Headers that will be added to the
+ * request
+ * 
+ * @param {function} callback
+ *
+ * @returns {function} callback(err, result, request, response)
+ *
+ *                      {Error}  err        - The Error object if an error occurred, null otherwise.
+ *
+ *                      {object} [result]   - The deserialized result object.
+ *                      See {@link MissingSymbolCrashGroupsResponse} for more
+ *                      information.
+ *
+ *                      {object} [request]  - The HTTP Request object if an error did not occur.
+ *
+ *                      {stream} [response] - The HTTP Response stream if an error did not occur.
+ */
+CrashOperations.prototype.getMissingSymbolCrashGroupById = function (symbolGroupId, ownerName, appName, options, callback) {
+  var client = this.client;
+  if(!callback && typeof options === 'function') {
+    callback = options;
+    options = null;
+  }
+  if (!callback) {
+    throw new Error('callback cannot be null.');
+  }
+  // Validate
+  try {
+    if (symbolGroupId === null || symbolGroupId === undefined || typeof symbolGroupId.valueOf() !== 'string') {
+      throw new Error('symbolGroupId cannot be null or undefined and it must be of type string.');
+    }
+    if (ownerName === null || ownerName === undefined || typeof ownerName.valueOf() !== 'string') {
+      throw new Error('ownerName cannot be null or undefined and it must be of type string.');
+    }
+    if (appName === null || appName === undefined || typeof appName.valueOf() !== 'string') {
+      throw new Error('appName cannot be null or undefined and it must be of type string.');
+    }
+  } catch (error) {
+    return callback(error);
+  }
+
+  // Construct URL
+  var baseUrl = this.client.baseUri;
+  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/symbol_groups/{symbol_group_id}';
+  requestUrl = requestUrl.replace('{symbol_group_id}', encodeURIComponent(symbolGroupId));
+  requestUrl = requestUrl.replace('{owner_name}', encodeURIComponent(ownerName));
+  requestUrl = requestUrl.replace('{app_name}', encodeURIComponent(appName));
+
+  // Create HTTP transport objects
+  var httpRequest = new WebResource();
+  httpRequest.method = 'GET';
+  httpRequest.headers = {};
+  httpRequest.url = requestUrl;
+  // Set Headers
+  if(options) {
+    for(var headerName in options['customHeaders']) {
+      if (options['customHeaders'].hasOwnProperty(headerName)) {
+        httpRequest.headers[headerName] = options['customHeaders'][headerName];
+      }
+    }
+  }
+  httpRequest.headers['Content-Type'] = 'application/json; charset=utf-8';
+  httpRequest.body = null;
+  // Send Request
+  return client.pipeline(httpRequest, function (err, response, responseBody) {
+    if (err) {
+      return callback(err);
+    }
+    var statusCode = response.statusCode;
+    if (statusCode !== 200) {
+      var error = new Error(responseBody);
+      error.statusCode = response.statusCode;
+      error.request = msRest.stripRequest(httpRequest);
+      error.response = msRest.stripResponse(response);
+      if (responseBody === '') responseBody = null;
+      var parsedErrorResponse;
+      try {
+        parsedErrorResponse = JSON.parse(responseBody);
+        if (parsedErrorResponse) {
+          if (parsedErrorResponse.error) parsedErrorResponse = parsedErrorResponse.error;
+          if (parsedErrorResponse.code) error.code = parsedErrorResponse.code;
+          if (parsedErrorResponse.message) error.message = parsedErrorResponse.message;
+        }
+        if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {
+          var resultMapper = new client.models['FailureResponse']().mapper();
+          error.body = client.deserialize(resultMapper, parsedErrorResponse, 'error.body');
+        }
+      } catch (defaultError) {
+        error.message = util.format('Error "%s" occurred in deserializing the responseBody ' + 
+                         '- "%s" for the default response.', defaultError.message, responseBody);
+        return callback(error);
+      }
+      return callback(error);
+    }
+    // Create Result
+    var result = null;
+    if (responseBody === '') responseBody = null;
+    // Deserialize Response
+    if (statusCode === 200) {
+      var parsedResponse = null;
+      try {
+        parsedResponse = JSON.parse(responseBody);
+        result = JSON.parse(responseBody);
+        if (parsedResponse !== null && parsedResponse !== undefined) {
+          var resultMapper = new client.models['MissingSymbolCrashGroupsResponse']().mapper();
+          result = client.deserialize(resultMapper, parsedResponse, 'result');
+        }
+      } catch (error) {
+        var deserializationError = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
+        deserializationError.request = msRest.stripRequest(httpRequest);
+        deserializationError.response = msRest.stripResponse(response);
+        return callback(deserializationError);
+      }
+    }
+
+    return callback(null, result, httpRequest, response);
+  });
+};
+
+/**
+ * @summary Gets top N (ordered by crash count) of crash groups by missing
+ * symbol
+ *
+ * Gets top N (ordered by crash count) of crash groups by missing symbol
+ *
+ * @param {number} top top N elements
+ * 
+ * @param {string} ownerName The name of the owner
+ * 
+ * @param {string} appName The name of the application
+ * 
+ * @param {object} [options] Optional Parameters.
+ * 
+ * @param {string} [options.filter] query filter
+ * 
+ * @param {object} [options.customHeaders] Headers that will be added to the
+ * request
+ * 
+ * @param {function} callback
+ *
+ * @returns {function} callback(err, result, request, response)
+ *
+ *                      {Error}  err        - The Error object if an error occurred, null otherwise.
+ *
+ *                      {object} [result]   - The deserialized result object.
+ *                      See {@link MissingSymbolCrashGroupsResponse} for more
+ *                      information.
+ *
+ *                      {object} [request]  - The HTTP Request object if an error did not occur.
+ *
+ *                      {stream} [response] - The HTTP Response stream if an error did not occur.
+ */
+CrashOperations.prototype.getTopNFilteredMissingSymbolCrashGroups = function (top, ownerName, appName, options, callback) {
+  var client = this.client;
+  if(!callback && typeof options === 'function') {
+    callback = options;
+    options = null;
+  }
+  if (!callback) {
+    throw new Error('callback cannot be null.');
+  }
+  var filter = (options && options.filter !== undefined) ? options.filter : undefined;
+  // Validate
+  try {
+    if (top === null || top === undefined || typeof top !== 'number') {
+      throw new Error('top cannot be null or undefined and it must be of type number.');
+    }
+    if (filter !== null && filter !== undefined && typeof filter.valueOf() !== 'string') {
+      throw new Error('filter must be of type string.');
+    }
+    if (ownerName === null || ownerName === undefined || typeof ownerName.valueOf() !== 'string') {
+      throw new Error('ownerName cannot be null or undefined and it must be of type string.');
+    }
+    if (appName === null || appName === undefined || typeof appName.valueOf() !== 'string') {
+      throw new Error('appName cannot be null or undefined and it must be of type string.');
+    }
+  } catch (error) {
+    return callback(error);
+  }
+
+  // Construct URL
+  var baseUrl = this.client.baseUri;
+  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/symbol_groups';
+  requestUrl = requestUrl.replace('{owner_name}', encodeURIComponent(ownerName));
+  requestUrl = requestUrl.replace('{app_name}', encodeURIComponent(appName));
+  var queryParameters = [];
+  queryParameters.push('top=' + encodeURIComponent(top.toString()));
+  if (filter !== null && filter !== undefined) {
+    queryParameters.push('filter=' + encodeURIComponent(filter));
+  }
+  if (queryParameters.length > 0) {
+    requestUrl += '?' + queryParameters.join('&');
+  }
+
+  // Create HTTP transport objects
+  var httpRequest = new WebResource();
+  httpRequest.method = 'GET';
+  httpRequest.headers = {};
+  httpRequest.url = requestUrl;
+  // Set Headers
+  if(options) {
+    for(var headerName in options['customHeaders']) {
+      if (options['customHeaders'].hasOwnProperty(headerName)) {
+        httpRequest.headers[headerName] = options['customHeaders'][headerName];
+      }
+    }
+  }
+  httpRequest.headers['Content-Type'] = 'application/json; charset=utf-8';
+  httpRequest.body = null;
+  // Send Request
+  return client.pipeline(httpRequest, function (err, response, responseBody) {
+    if (err) {
+      return callback(err);
+    }
+    var statusCode = response.statusCode;
+    if (statusCode !== 200) {
+      var error = new Error(responseBody);
+      error.statusCode = response.statusCode;
+      error.request = msRest.stripRequest(httpRequest);
+      error.response = msRest.stripResponse(response);
+      if (responseBody === '') responseBody = null;
+      var parsedErrorResponse;
+      try {
+        parsedErrorResponse = JSON.parse(responseBody);
+        if (parsedErrorResponse) {
+          if (parsedErrorResponse.error) parsedErrorResponse = parsedErrorResponse.error;
+          if (parsedErrorResponse.code) error.code = parsedErrorResponse.code;
+          if (parsedErrorResponse.message) error.message = parsedErrorResponse.message;
+        }
+        if (parsedErrorResponse !== null && parsedErrorResponse !== undefined) {
+          var resultMapper = new client.models['FailureResponse']().mapper();
+          error.body = client.deserialize(resultMapper, parsedErrorResponse, 'error.body');
+        }
+      } catch (defaultError) {
+        error.message = util.format('Error "%s" occurred in deserializing the responseBody ' + 
+                         '- "%s" for the default response.', defaultError.message, responseBody);
+        return callback(error);
+      }
+      return callback(error);
+    }
+    // Create Result
+    var result = null;
+    if (responseBody === '') responseBody = null;
+    // Deserialize Response
+    if (statusCode === 200) {
+      var parsedResponse = null;
+      try {
+        parsedResponse = JSON.parse(responseBody);
+        result = JSON.parse(responseBody);
+        if (parsedResponse !== null && parsedResponse !== undefined) {
+          var resultMapper = new client.models['MissingSymbolCrashGroupsResponse']().mapper();
+          result = client.deserialize(resultMapper, parsedResponse, 'result');
+        }
+      } catch (error) {
+        var deserializationError = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
+        deserializationError.request = msRest.stripRequest(httpRequest);
+        deserializationError.response = msRest.stripResponse(response);
+        return callback(deserializationError);
+      }
+    }
+
+    return callback(null, result, httpRequest, response);
+  });
+};
+
+/**
  * Gets a stacktrace for a specific error
  *
  * @param {string} crashGroupId id of a specific group
diff --git a/src/util/apis/generated/operations/deprecated.js b/src/util/apis/generated/operations/deprecated.js
new file mode 100644
index 0000000..6685dbd
--- /dev/null
+++ b/src/util/apis/generated/operations/deprecated.js
@@ -0,0 +1,204 @@
+/*
+ * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
+ * Changes may cause incorrect behavior and will be lost if the code is
+ * regenerated.
+ */
+
+'use strict';
+
+var util = require('util');
+var msRest = require('ms-rest');
+var WebResource = msRest.WebResource;
+
+/**
+ * @class
+ * Deprecated
+ * __NOTE__: An instance of this class is automatically created for an
+ * instance of the MobileCenterClient.
+ * Initializes a new instance of the Deprecated class.
+ * @constructor
+ *
+ * @param {MobileCenterClient} client Reference to the service client.
+ */
+function Deprecated(client) {
+  this.client = client;
+}
+
+/**
+ * Invites a new or existing user to an app
+ *
+ * @param {string} ownerName The name of the owner
+ * 
+ * @param {string} appName The name of the application
+ * 
+ * @param {string} userEmail The email of the user to invite
+ * 
+ * @param {object} [options] Optional Parameters.
+ * 
+ * @param {object} [options.customHeaders] Headers that will be added to the
+ * request
+ * 
+ * @param {function} callback
+ *
+ * @returns {function} callback(err, result, request, response)
+ *
+ *                      {Error}  err        - The Error object if an error occurred, null otherwise.
+ *
+ *                      {object} [result]   - The deserialized result object.
+ *                      See {@link ErrorResponse} for more information.
+ *
+ *                      {object} [request]  - The HTTP Request object if an error did not occur.
+ *
+ *                      {stream} [response] - The HTTP Response stream if an error did not occur.
+ */
+Deprecated.prototype.inviteAppUser = function (ownerName, appName, userEmail, options, callback) {
+  var client = this.client;
+  if(!callback && typeof options === 'function') {
+    callback = options;
+    options = null;
+  }
+  if (!callback) {
+    throw new Error('callback cannot be null.');
+  }
+  // Validate
+  try {
+    if (ownerName === null || ownerName === undefined || typeof ownerName.valueOf() !== 'string') {
+      throw new Error('ownerName cannot be null or undefined and it must be of type string.');
+    }
+    if (appName === null || appName === undefined || typeof appName.valueOf() !== 'string') {
+      throw new Error('appName cannot be null or undefined and it must be of type string.');
+    }
+    if (userEmail === null || userEmail === undefined || typeof userEmail.valueOf() !== 'string') {
+      throw new Error('userEmail cannot be null or undefined and it must be of type string.');
+    }
+  } catch (error) {
+    return callback(error);
+  }
+
+  // Construct URL
+  var baseUrl = this.client.baseUri;
+  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/invitations/{user_email}';
+  requestUrl = requestUrl.replace('{owner_name}', encodeURIComponent(ownerName));
+  requestUrl = requestUrl.replace('{app_name}', encodeURIComponent(appName));
+  requestUrl = requestUrl.replace('{user_email}', encodeURIComponent(userEmail));
+
+  // Create HTTP transport objects
+  var httpRequest = new WebResource();
+  httpRequest.method = 'POST';
+  httpRequest.headers = {};
+  httpRequest.url = requestUrl;
+  // Set Headers
+  if(options) {
+    for(var headerName in options['customHeaders']) {
+      if (options['customHeaders'].hasOwnProperty(headerName)) {
+        httpRequest.headers[headerName] = options['customHeaders'][headerName];
+      }
+    }
+  }
+  httpRequest.headers['Content-Type'] = 'application/json; charset=utf-8';
+  httpRequest.body = null;
+  // Send Request
+  return client.pipeline(httpRequest, function (err, response, responseBody) {
+    if (err) {
+      return callback(err);
+    }
+    var statusCode = response.statusCode;
+    if (statusCode !== 204 && statusCode !== 400 && statusCode !== 403 && statusCode !== 404 && statusCode !== 409) {
+      var error = new Error(responseBody);
+      error.statusCode = response.statusCode;
+      error.request = msRest.stripRequest(httpRequest);
+      error.response = msRest.stripResponse(response);
+      if (responseBody === '') responseBody = null;
+      var parsedErrorResponse;
+      try {
+        parsedErrorResponse = JSON.parse(responseBody);
+        if (parsedErrorResponse) {
+          if (parsedErrorResponse.error) parsedErrorResponse = parsedErrorResponse.error;
+          if (parsedErrorResponse.code) error.code = parsedErrorResponse.code;
+          if (parsedErrorResponse.message) error.message = parsedErrorResponse.message;
+        }
+      } catch (defaultError) {
+        error.message = util.format('Error "%s" occurred in deserializing the responseBody ' + 
+                         '- "%s" for the default response.', defaultError.message, responseBody);
+        return callback(error);
+      }
+      return callback(error);
+    }
+    // Create Result
+    var result = null;
+    if (responseBody === '') responseBody = null;
+    // Deserialize Response
+    if (statusCode === 400) {
+      var parsedResponse = null;
+      try {
+        parsedResponse = JSON.parse(responseBody);
+        result = JSON.parse(responseBody);
+        if (parsedResponse !== null && parsedResponse !== undefined) {
+          var resultMapper = new client.models['ErrorResponse']().mapper();
+          result = client.deserialize(resultMapper, parsedResponse, 'result');
+        }
+      } catch (error) {
+        var deserializationError = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
+        deserializationError.request = msRest.stripRequest(httpRequest);
+        deserializationError.response = msRest.stripResponse(response);
+        return callback(deserializationError);
+      }
+    }
+    // Deserialize Response
+    if (statusCode === 403) {
+      var parsedResponse = null;
+      try {
+        parsedResponse = JSON.parse(responseBody);
+        result = JSON.parse(responseBody);
+        if (parsedResponse !== null && parsedResponse !== undefined) {
+          var resultMapper = new client.models['ErrorResponse']().mapper();
+          result = client.deserialize(resultMapper, parsedResponse, 'result');
+        }
+      } catch (error) {
+        var deserializationError1 = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
+        deserializationError1.request = msRest.stripRequest(httpRequest);
+        deserializationError1.response = msRest.stripResponse(response);
+        return callback(deserializationError1);
+      }
+    }
+    // Deserialize Response
+    if (statusCode === 404) {
+      var parsedResponse = null;
+      try {
+        parsedResponse = JSON.parse(responseBody);
+        result = JSON.parse(responseBody);
+        if (parsedResponse !== null && parsedResponse !== undefined) {
+          var resultMapper = new client.models['ErrorResponse']().mapper();
+          result = client.deserialize(resultMapper, parsedResponse, 'result');
+        }
+      } catch (error) {
+        var deserializationError2 = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
+        deserializationError2.request = msRest.stripRequest(httpRequest);
+        deserializationError2.response = msRest.stripResponse(response);
+        return callback(deserializationError2);
+      }
+    }
+    // Deserialize Response
+    if (statusCode === 409) {
+      var parsedResponse = null;
+      try {
+        parsedResponse = JSON.parse(responseBody);
+        result = JSON.parse(responseBody);
+        if (parsedResponse !== null && parsedResponse !== undefined) {
+          var resultMapper = new client.models['ErrorResponse']().mapper();
+          result = client.deserialize(resultMapper, parsedResponse, 'result');
+        }
+      } catch (error) {
+        var deserializationError3 = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
+        deserializationError3.request = msRest.stripRequest(httpRequest);
+        deserializationError3.response = msRest.stripResponse(response);
+        return callback(deserializationError3);
+      }
+    }
+
+    return callback(null, result, httpRequest, response);
+  });
+};
+
+
+module.exports = Deprecated;
diff --git a/src/util/apis/generated/operations/distribute.js b/src/util/apis/generated/operations/distribute.js
index 10d2ac3..c238202 100644
--- a/src/util/apis/generated/operations/distribute.js
+++ b/src/util/apis/generated/operations/distribute.js
@@ -29,6 +29,179 @@ function Distribute(client) {
  * latest release that was distributed to the current user (from all the
  * distribution groups).
  *
+ * @param {string} appSecret The secret of the target application
+ * 
+ * @param {string} releaseId The ID of the release, or `latest` to get the
+ * latest release from all the distribution groups assigned to the current
+ * user.
+ * 
+ * @param {object} [options] Optional Parameters.
+ * 
+ * @param {object} [options.customHeaders] Headers that will be added to the
+ * request
+ * 
+ * @param {function} callback
+ *
+ * @returns {function} callback(err, result, request, response)
+ *
+ *                      {Error}  err        - The Error object if an error occurred, null otherwise.
+ *
+ *                      {object} [result]   - The deserialized result object.
+ *
+ *                      {object} [request]  - The HTTP Request object if an error did not occur.
+ *
+ *                      {stream} [response] - The HTTP Response stream if an error did not occur.
+ */
+Distribute.prototype.getReleaseOrLatestReleaseBySecret = function (appSecret, releaseId, options, callback) {
+  var client = this.client;
+  if(!callback && typeof options === 'function') {
+    callback = options;
+    options = null;
+  }
+  if (!callback) {
+    throw new Error('callback cannot be null.');
+  }
+  // Validate
+  try {
+    if (appSecret === null || appSecret === undefined || typeof appSecret.valueOf() !== 'string') {
+      throw new Error('appSecret cannot be null or undefined and it must be of type string.');
+    }
+    if (releaseId === null || releaseId === undefined || typeof releaseId.valueOf() !== 'string') {
+      throw new Error('releaseId cannot be null or undefined and it must be of type string.');
+    }
+  } catch (error) {
+    return callback(error);
+  }
+
+  // Construct URL
+  var baseUrl = this.client.baseUri;
+  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/sdk/apps/{app_secret}/releases/{release_id}';
+  requestUrl = requestUrl.replace('{app_secret}', encodeURIComponent(appSecret));
+  requestUrl = requestUrl.replace('{release_id}', encodeURIComponent(releaseId));
+
+  // Create HTTP transport objects
+  var httpRequest = new WebResource();
+  httpRequest.method = 'GET';
+  httpRequest.headers = {};
+  httpRequest.url = requestUrl;
+  // Set Headers
+  if(options) {
+    for(var headerName in options['customHeaders']) {
+      if (options['customHeaders'].hasOwnProperty(headerName)) {
+        httpRequest.headers[headerName] = options['customHeaders'][headerName];
+      }
+    }
+  }
+  httpRequest.headers['Content-Type'] = 'application/json; charset=utf-8';
+  httpRequest.body = null;
+  // Send Request
+  return client.pipeline(httpRequest, function (err, response, responseBody) {
+    if (err) {
+      return callback(err);
+    }
+    var statusCode = response.statusCode;
+    if (statusCode !== 200 && statusCode !== 400 && statusCode !== 404 && statusCode !== 500) {
+      var error = new Error(responseBody);
+      error.statusCode = response.statusCode;
+      error.request = msRest.stripRequest(httpRequest);
+      error.response = msRest.stripResponse(response);
+      if (responseBody === '') responseBody = null;
+      var parsedErrorResponse;
+      try {
+        parsedErrorResponse = JSON.parse(responseBody);
+        if (parsedErrorResponse) {
+          if (parsedErrorResponse.error) parsedErrorResponse = parsedErrorResponse.error;
+          if (parsedErrorResponse.code) error.code = parsedErrorResponse.code;
+          if (parsedErrorResponse.message) error.message = parsedErrorResponse.message;
+        }
+      } catch (defaultError) {
+        error.message = util.format('Error "%s" occurred in deserializing the responseBody ' + 
+                         '- "%s" for the default response.', defaultError.message, responseBody);
+        return callback(error);
+      }
+      return callback(error);
+    }
+    // Create Result
+    var result = null;
+    if (responseBody === '') responseBody = null;
+    // Deserialize Response
+    if (statusCode === 200) {
+      var parsedResponse = null;
+      try {
+        parsedResponse = JSON.parse(responseBody);
+        result = JSON.parse(responseBody);
+        if (parsedResponse !== null && parsedResponse !== undefined) {
+          var resultMapper = new client.models['ReleaseDetails']().mapper();
+          result = client.deserialize(resultMapper, parsedResponse, 'result');
+        }
+      } catch (error) {
+        var deserializationError = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
+        deserializationError.request = msRest.stripRequest(httpRequest);
+        deserializationError.response = msRest.stripResponse(response);
+        return callback(deserializationError);
+      }
+    }
+    // Deserialize Response
+    if (statusCode === 400) {
+      var parsedResponse = null;
+      try {
+        parsedResponse = JSON.parse(responseBody);
+        result = JSON.parse(responseBody);
+        if (parsedResponse !== null && parsedResponse !== undefined) {
+          var resultMapper = new client.models['ErrorDetails']().mapper();
+          result = client.deserialize(resultMapper, parsedResponse, 'result');
+        }
+      } catch (error) {
+        var deserializationError1 = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
+        deserializationError1.request = msRest.stripRequest(httpRequest);
+        deserializationError1.response = msRest.stripResponse(response);
+        return callback(deserializationError1);
+      }
+    }
+    // Deserialize Response
+    if (statusCode === 404) {
+      var parsedResponse = null;
+      try {
+        parsedResponse = JSON.parse(responseBody);
+        result = JSON.parse(responseBody);
+        if (parsedResponse !== null && parsedResponse !== undefined) {
+          var resultMapper = new client.models['ErrorDetails']().mapper();
+          result = client.deserialize(resultMapper, parsedResponse, 'result');
+        }
+      } catch (error) {
+        var deserializationError2 = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
+        deserializationError2.request = msRest.stripRequest(httpRequest);
+        deserializationError2.response = msRest.stripResponse(response);
+        return callback(deserializationError2);
+      }
+    }
+    // Deserialize Response
+    if (statusCode === 500) {
+      var parsedResponse = null;
+      try {
+        parsedResponse = JSON.parse(responseBody);
+        result = JSON.parse(responseBody);
+        if (parsedResponse !== null && parsedResponse !== undefined) {
+          var resultMapper = new client.models['ErrorDetails']().mapper();
+          result = client.deserialize(resultMapper, parsedResponse, 'result');
+        }
+      } catch (error) {
+        var deserializationError3 = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
+        deserializationError3.request = msRest.stripRequest(httpRequest);
+        deserializationError3.response = msRest.stripResponse(response);
+        return callback(deserializationError3);
+      }
+    }
+
+    return callback(null, result, httpRequest, response);
+  });
+};
+
+/**
+ * Get a release with id `release_id`. if `release_id` is `latest`, return the
+ * latest release that was distributed to the current user (from all the
+ * distribution groups).
+ *
  * @param {string} releaseId The ID of the release, or `latest` to get the
  * latest release from all the distribution groups assigned to the current
  * user.
@@ -54,7 +227,7 @@ function Distribute(client) {
  *
  *                      {stream} [response] - The HTTP Response stream if an error did not occur.
  */
-Distribute.prototype.getReleaseOrLatestRelease = function (releaseId, ownerName, appName, options, callback) {
+Distribute.prototype.getRelease = function (releaseId, ownerName, appName, options, callback) {
   var client = this.client;
   if(!callback && typeof options === 'function') {
     callback = options;
@@ -224,7 +397,7 @@ Distribute.prototype.getReleaseOrLatestRelease = function (releaseId, ownerName,
  *
  *                      {stream} [response] - The HTTP Response stream if an error did not occur.
  */
-Distribute.prototype.patchV01AppsByOwnerNameByAppNameReleasesByReleaseId = function (releaseId, ownerName, appName, options, callback) {
+Distribute.prototype.updateRelease = function (releaseId, ownerName, appName, options, callback) {
   var client = this.client;
   if(!callback && typeof options === 'function') {
     callback = options;
@@ -399,7 +572,7 @@ Distribute.prototype.patchV01AppsByOwnerNameByAppNameReleasesByReleaseId = funct
  *
  *                      {stream} [response] - The HTTP Response stream if an error did not occur.
  */
-Distribute.prototype.deleteV01AppsByOwnerNameByAppNameReleasesByReleaseId = function (releaseId, ownerName, appName, options, callback) {
+Distribute.prototype.deleteRelease = function (releaseId, ownerName, appName, options, callback) {
   var client = this.client;
   if(!callback && typeof options === 'function') {
     callback = options;
@@ -546,7 +719,7 @@ Distribute.prototype.deleteV01AppsByOwnerNameByAppNameReleasesByReleaseId = func
  *
  *                      {stream} [response] - The HTTP Response stream if an error did not occur.
  */
-Distribute.prototype.getV01AppsByOwnerNameByAppNameReleases = function (ownerName, appName, options, callback) {
+Distribute.prototype.getReleases = function (ownerName, appName, options, callback) {
   var client = this.client;
   if(!callback && typeof options === 'function') {
     callback = options;
@@ -704,7 +877,7 @@ Distribute.prototype.getV01AppsByOwnerNameByAppNameReleases = function (ownerNam
  *
  *                      {stream} [response] - The HTTP Response stream if an error did not occur.
  */
-Distribute.prototype.patchV01AppsByOwnerNameByAppNameReleaseUploadsByUploadId = function (uploadId, ownerName, appName, status, options, callback) {
+Distribute.prototype.updateReleaseUpload = function (uploadId, ownerName, appName, status, options, callback) {
   var client = this.client;
   if(!callback && typeof options === 'function') {
     callback = options;
@@ -850,7 +1023,7 @@ Distribute.prototype.patchV01AppsByOwnerNameByAppNameReleaseUploadsByUploadId = 
  *
  *                      {stream} [response] - The HTTP Response stream if an error did not occur.
  */
-Distribute.prototype.postV01AppsByOwnerNameByAppNameReleaseUploads = function (ownerName, appName, options, callback) {
+Distribute.prototype.createReleaseUpload = function (ownerName, appName, options, callback) {
   var client = this.client;
   if(!callback && typeof options === 'function') {
     callback = options;
@@ -1078,9 +1251,14 @@ Distribute.prototype.getLatestReleases = function (ownerName, appName, options, 
 };
 
 /**
- * Get the latest package from every distribution group associated with an
- * application.
+ * Return detailed information about a distributed release in a given
+ * distribution group.
  *
+ * @param {string} distributionGroupName The name of the distribution group.
+ * 
+ * @param {string} releaseId Must be `latest`, a specific `release_id` is not
+ * supported at this time.
+ * 
  * @param {string} ownerName The name of the owner
  * 
  * @param {string} appName The name of the application
@@ -1096,13 +1274,13 @@ Distribute.prototype.getLatestReleases = function (ownerName, appName, options, 
  *
  *                      {Error}  err        - The Error object if an error occurred, null otherwise.
  *
- *                      {array} [result]   - The deserialized result object.
+ *                      {object} [result]   - The deserialized result object.
  *
  *                      {object} [request]  - The HTTP Request object if an error did not occur.
  *
  *                      {stream} [response] - The HTTP Response stream if an error did not occur.
  */
-Distribute.prototype.getLatestPackages = function (ownerName, appName, options, callback) {
+Distribute.prototype.getLatestReleaseForDistributionGroup = function (distributionGroupName, releaseId, ownerName, appName, options, callback) {
   var client = this.client;
   if(!callback && typeof options === 'function') {
     callback = options;
@@ -1113,6 +1291,12 @@ Distribute.prototype.getLatestPackages = function (ownerName, appName, options, 
   }
   // Validate
   try {
+    if (distributionGroupName === null || distributionGroupName === undefined || typeof distributionGroupName.valueOf() !== 'string') {
+      throw new Error('distributionGroupName cannot be null or undefined and it must be of type string.');
+    }
+    if (releaseId === null || releaseId === undefined || typeof releaseId.valueOf() !== 'string') {
+      throw new Error('releaseId cannot be null or undefined and it must be of type string.');
+    }
     if (ownerName === null || ownerName === undefined || typeof ownerName.valueOf() !== 'string') {
       throw new Error('ownerName cannot be null or undefined and it must be of type string.');
     }
@@ -1125,7 +1309,9 @@ Distribute.prototype.getLatestPackages = function (ownerName, appName, options, 
 
   // Construct URL
   var baseUrl = this.client.baseUri;
-  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/recent_packages';
+  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}/releases/{release_id}';
+  requestUrl = requestUrl.replace('{distribution_group_name}', encodeURIComponent(distributionGroupName));
+  requestUrl = requestUrl.replace('{release_id}', encodeURIComponent(releaseId));
   requestUrl = requestUrl.replace('{owner_name}', encodeURIComponent(ownerName));
   requestUrl = requestUrl.replace('{app_name}', encodeURIComponent(appName));
 
@@ -1150,7 +1336,7 @@ Distribute.prototype.getLatestPackages = function (ownerName, appName, options, 
       return callback(err);
     }
     var statusCode = response.statusCode;
-    if (statusCode !== 200) {
+    if (statusCode !== 200 && statusCode !== 404 && statusCode !== 501) {
       var error = new Error(responseBody);
       error.statusCode = response.statusCode;
       error.request = msRest.stripRequest(httpRequest);
@@ -1181,21 +1367,7 @@ Distribute.prototype.getLatestPackages = function (ownerName, appName, options, 
         parsedResponse = JSON.parse(responseBody);
         result = JSON.parse(responseBody);
         if (parsedResponse !== null && parsedResponse !== undefined) {
-          var resultMapper = {
-            required: false,
-            serializedName: 'parsedResponse',
-            type: {
-              name: 'Sequence',
-              element: {
-                  required: false,
-                  serializedName: 'BasicPackageDetailsElementType',
-                  type: {
-                    name: 'Composite',
-                    className: 'BasicPackageDetails'
-                  }
-              }
-            }
-          };
+          var resultMapper = new client.models['ReleaseDetails']().mapper();
           result = client.deserialize(resultMapper, parsedResponse, 'result');
         }
       } catch (error) {
@@ -1205,19 +1377,51 @@ Distribute.prototype.getLatestPackages = function (ownerName, appName, options, 
         return callback(deserializationError);
       }
     }
+    // Deserialize Response
+    if (statusCode === 404) {
+      var parsedResponse = null;
+      try {
+        parsedResponse = JSON.parse(responseBody);
+        result = JSON.parse(responseBody);
+        if (parsedResponse !== null && parsedResponse !== undefined) {
+          var resultMapper = new client.models['ErrorDetails']().mapper();
+          result = client.deserialize(resultMapper, parsedResponse, 'result');
+        }
+      } catch (error) {
+        var deserializationError1 = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
+        deserializationError1.request = msRest.stripRequest(httpRequest);
+        deserializationError1.response = msRest.stripResponse(response);
+        return callback(deserializationError1);
+      }
+    }
+    // Deserialize Response
+    if (statusCode === 501) {
+      var parsedResponse = null;
+      try {
+        parsedResponse = JSON.parse(responseBody);
+        result = JSON.parse(responseBody);
+        if (parsedResponse !== null && parsedResponse !== undefined) {
+          var resultMapper = new client.models['ErrorDetails']().mapper();
+          result = client.deserialize(resultMapper, parsedResponse, 'result');
+        }
+      } catch (error) {
+        var deserializationError2 = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
+        deserializationError2.request = msRest.stripRequest(httpRequest);
+        deserializationError2.response = msRest.stripResponse(response);
+        return callback(deserializationError2);
+      }
+    }
 
     return callback(null, result, httpRequest, response);
   });
 };
 
 /**
- * Get a package with id 'package_id'. if 'package_id' is 'latest', return the
- * latest package that was distributed to the current user (from all the
- * distribution groups).
+ * Deletes a release with id 'release_id' in a given distribution group.
  *
- * @param {string} packageId The ID of the package, or 'latest' to get the
- * latest package from all the distribution groups assigned to the current
- * user.
+ * @param {string} distributionGroupName The name of the distribution group.
+ * 
+ * @param {string} releaseId The ID identifying the unique release.
  * 
  * @param {string} ownerName The name of the owner
  * 
@@ -1240,7 +1444,7 @@ Distribute.prototype.getLatestPackages = function (ownerName, appName, options, 
  *
  *                      {stream} [response] - The HTTP Response stream if an error did not occur.
  */
-Distribute.prototype.getPackageOrLatestPackage = function (packageId, ownerName, appName, options, callback) {
+Distribute.prototype.deleteReleaseForDistributionGroup = function (distributionGroupName, releaseId, ownerName, appName, options, callback) {
   var client = this.client;
   if(!callback && typeof options === 'function') {
     callback = options;
@@ -1251,8 +1455,11 @@ Distribute.prototype.getPackageOrLatestPackage = function (packageId, ownerName,
   }
   // Validate
   try {
-    if (packageId === null || packageId === undefined || typeof packageId.valueOf() !== 'string') {
-      throw new Error('packageId cannot be null or undefined and it must be of type string.');
+    if (distributionGroupName === null || distributionGroupName === undefined || typeof distributionGroupName.valueOf() !== 'string') {
+      throw new Error('distributionGroupName cannot be null or undefined and it must be of type string.');
+    }
+    if (releaseId === null || releaseId === undefined || typeof releaseId.valueOf() !== 'string') {
+      throw new Error('releaseId cannot be null or undefined and it must be of type string.');
     }
     if (ownerName === null || ownerName === undefined || typeof ownerName.valueOf() !== 'string') {
       throw new Error('ownerName cannot be null or undefined and it must be of type string.');
@@ -1266,14 +1473,15 @@ Distribute.prototype.getPackageOrLatestPackage = function (packageId, ownerName,
 
   // Construct URL
   var baseUrl = this.client.baseUri;
-  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/packages/{package_id}';
-  requestUrl = requestUrl.replace('{package_id}', encodeURIComponent(packageId));
+  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}/releases/{release_id}';
+  requestUrl = requestUrl.replace('{distribution_group_name}', encodeURIComponent(distributionGroupName));
+  requestUrl = requestUrl.replace('{release_id}', encodeURIComponent(releaseId));
   requestUrl = requestUrl.replace('{owner_name}', encodeURIComponent(ownerName));
   requestUrl = requestUrl.replace('{app_name}', encodeURIComponent(appName));
 
   // Create HTTP transport objects
   var httpRequest = new WebResource();
-  httpRequest.method = 'GET';
+  httpRequest.method = 'DELETE';
   httpRequest.headers = {};
   httpRequest.url = requestUrl;
   // Set Headers
@@ -1292,1243 +1500,7 @@ Distribute.prototype.getPackageOrLatestPackage = function (packageId, ownerName,
       return callback(err);
     }
     var statusCode = response.statusCode;
-    if (statusCode !== 200 && statusCode !== 400 && statusCode !== 404) {
-      var error = new Error(responseBody);
-      error.statusCode = response.statusCode;
-      error.request = msRest.stripRequest(httpRequest);
-      error.response = msRest.stripResponse(response);
-      if (responseBody === '') responseBody = null;
-      var parsedErrorResponse;
-      try {
-        parsedErrorResponse = JSON.parse(responseBody);
-        if (parsedErrorResponse) {
-          if (parsedErrorResponse.error) parsedErrorResponse = parsedErrorResponse.error;
-          if (parsedErrorResponse.code) error.code = parsedErrorResponse.code;
-          if (parsedErrorResponse.message) error.message = parsedErrorResponse.message;
-        }
-      } catch (defaultError) {
-        error.message = util.format('Error "%s" occurred in deserializing the responseBody ' + 
-                         '- "%s" for the default response.', defaultError.message, responseBody);
-        return callback(error);
-      }
-      return callback(error);
-    }
-    // Create Result
-    var result = null;
-    if (responseBody === '') responseBody = null;
-    // Deserialize Response
-    if (statusCode === 200) {
-      var parsedResponse = null;
-      try {
-        parsedResponse = JSON.parse(responseBody);
-        result = JSON.parse(responseBody);
-        if (parsedResponse !== null && parsedResponse !== undefined) {
-          var resultMapper = new client.models['PackageDetails']().mapper();
-          result = client.deserialize(resultMapper, parsedResponse, 'result');
-        }
-      } catch (error) {
-        var deserializationError = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
-        deserializationError.request = msRest.stripRequest(httpRequest);
-        deserializationError.response = msRest.stripResponse(response);
-        return callback(deserializationError);
-      }
-    }
-    // Deserialize Response
-    if (statusCode === 400) {
-      var parsedResponse = null;
-      try {
-        parsedResponse = JSON.parse(responseBody);
-        result = JSON.parse(responseBody);
-        if (parsedResponse !== null && parsedResponse !== undefined) {
-          var resultMapper = new client.models['ErrorDetails']().mapper();
-          result = client.deserialize(resultMapper, parsedResponse, 'result');
-        }
-      } catch (error) {
-        var deserializationError1 = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
-        deserializationError1.request = msRest.stripRequest(httpRequest);
-        deserializationError1.response = msRest.stripResponse(response);
-        return callback(deserializationError1);
-      }
-    }
-    // Deserialize Response
-    if (statusCode === 404) {
-      var parsedResponse = null;
-      try {
-        parsedResponse = JSON.parse(responseBody);
-        result = JSON.parse(responseBody);
-        if (parsedResponse !== null && parsedResponse !== undefined) {
-          var resultMapper = new client.models['ErrorDetails']().mapper();
-          result = client.deserialize(resultMapper, parsedResponse, 'result');
-        }
-      } catch (error) {
-        var deserializationError2 = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
-        deserializationError2.request = msRest.stripRequest(httpRequest);
-        deserializationError2.response = msRest.stripResponse(response);
-        return callback(deserializationError2);
-      }
-    }
-
-    return callback(null, result, httpRequest, response);
-  });
-};
-
-/**
- * Updates a package.
- *
- * @param {number} packageId The ID of the package
- * 
- * @param {string} ownerName The name of the owner
- * 
- * @param {string} appName The name of the application
- * 
- * @param {object} [options] Optional Parameters.
- * 
- * @param {string} [options.distributionGroupName] Name of a distribution
- * group. The package will be associated with this distribution group. If the
- * distribution group doesn't exist a 400 is returned. If both distribution
- * group name and id are passed, the id is taking precedence.
- * 
- * @param {string} [options.distributionGroupId] Id of a distribution group.
- * The package will be associated with this distribution group. If the
- * distribution group doesn't exist a 400 is returned. If both distribution
- * group name and id are passed, the id is taking precedence.
- * 
- * @param {string} [options.releaseNotes] Release notes for this package.
- * 
- * @param {object} [options.customHeaders] Headers that will be added to the
- * request
- * 
- * @param {function} callback
- *
- * @returns {function} callback(err, result, request, response)
- *
- *                      {Error}  err        - The Error object if an error occurred, null otherwise.
- *
- *                      {object} [result]   - The deserialized result object.
- *
- *                      {object} [request]  - The HTTP Request object if an error did not occur.
- *
- *                      {stream} [response] - The HTTP Response stream if an error did not occur.
- */
-Distribute.prototype.patchV01AppsByOwnerNameByAppNamePackagesByPackageId = function (packageId, ownerName, appName, options, callback) {
-  var client = this.client;
-  if(!callback && typeof options === 'function') {
-    callback = options;
-    options = null;
-  }
-  if (!callback) {
-    throw new Error('callback cannot be null.');
-  }
-  var distributionGroupName = (options && options.distributionGroupName !== undefined) ? options.distributionGroupName : undefined;
-  var distributionGroupId = (options && options.distributionGroupId !== undefined) ? options.distributionGroupId : undefined;
-  var releaseNotes = (options && options.releaseNotes !== undefined) ? options.releaseNotes : undefined;
-  // Validate
-  try {
-    if (packageId === null || packageId === undefined || typeof packageId !== 'number') {
-      throw new Error('packageId cannot be null or undefined and it must be of type number.');
-    }
-    if (ownerName === null || ownerName === undefined || typeof ownerName.valueOf() !== 'string') {
-      throw new Error('ownerName cannot be null or undefined and it must be of type string.');
-    }
-    if (appName === null || appName === undefined || typeof appName.valueOf() !== 'string') {
-      throw new Error('appName cannot be null or undefined and it must be of type string.');
-    }
-    if (distributionGroupName !== null && distributionGroupName !== undefined && typeof distributionGroupName.valueOf() !== 'string') {
-      throw new Error('distributionGroupName must be of type string.');
-    }
-    if (distributionGroupId !== null && distributionGroupId !== undefined && typeof distributionGroupId.valueOf() !== 'string') {
-      throw new Error('distributionGroupId must be of type string.');
-    }
-    if (releaseNotes !== null && releaseNotes !== undefined && typeof releaseNotes.valueOf() !== 'string') {
-      throw new Error('releaseNotes must be of type string.');
-    }
-  } catch (error) {
-    return callback(error);
-  }
-  var body;
-  if ((distributionGroupName !== null && distributionGroupName !== undefined) || (distributionGroupId !== null && distributionGroupId !== undefined) || (releaseNotes !== null && releaseNotes !== undefined)) {
-      body = new client.models['PackageUpdateRequest']();
-      body.distributionGroupName = distributionGroupName;
-      body.distributionGroupId = distributionGroupId;
-      body.releaseNotes = releaseNotes;
-  }
-
-  // Construct URL
-  var baseUrl = this.client.baseUri;
-  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/packages/{package_id}';
-  requestUrl = requestUrl.replace('{package_id}', encodeURIComponent(packageId.toString()));
-  requestUrl = requestUrl.replace('{owner_name}', encodeURIComponent(ownerName));
-  requestUrl = requestUrl.replace('{app_name}', encodeURIComponent(appName));
-
-  // Create HTTP transport objects
-  var httpRequest = new WebResource();
-  httpRequest.method = 'PATCH';
-  httpRequest.headers = {};
-  httpRequest.url = requestUrl;
-  // Set Headers
-  if(options) {
-    for(var headerName in options['customHeaders']) {
-      if (options['customHeaders'].hasOwnProperty(headerName)) {
-        httpRequest.headers[headerName] = options['customHeaders'][headerName];
-      }
-    }
-  }
-  httpRequest.headers['Content-Type'] = 'application/json; charset=utf-8';
-  // Serialize Request
-  var requestContent = null;
-  var requestModel = null;
-  try {
-    if (body !== null && body !== undefined) {
-      var requestModelMapper = new client.models['PackageUpdateRequest']().mapper();
-      requestModel = client.serialize(requestModelMapper, body, 'body');
-      requestContent = JSON.stringify(requestModel);
-    }
-  } catch (error) {
-    var serializationError = new Error(util.format('Error "%s" occurred in serializing the ' + 
-        'payload - "%s"', error.message, util.inspect(body, {depth: null})));
-    return callback(serializationError);
-  }
-  httpRequest.body = requestContent;
-  // Send Request
-  return client.pipeline(httpRequest, function (err, response, responseBody) {
-    if (err) {
-      return callback(err);
-    }
-    var statusCode = response.statusCode;
-    if (statusCode !== 200 && statusCode !== 400) {
-      var error = new Error(responseBody);
-      error.statusCode = response.statusCode;
-      error.request = msRest.stripRequest(httpRequest);
-      error.response = msRest.stripResponse(response);
-      if (responseBody === '') responseBody = null;
-      var parsedErrorResponse;
-      try {
-        parsedErrorResponse = JSON.parse(responseBody);
-        if (parsedErrorResponse) {
-          if (parsedErrorResponse.error) parsedErrorResponse = parsedErrorResponse.error;
-          if (parsedErrorResponse.code) error.code = parsedErrorResponse.code;
-          if (parsedErrorResponse.message) error.message = parsedErrorResponse.message;
-        }
-      } catch (defaultError) {
-        error.message = util.format('Error "%s" occurred in deserializing the responseBody ' + 
-                         '- "%s" for the default response.', defaultError.message, responseBody);
-        return callback(error);
-      }
-      return callback(error);
-    }
-    // Create Result
-    var result = null;
-    if (responseBody === '') responseBody = null;
-    // Deserialize Response
-    if (statusCode === 200) {
-      var parsedResponse = null;
-      try {
-        parsedResponse = JSON.parse(responseBody);
-        result = JSON.parse(responseBody);
-        if (parsedResponse !== null && parsedResponse !== undefined) {
-          var resultMapper = new client.models['PackageDetails']().mapper();
-          result = client.deserialize(resultMapper, parsedResponse, 'result');
-        }
-      } catch (error) {
-        var deserializationError = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
-        deserializationError.request = msRest.stripRequest(httpRequest);
-        deserializationError.response = msRest.stripResponse(response);
-        return callback(deserializationError);
-      }
-    }
-    // Deserialize Response
-    if (statusCode === 400) {
-      var parsedResponse = null;
-      try {
-        parsedResponse = JSON.parse(responseBody);
-        result = JSON.parse(responseBody);
-        if (parsedResponse !== null && parsedResponse !== undefined) {
-          var resultMapper = new client.models['ErrorDetails']().mapper();
-          result = client.deserialize(resultMapper, parsedResponse, 'result');
-        }
-      } catch (error) {
-        var deserializationError1 = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
-        deserializationError1.request = msRest.stripRequest(httpRequest);
-        deserializationError1.response = msRest.stripResponse(response);
-        return callback(deserializationError1);
-      }
-    }
-
-    return callback(null, result, httpRequest, response);
-  });
-};
-
-/**
- * Deletes a package.
- *
- * @param {string} packageId The ID of the package
- * 
- * @param {string} ownerName The name of the owner
- * 
- * @param {string} appName The name of the application
- * 
- * @param {object} [options] Optional Parameters.
- * 
- * @param {object} [options.customHeaders] Headers that will be added to the
- * request
- * 
- * @param {function} callback
- *
- * @returns {function} callback(err, result, request, response)
- *
- *                      {Error}  err        - The Error object if an error occurred, null otherwise.
- *
- *                      {object} [result]   - The deserialized result object.
- *                      See {@link ErrorDetails} for more information.
- *
- *                      {object} [request]  - The HTTP Request object if an error did not occur.
- *
- *                      {stream} [response] - The HTTP Response stream if an error did not occur.
- */
-Distribute.prototype.deleteV01AppsByOwnerNameByAppNamePackagesByPackageId = function (packageId, ownerName, appName, options, callback) {
-  var client = this.client;
-  if(!callback && typeof options === 'function') {
-    callback = options;
-    options = null;
-  }
-  if (!callback) {
-    throw new Error('callback cannot be null.');
-  }
-  // Validate
-  try {
-    if (packageId === null || packageId === undefined || typeof packageId.valueOf() !== 'string') {
-      throw new Error('packageId cannot be null or undefined and it must be of type string.');
-    }
-    if (ownerName === null || ownerName === undefined || typeof ownerName.valueOf() !== 'string') {
-      throw new Error('ownerName cannot be null or undefined and it must be of type string.');
-    }
-    if (appName === null || appName === undefined || typeof appName.valueOf() !== 'string') {
-      throw new Error('appName cannot be null or undefined and it must be of type string.');
-    }
-  } catch (error) {
-    return callback(error);
-  }
-
-  // Construct URL
-  var baseUrl = this.client.baseUri;
-  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/packages/{package_id}';
-  requestUrl = requestUrl.replace('{package_id}', encodeURIComponent(packageId));
-  requestUrl = requestUrl.replace('{owner_name}', encodeURIComponent(ownerName));
-  requestUrl = requestUrl.replace('{app_name}', encodeURIComponent(appName));
-
-  // Create HTTP transport objects
-  var httpRequest = new WebResource();
-  httpRequest.method = 'DELETE';
-  httpRequest.headers = {};
-  httpRequest.url = requestUrl;
-  // Set Headers
-  if(options) {
-    for(var headerName in options['customHeaders']) {
-      if (options['customHeaders'].hasOwnProperty(headerName)) {
-        httpRequest.headers[headerName] = options['customHeaders'][headerName];
-      }
-    }
-  }
-  httpRequest.headers['Content-Type'] = 'application/json; charset=utf-8';
-  httpRequest.body = null;
-  // Send Request
-  return client.pipeline(httpRequest, function (err, response, responseBody) {
-    if (err) {
-      return callback(err);
-    }
-    var statusCode = response.statusCode;
-    if (statusCode !== 200 && statusCode !== 404 && statusCode !== 500) {
-      var error = new Error(responseBody);
-      error.statusCode = response.statusCode;
-      error.request = msRest.stripRequest(httpRequest);
-      error.response = msRest.stripResponse(response);
-      if (responseBody === '') responseBody = null;
-      var parsedErrorResponse;
-      try {
-        parsedErrorResponse = JSON.parse(responseBody);
-        if (parsedErrorResponse) {
-          if (parsedErrorResponse.error) parsedErrorResponse = parsedErrorResponse.error;
-          if (parsedErrorResponse.code) error.code = parsedErrorResponse.code;
-          if (parsedErrorResponse.message) error.message = parsedErrorResponse.message;
-        }
-      } catch (defaultError) {
-        error.message = util.format('Error "%s" occurred in deserializing the responseBody ' + 
-                         '- "%s" for the default response.', defaultError.message, responseBody);
-        return callback(error);
-      }
-      return callback(error);
-    }
-    // Create Result
-    var result = null;
-    if (responseBody === '') responseBody = null;
-    // Deserialize Response
-    if (statusCode === 404) {
-      var parsedResponse = null;
-      try {
-        parsedResponse = JSON.parse(responseBody);
-        result = JSON.parse(responseBody);
-        if (parsedResponse !== null && parsedResponse !== undefined) {
-          var resultMapper = new client.models['ErrorDetails']().mapper();
-          result = client.deserialize(resultMapper, parsedResponse, 'result');
-        }
-      } catch (error) {
-        var deserializationError = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
-        deserializationError.request = msRest.stripRequest(httpRequest);
-        deserializationError.response = msRest.stripResponse(response);
-        return callback(deserializationError);
-      }
-    }
-    // Deserialize Response
-    if (statusCode === 500) {
-      var parsedResponse = null;
-      try {
-        parsedResponse = JSON.parse(responseBody);
-        result = JSON.parse(responseBody);
-        if (parsedResponse !== null && parsedResponse !== undefined) {
-          var resultMapper = new client.models['ErrorDetails']().mapper();
-          result = client.deserialize(resultMapper, parsedResponse, 'result');
-        }
-      } catch (error) {
-        var deserializationError1 = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
-        deserializationError1.request = msRest.stripRequest(httpRequest);
-        deserializationError1.response = msRest.stripResponse(response);
-        return callback(deserializationError1);
-      }
-    }
-
-    return callback(null, result, httpRequest, response);
-  });
-};
-
-/**
- * Return detailed information about packages.
- *
- * @param {string} ownerName The name of the owner
- * 
- * @param {string} appName The name of the application
- * 
- * @param {object} [options] Optional Parameters.
- * 
- * @param {boolean} [options.publishedOnly] when true, filters out packages
- * that were uplaoded but were never distributed. Packages that under deleted
- * distribution groups will not be filtered out.
- * 
- * @param {string} [options.filter] OBSOLETE. Will be removed in next version.
- * An OData style filter. Currently only support the 'eq' comparision type.
- * E.g. ?$filter=status eq 'Available'
- * 
- * @param {object} [options.customHeaders] Headers that will be added to the
- * request
- * 
- * @param {function} callback
- *
- * @returns {function} callback(err, result, request, response)
- *
- *                      {Error}  err        - The Error object if an error occurred, null otherwise.
- *
- *                      {array} [result]   - The deserialized result object.
- *
- *                      {object} [request]  - The HTTP Request object if an error did not occur.
- *
- *                      {stream} [response] - The HTTP Response stream if an error did not occur.
- */
-Distribute.prototype.getV01AppsByOwnerNameByAppNamePackages = function (ownerName, appName, options, callback) {
-  var client = this.client;
-  if(!callback && typeof options === 'function') {
-    callback = options;
-    options = null;
-  }
-  if (!callback) {
-    throw new Error('callback cannot be null.');
-  }
-  var publishedOnly = (options && options.publishedOnly !== undefined) ? options.publishedOnly : undefined;
-  var filter = (options && options.filter !== undefined) ? options.filter : undefined;
-  // Validate
-  try {
-    if (publishedOnly !== null && publishedOnly !== undefined && typeof publishedOnly !== 'boolean') {
-      throw new Error('publishedOnly must be of type boolean.');
-    }
-    if (filter !== null && filter !== undefined && typeof filter.valueOf() !== 'string') {
-      throw new Error('filter must be of type string.');
-    }
-    if (ownerName === null || ownerName === undefined || typeof ownerName.valueOf() !== 'string') {
-      throw new Error('ownerName cannot be null or undefined and it must be of type string.');
-    }
-    if (appName === null || appName === undefined || typeof appName.valueOf() !== 'string') {
-      throw new Error('appName cannot be null or undefined and it must be of type string.');
-    }
-  } catch (error) {
-    return callback(error);
-  }
-
-  // Construct URL
-  var baseUrl = this.client.baseUri;
-  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/packages';
-  requestUrl = requestUrl.replace('{owner_name}', encodeURIComponent(ownerName));
-  requestUrl = requestUrl.replace('{app_name}', encodeURIComponent(appName));
-  var queryParameters = [];
-  if (publishedOnly !== null && publishedOnly !== undefined) {
-    queryParameters.push('published_only=' + encodeURIComponent(publishedOnly.toString()));
-  }
-  if (filter !== null && filter !== undefined) {
-    queryParameters.push('$filter=' + encodeURIComponent(filter));
-  }
-  if (queryParameters.length > 0) {
-    requestUrl += '?' + queryParameters.join('&');
-  }
-
-  // Create HTTP transport objects
-  var httpRequest = new WebResource();
-  httpRequest.method = 'GET';
-  httpRequest.headers = {};
-  httpRequest.url = requestUrl;
-  // Set Headers
-  if(options) {
-    for(var headerName in options['customHeaders']) {
-      if (options['customHeaders'].hasOwnProperty(headerName)) {
-        httpRequest.headers[headerName] = options['customHeaders'][headerName];
-      }
-    }
-  }
-  httpRequest.headers['Content-Type'] = 'application/json; charset=utf-8';
-  httpRequest.body = null;
-  // Send Request
-  return client.pipeline(httpRequest, function (err, response, responseBody) {
-    if (err) {
-      return callback(err);
-    }
-    var statusCode = response.statusCode;
-    if (statusCode !== 200) {
-      var error = new Error(responseBody);
-      error.statusCode = response.statusCode;
-      error.request = msRest.stripRequest(httpRequest);
-      error.response = msRest.stripResponse(response);
-      if (responseBody === '') responseBody = null;
-      var parsedErrorResponse;
-      try {
-        parsedErrorResponse = JSON.parse(responseBody);
-        if (parsedErrorResponse) {
-          if (parsedErrorResponse.error) parsedErrorResponse = parsedErrorResponse.error;
-          if (parsedErrorResponse.code) error.code = parsedErrorResponse.code;
-          if (parsedErrorResponse.message) error.message = parsedErrorResponse.message;
-        }
-      } catch (defaultError) {
-        error.message = util.format('Error "%s" occurred in deserializing the responseBody ' + 
-                         '- "%s" for the default response.', defaultError.message, responseBody);
-        return callback(error);
-      }
-      return callback(error);
-    }
-    // Create Result
-    var result = null;
-    if (responseBody === '') responseBody = null;
-    // Deserialize Response
-    if (statusCode === 200) {
-      var parsedResponse = null;
-      try {
-        parsedResponse = JSON.parse(responseBody);
-        result = JSON.parse(responseBody);
-        if (parsedResponse !== null && parsedResponse !== undefined) {
-          var resultMapper = {
-            required: false,
-            serializedName: 'parsedResponse',
-            type: {
-              name: 'Sequence',
-              element: {
-                  required: false,
-                  serializedName: 'PackageDetailsElementType',
-                  type: {
-                    name: 'Composite',
-                    className: 'PackageDetails'
-                  }
-              }
-            }
-          };
-          result = client.deserialize(resultMapper, parsedResponse, 'result');
-        }
-      } catch (error) {
-        var deserializationError = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
-        deserializationError.request = msRest.stripRequest(httpRequest);
-        deserializationError.response = msRest.stripResponse(response);
-        return callback(deserializationError);
-      }
-    }
-
-    return callback(null, result, httpRequest, response);
-  });
-};
-
-/**
- * Commits or aborts the upload process for a package for the specified
- * application
- *
- * @param {string} uploadId The ID of the upload
- * 
- * @param {string} ownerName The name of the owner
- * 
- * @param {string} appName The name of the application
- * 
- * @param {string} status The desired operation for the upload. Possible
- * values include: 'committed', 'aborted'
- * 
- * @param {object} [options] Optional Parameters.
- * 
- * @param {object} [options.customHeaders] Headers that will be added to the
- * request
- * 
- * @param {function} callback
- *
- * @returns {function} callback(err, result, request, response)
- *
- *                      {Error}  err        - The Error object if an error occurred, null otherwise.
- *
- *                      {object} [result]   - The deserialized result object.
- *                      See {@link PackageUploadEndResponse} for more
- *                      information.
- *
- *                      {object} [request]  - The HTTP Request object if an error did not occur.
- *
- *                      {stream} [response] - The HTTP Response stream if an error did not occur.
- */
-Distribute.prototype.patchV01AppsByOwnerNameByAppNamePackageUploadsByUploadId = function (uploadId, ownerName, appName, status, options, callback) {
-  var client = this.client;
-  if(!callback && typeof options === 'function') {
-    callback = options;
-    options = null;
-  }
-  if (!callback) {
-    throw new Error('callback cannot be null.');
-  }
-  // Validate
-  try {
-    if (uploadId === null || uploadId === undefined || typeof uploadId.valueOf() !== 'string') {
-      throw new Error('uploadId cannot be null or undefined and it must be of type string.');
-    }
-    if (ownerName === null || ownerName === undefined || typeof ownerName.valueOf() !== 'string') {
-      throw new Error('ownerName cannot be null or undefined and it must be of type string.');
-    }
-    if (appName === null || appName === undefined || typeof appName.valueOf() !== 'string') {
-      throw new Error('appName cannot be null or undefined and it must be of type string.');
-    }
-    if (status === null || status === undefined || typeof status.valueOf() !== 'string') {
-      throw new Error('status cannot be null or undefined and it must be of type string.');
-    }
-  } catch (error) {
-    return callback(error);
-  }
-  var body;
-  if (status !== null && status !== undefined) {
-      body = new client.models['PackageUploadEndRequest']();
-      body.status = status;
-  }
-
-  // Construct URL
-  var baseUrl = this.client.baseUri;
-  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/package_uploads/{upload_id}';
-  requestUrl = requestUrl.replace('{upload_id}', encodeURIComponent(uploadId));
-  requestUrl = requestUrl.replace('{owner_name}', encodeURIComponent(ownerName));
-  requestUrl = requestUrl.replace('{app_name}', encodeURIComponent(appName));
-
-  // Create HTTP transport objects
-  var httpRequest = new WebResource();
-  httpRequest.method = 'PATCH';
-  httpRequest.headers = {};
-  httpRequest.url = requestUrl;
-  // Set Headers
-  if(options) {
-    for(var headerName in options['customHeaders']) {
-      if (options['customHeaders'].hasOwnProperty(headerName)) {
-        httpRequest.headers[headerName] = options['customHeaders'][headerName];
-      }
-    }
-  }
-  httpRequest.headers['Content-Type'] = 'application/json; charset=utf-8';
-  // Serialize Request
-  var requestContent = null;
-  var requestModel = null;
-  try {
-    if (body !== null && body !== undefined) {
-      var requestModelMapper = new client.models['PackageUploadEndRequest']().mapper();
-      requestModel = client.serialize(requestModelMapper, body, 'body');
-      requestContent = JSON.stringify(requestModel);
-    }
-  } catch (error) {
-    var serializationError = new Error(util.format('Error "%s" occurred in serializing the ' + 
-        'payload - "%s"', error.message, util.inspect(body, {depth: null})));
-    return callback(serializationError);
-  }
-  httpRequest.body = requestContent;
-  // Send Request
-  return client.pipeline(httpRequest, function (err, response, responseBody) {
-    if (err) {
-      return callback(err);
-    }
-    var statusCode = response.statusCode;
-    if (statusCode !== 200 && statusCode !== 400) {
-      var error = new Error(responseBody);
-      error.statusCode = response.statusCode;
-      error.request = msRest.stripRequest(httpRequest);
-      error.response = msRest.stripResponse(response);
-      if (responseBody === '') responseBody = null;
-      var parsedErrorResponse;
-      try {
-        parsedErrorResponse = JSON.parse(responseBody);
-        if (parsedErrorResponse) {
-          if (parsedErrorResponse.error) parsedErrorResponse = parsedErrorResponse.error;
-          if (parsedErrorResponse.code) error.code = parsedErrorResponse.code;
-          if (parsedErrorResponse.message) error.message = parsedErrorResponse.message;
-        }
-      } catch (defaultError) {
-        error.message = util.format('Error "%s" occurred in deserializing the responseBody ' + 
-                         '- "%s" for the default response.', defaultError.message, responseBody);
-        return callback(error);
-      }
-      return callback(error);
-    }
-    // Create Result
-    var result = null;
-    if (responseBody === '') responseBody = null;
-    // Deserialize Response
-    if (statusCode === 200) {
-      var parsedResponse = null;
-      try {
-        parsedResponse = JSON.parse(responseBody);
-        result = JSON.parse(responseBody);
-        if (parsedResponse !== null && parsedResponse !== undefined) {
-          var resultMapper = new client.models['PackageUploadEndResponse']().mapper();
-          result = client.deserialize(resultMapper, parsedResponse, 'result');
-        }
-      } catch (error) {
-        var deserializationError = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
-        deserializationError.request = msRest.stripRequest(httpRequest);
-        deserializationError.response = msRest.stripResponse(response);
-        return callback(deserializationError);
-      }
-    }
-
-    return callback(null, result, httpRequest, response);
-  });
-};
-
-/**
- * Begins the upload process for a new package for the specified application
- *
- * @param {string} ownerName The name of the owner
- * 
- * @param {string} appName The name of the application
- * 
- * @param {object} [options] Optional Parameters.
- * 
- * @param {object} [options.customHeaders] Headers that will be added to the
- * request
- * 
- * @param {function} callback
- *
- * @returns {function} callback(err, result, request, response)
- *
- *                      {Error}  err        - The Error object if an error occurred, null otherwise.
- *
- *                      {object} [result]   - The deserialized result object.
- *                      See {@link PackageUploadBeginResponse} for more
- *                      information.
- *
- *                      {object} [request]  - The HTTP Request object if an error did not occur.
- *
- *                      {stream} [response] - The HTTP Response stream if an error did not occur.
- */
-Distribute.prototype.postV01AppsByOwnerNameByAppNamePackageUploads = function (ownerName, appName, options, callback) {
-  var client = this.client;
-  if(!callback && typeof options === 'function') {
-    callback = options;
-    options = null;
-  }
-  if (!callback) {
-    throw new Error('callback cannot be null.');
-  }
-  // Validate
-  try {
-    if (ownerName === null || ownerName === undefined || typeof ownerName.valueOf() !== 'string') {
-      throw new Error('ownerName cannot be null or undefined and it must be of type string.');
-    }
-    if (appName === null || appName === undefined || typeof appName.valueOf() !== 'string') {
-      throw new Error('appName cannot be null or undefined and it must be of type string.');
-    }
-  } catch (error) {
-    return callback(error);
-  }
-
-  // Construct URL
-  var baseUrl = this.client.baseUri;
-  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/package_uploads';
-  requestUrl = requestUrl.replace('{owner_name}', encodeURIComponent(ownerName));
-  requestUrl = requestUrl.replace('{app_name}', encodeURIComponent(appName));
-
-  // Create HTTP transport objects
-  var httpRequest = new WebResource();
-  httpRequest.method = 'POST';
-  httpRequest.headers = {};
-  httpRequest.url = requestUrl;
-  // Set Headers
-  if(options) {
-    for(var headerName in options['customHeaders']) {
-      if (options['customHeaders'].hasOwnProperty(headerName)) {
-        httpRequest.headers[headerName] = options['customHeaders'][headerName];
-      }
-    }
-  }
-  httpRequest.headers['Content-Type'] = 'application/json; charset=utf-8';
-  httpRequest.body = null;
-  // Send Request
-  return client.pipeline(httpRequest, function (err, response, responseBody) {
-    if (err) {
-      return callback(err);
-    }
-    var statusCode = response.statusCode;
-    if (statusCode !== 201) {
-      var error = new Error(responseBody);
-      error.statusCode = response.statusCode;
-      error.request = msRest.stripRequest(httpRequest);
-      error.response = msRest.stripResponse(response);
-      if (responseBody === '') responseBody = null;
-      var parsedErrorResponse;
-      try {
-        parsedErrorResponse = JSON.parse(responseBody);
-        if (parsedErrorResponse) {
-          if (parsedErrorResponse.error) parsedErrorResponse = parsedErrorResponse.error;
-          if (parsedErrorResponse.code) error.code = parsedErrorResponse.code;
-          if (parsedErrorResponse.message) error.message = parsedErrorResponse.message;
-        }
-      } catch (defaultError) {
-        error.message = util.format('Error "%s" occurred in deserializing the responseBody ' + 
-                         '- "%s" for the default response.', defaultError.message, responseBody);
-        return callback(error);
-      }
-      return callback(error);
-    }
-    // Create Result
-    var result = null;
-    if (responseBody === '') responseBody = null;
-    // Deserialize Response
-    if (statusCode === 201) {
-      var parsedResponse = null;
-      try {
-        parsedResponse = JSON.parse(responseBody);
-        result = JSON.parse(responseBody);
-        if (parsedResponse !== null && parsedResponse !== undefined) {
-          var resultMapper = new client.models['PackageUploadBeginResponse']().mapper();
-          result = client.deserialize(resultMapper, parsedResponse, 'result');
-        }
-      } catch (error) {
-        var deserializationError = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
-        deserializationError.request = msRest.stripRequest(httpRequest);
-        deserializationError.response = msRest.stripResponse(response);
-        return callback(deserializationError);
-      }
-    }
-
-    return callback(null, result, httpRequest, response);
-  });
-};
-
-/**
- * Return detailed information about a distributed release in a given
- * distribution group.
- *
- * @param {string} distributionGroupName The name of the distribution group.
- * 
- * @param {string} releaseId Must be `latest`, a specific `release_id` is not
- * supported at this time.
- * 
- * @param {string} ownerName The name of the owner
- * 
- * @param {string} appName The name of the application
- * 
- * @param {object} [options] Optional Parameters.
- * 
- * @param {object} [options.customHeaders] Headers that will be added to the
- * request
- * 
- * @param {function} callback
- *
- * @returns {function} callback(err, result, request, response)
- *
- *                      {Error}  err        - The Error object if an error occurred, null otherwise.
- *
- *                      {object} [result]   - The deserialized result object.
- *
- *                      {object} [request]  - The HTTP Request object if an error did not occur.
- *
- *                      {stream} [response] - The HTTP Response stream if an error did not occur.
- */
-Distribute.prototype.getLatestReleaseForDistributionGroup = function (distributionGroupName, releaseId, ownerName, appName, options, callback) {
-  var client = this.client;
-  if(!callback && typeof options === 'function') {
-    callback = options;
-    options = null;
-  }
-  if (!callback) {
-    throw new Error('callback cannot be null.');
-  }
-  // Validate
-  try {
-    if (distributionGroupName === null || distributionGroupName === undefined || typeof distributionGroupName.valueOf() !== 'string') {
-      throw new Error('distributionGroupName cannot be null or undefined and it must be of type string.');
-    }
-    if (releaseId === null || releaseId === undefined || typeof releaseId.valueOf() !== 'string') {
-      throw new Error('releaseId cannot be null or undefined and it must be of type string.');
-    }
-    if (ownerName === null || ownerName === undefined || typeof ownerName.valueOf() !== 'string') {
-      throw new Error('ownerName cannot be null or undefined and it must be of type string.');
-    }
-    if (appName === null || appName === undefined || typeof appName.valueOf() !== 'string') {
-      throw new Error('appName cannot be null or undefined and it must be of type string.');
-    }
-  } catch (error) {
-    return callback(error);
-  }
-
-  // Construct URL
-  var baseUrl = this.client.baseUri;
-  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}/releases/{release_id}';
-  requestUrl = requestUrl.replace('{distribution_group_name}', encodeURIComponent(distributionGroupName));
-  requestUrl = requestUrl.replace('{release_id}', encodeURIComponent(releaseId));
-  requestUrl = requestUrl.replace('{owner_name}', encodeURIComponent(ownerName));
-  requestUrl = requestUrl.replace('{app_name}', encodeURIComponent(appName));
-
-  // Create HTTP transport objects
-  var httpRequest = new WebResource();
-  httpRequest.method = 'GET';
-  httpRequest.headers = {};
-  httpRequest.url = requestUrl;
-  // Set Headers
-  if(options) {
-    for(var headerName in options['customHeaders']) {
-      if (options['customHeaders'].hasOwnProperty(headerName)) {
-        httpRequest.headers[headerName] = options['customHeaders'][headerName];
-      }
-    }
-  }
-  httpRequest.headers['Content-Type'] = 'application/json; charset=utf-8';
-  httpRequest.body = null;
-  // Send Request
-  return client.pipeline(httpRequest, function (err, response, responseBody) {
-    if (err) {
-      return callback(err);
-    }
-    var statusCode = response.statusCode;
-    if (statusCode !== 200 && statusCode !== 404 && statusCode !== 501) {
-      var error = new Error(responseBody);
-      error.statusCode = response.statusCode;
-      error.request = msRest.stripRequest(httpRequest);
-      error.response = msRest.stripResponse(response);
-      if (responseBody === '') responseBody = null;
-      var parsedErrorResponse;
-      try {
-        parsedErrorResponse = JSON.parse(responseBody);
-        if (parsedErrorResponse) {
-          if (parsedErrorResponse.error) parsedErrorResponse = parsedErrorResponse.error;
-          if (parsedErrorResponse.code) error.code = parsedErrorResponse.code;
-          if (parsedErrorResponse.message) error.message = parsedErrorResponse.message;
-        }
-      } catch (defaultError) {
-        error.message = util.format('Error "%s" occurred in deserializing the responseBody ' + 
-                         '- "%s" for the default response.', defaultError.message, responseBody);
-        return callback(error);
-      }
-      return callback(error);
-    }
-    // Create Result
-    var result = null;
-    if (responseBody === '') responseBody = null;
-    // Deserialize Response
-    if (statusCode === 200) {
-      var parsedResponse = null;
-      try {
-        parsedResponse = JSON.parse(responseBody);
-        result = JSON.parse(responseBody);
-        if (parsedResponse !== null && parsedResponse !== undefined) {
-          var resultMapper = new client.models['ReleaseDetails']().mapper();
-          result = client.deserialize(resultMapper, parsedResponse, 'result');
-        }
-      } catch (error) {
-        var deserializationError = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
-        deserializationError.request = msRest.stripRequest(httpRequest);
-        deserializationError.response = msRest.stripResponse(response);
-        return callback(deserializationError);
-      }
-    }
-    // Deserialize Response
-    if (statusCode === 404) {
-      var parsedResponse = null;
-      try {
-        parsedResponse = JSON.parse(responseBody);
-        result = JSON.parse(responseBody);
-        if (parsedResponse !== null && parsedResponse !== undefined) {
-          var resultMapper = new client.models['ErrorDetails']().mapper();
-          result = client.deserialize(resultMapper, parsedResponse, 'result');
-        }
-      } catch (error) {
-        var deserializationError1 = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
-        deserializationError1.request = msRest.stripRequest(httpRequest);
-        deserializationError1.response = msRest.stripResponse(response);
-        return callback(deserializationError1);
-      }
-    }
-    // Deserialize Response
-    if (statusCode === 501) {
-      var parsedResponse = null;
-      try {
-        parsedResponse = JSON.parse(responseBody);
-        result = JSON.parse(responseBody);
-        if (parsedResponse !== null && parsedResponse !== undefined) {
-          var resultMapper = new client.models['ErrorDetails']().mapper();
-          result = client.deserialize(resultMapper, parsedResponse, 'result');
-        }
-      } catch (error) {
-        var deserializationError2 = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
-        deserializationError2.request = msRest.stripRequest(httpRequest);
-        deserializationError2.response = msRest.stripResponse(response);
-        return callback(deserializationError2);
-      }
-    }
-
-    return callback(null, result, httpRequest, response);
-  });
-};
-
-/**
- * Deletes a release with id 'release_id' in a given distribution group.
- *
- * @param {string} distributionGroupName The name of the distribution group.
- * 
- * @param {string} releaseId The ID identifying the unique release.
- * 
- * @param {string} ownerName The name of the owner
- * 
- * @param {string} appName The name of the application
- * 
- * @param {object} [options] Optional Parameters.
- * 
- * @param {object} [options.customHeaders] Headers that will be added to the
- * request
- * 
- * @param {function} callback
- *
- * @returns {function} callback(err, result, request, response)
- *
- *                      {Error}  err        - The Error object if an error occurred, null otherwise.
- *
- *                      {object} [result]   - The deserialized result object.
- *
- *                      {object} [request]  - The HTTP Request object if an error did not occur.
- *
- *                      {stream} [response] - The HTTP Response stream if an error did not occur.
- */
-Distribute.prototype.deleteReleaseForDistributionGroup = function (distributionGroupName, releaseId, ownerName, appName, options, callback) {
-  var client = this.client;
-  if(!callback && typeof options === 'function') {
-    callback = options;
-    options = null;
-  }
-  if (!callback) {
-    throw new Error('callback cannot be null.');
-  }
-  // Validate
-  try {
-    if (distributionGroupName === null || distributionGroupName === undefined || typeof distributionGroupName.valueOf() !== 'string') {
-      throw new Error('distributionGroupName cannot be null or undefined and it must be of type string.');
-    }
-    if (releaseId === null || releaseId === undefined || typeof releaseId.valueOf() !== 'string') {
-      throw new Error('releaseId cannot be null or undefined and it must be of type string.');
-    }
-    if (ownerName === null || ownerName === undefined || typeof ownerName.valueOf() !== 'string') {
-      throw new Error('ownerName cannot be null or undefined and it must be of type string.');
-    }
-    if (appName === null || appName === undefined || typeof appName.valueOf() !== 'string') {
-      throw new Error('appName cannot be null or undefined and it must be of type string.');
-    }
-  } catch (error) {
-    return callback(error);
-  }
-
-  // Construct URL
-  var baseUrl = this.client.baseUri;
-  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}/releases/{release_id}';
-  requestUrl = requestUrl.replace('{distribution_group_name}', encodeURIComponent(distributionGroupName));
-  requestUrl = requestUrl.replace('{release_id}', encodeURIComponent(releaseId));
-  requestUrl = requestUrl.replace('{owner_name}', encodeURIComponent(ownerName));
-  requestUrl = requestUrl.replace('{app_name}', encodeURIComponent(appName));
-
-  // Create HTTP transport objects
-  var httpRequest = new WebResource();
-  httpRequest.method = 'DELETE';
-  httpRequest.headers = {};
-  httpRequest.url = requestUrl;
-  // Set Headers
-  if(options) {
-    for(var headerName in options['customHeaders']) {
-      if (options['customHeaders'].hasOwnProperty(headerName)) {
-        httpRequest.headers[headerName] = options['customHeaders'][headerName];
-      }
-    }
-  }
-  httpRequest.headers['Content-Type'] = 'application/json; charset=utf-8';
-  httpRequest.body = null;
-  // Send Request
-  return client.pipeline(httpRequest, function (err, response, responseBody) {
-    if (err) {
-      return callback(err);
-    }
-    var statusCode = response.statusCode;
-    if (statusCode !== 200 && statusCode !== 404) {
-      var error = new Error(responseBody);
-      error.statusCode = response.statusCode;
-      error.request = msRest.stripRequest(httpRequest);
-      error.response = msRest.stripResponse(response);
-      if (responseBody === '') responseBody = null;
-      var parsedErrorResponse;
-      try {
-        parsedErrorResponse = JSON.parse(responseBody);
-        if (parsedErrorResponse) {
-          if (parsedErrorResponse.error) parsedErrorResponse = parsedErrorResponse.error;
-          if (parsedErrorResponse.code) error.code = parsedErrorResponse.code;
-          if (parsedErrorResponse.message) error.message = parsedErrorResponse.message;
-        }
-      } catch (defaultError) {
-        error.message = util.format('Error "%s" occurred in deserializing the responseBody ' + 
-                         '- "%s" for the default response.', defaultError.message, responseBody);
-        return callback(error);
-      }
-      return callback(error);
-    }
-    // Create Result
-    var result = null;
-    if (responseBody === '') responseBody = null;
-    // Deserialize Response
-    if (statusCode === 200) {
-      var parsedResponse = null;
-      try {
-        parsedResponse = JSON.parse(responseBody);
-        result = JSON.parse(responseBody);
-        if (parsedResponse !== null && parsedResponse !== undefined) {
-          var resultMapper = {
-            required: false,
-            serializedName: 'parsedResponse',
-            type: {
-              name: 'Object'
-            }
-          };
-          result = client.deserialize(resultMapper, parsedResponse, 'result');
-        }
-      } catch (error) {
-        var deserializationError = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
-        deserializationError.request = msRest.stripRequest(httpRequest);
-        deserializationError.response = msRest.stripResponse(response);
-        return callback(deserializationError);
-      }
-    }
-    // Deserialize Response
-    if (statusCode === 404) {
-      var parsedResponse = null;
-      try {
-        parsedResponse = JSON.parse(responseBody);
-        result = JSON.parse(responseBody);
-        if (parsedResponse !== null && parsedResponse !== undefined) {
-          var resultMapper = new client.models['ErrorDetails']().mapper();
-          result = client.deserialize(resultMapper, parsedResponse, 'result');
-        }
-      } catch (error) {
-        var deserializationError1 = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
-        deserializationError1.request = msRest.stripRequest(httpRequest);
-        deserializationError1.response = msRest.stripResponse(response);
-        return callback(deserializationError1);
-      }
-    }
-
-    return callback(null, result, httpRequest, response);
-  });
-};
-
-/**
- * Return detailed information about distributed releases in a given
- * distribution group.
- *
- * @param {string} distributionGroupName The name of the distribution group.
- * 
- * @param {string} ownerName The name of the owner
- * 
- * @param {string} appName The name of the application
- * 
- * @param {object} [options] Optional Parameters.
- * 
- * @param {object} [options.customHeaders] Headers that will be added to the
- * request
- * 
- * @param {function} callback
- *
- * @returns {function} callback(err, result, request, response)
- *
- *                      {Error}  err        - The Error object if an error occurred, null otherwise.
- *
- *                      {object} [result]   - The deserialized result object.
- *
- *                      {object} [request]  - The HTTP Request object if an error did not occur.
- *
- *                      {stream} [response] - The HTTP Response stream if an error did not occur.
- */
-Distribute.prototype.getReleasesForDistributionGroup = function (distributionGroupName, ownerName, appName, options, callback) {
-  var client = this.client;
-  if(!callback && typeof options === 'function') {
-    callback = options;
-    options = null;
-  }
-  if (!callback) {
-    throw new Error('callback cannot be null.');
-  }
-  // Validate
-  try {
-    if (distributionGroupName === null || distributionGroupName === undefined || typeof distributionGroupName.valueOf() !== 'string') {
-      throw new Error('distributionGroupName cannot be null or undefined and it must be of type string.');
-    }
-    if (ownerName === null || ownerName === undefined || typeof ownerName.valueOf() !== 'string') {
-      throw new Error('ownerName cannot be null or undefined and it must be of type string.');
-    }
-    if (appName === null || appName === undefined || typeof appName.valueOf() !== 'string') {
-      throw new Error('appName cannot be null or undefined and it must be of type string.');
-    }
-  } catch (error) {
-    return callback(error);
-  }
-
-  // Construct URL
-  var baseUrl = this.client.baseUri;
-  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}/releases';
-  requestUrl = requestUrl.replace('{distribution_group_name}', encodeURIComponent(distributionGroupName));
-  requestUrl = requestUrl.replace('{owner_name}', encodeURIComponent(ownerName));
-  requestUrl = requestUrl.replace('{app_name}', encodeURIComponent(appName));
-
-  // Create HTTP transport objects
-  var httpRequest = new WebResource();
-  httpRequest.method = 'GET';
-  httpRequest.headers = {};
-  httpRequest.url = requestUrl;
-  // Set Headers
-  if(options) {
-    for(var headerName in options['customHeaders']) {
-      if (options['customHeaders'].hasOwnProperty(headerName)) {
-        httpRequest.headers[headerName] = options['customHeaders'][headerName];
-      }
-    }
-  }
-  httpRequest.headers['Content-Type'] = 'application/json; charset=utf-8';
-  httpRequest.body = null;
-  // Send Request
-  return client.pipeline(httpRequest, function (err, response, responseBody) {
-    if (err) {
-      return callback(err);
-    }
-    var statusCode = response.statusCode;
-    if (statusCode !== 200 && statusCode !== 404) {
+    if (statusCode !== 200 && statusCode !== 404) {
       var error = new Error(responseBody);
       error.statusCode = response.statusCode;
       error.request = msRest.stripRequest(httpRequest);
@@ -2563,15 +1535,7 @@ Distribute.prototype.getReleasesForDistributionGroup = function (distributionGro
             required: false,
             serializedName: 'parsedResponse',
             type: {
-              name: 'Sequence',
-              element: {
-                  required: false,
-                  serializedName: 'ReleaseDetailsElementType',
-                  type: {
-                    name: 'Composite',
-                    className: 'ReleaseDetails'
-                  }
-              }
+              name: 'Object'
             }
           };
           result = client.deserialize(resultMapper, parsedResponse, 'result');
@@ -2606,173 +1570,7 @@ Distribute.prototype.getReleasesForDistributionGroup = function (distributionGro
 };
 
 /**
- * Return detailed information about a distributed package in a given
- * distribution group.
- *
- * @param {string} distributionGroupName The name of the distribution group.
- * 
- * @param {string} packageId For GET calls, this must be 'latest', specific
- * package_id's are not supported at this time.
- * 
- * @param {string} ownerName The name of the owner
- * 
- * @param {string} appName The name of the application
- * 
- * @param {object} [options] Optional Parameters.
- * 
- * @param {object} [options.customHeaders] Headers that will be added to the
- * request
- * 
- * @param {function} callback
- *
- * @returns {function} callback(err, result, request, response)
- *
- *                      {Error}  err        - The Error object if an error occurred, null otherwise.
- *
- *                      {object} [result]   - The deserialized result object.
- *
- *                      {object} [request]  - The HTTP Request object if an error did not occur.
- *
- *                      {stream} [response] - The HTTP Response stream if an error did not occur.
- */
-Distribute.prototype.getLatestPackageForDistributionGroup = function (distributionGroupName, packageId, ownerName, appName, options, callback) {
-  var client = this.client;
-  if(!callback && typeof options === 'function') {
-    callback = options;
-    options = null;
-  }
-  if (!callback) {
-    throw new Error('callback cannot be null.');
-  }
-  // Validate
-  try {
-    if (distributionGroupName === null || distributionGroupName === undefined || typeof distributionGroupName.valueOf() !== 'string') {
-      throw new Error('distributionGroupName cannot be null or undefined and it must be of type string.');
-    }
-    if (packageId === null || packageId === undefined || typeof packageId.valueOf() !== 'string') {
-      throw new Error('packageId cannot be null or undefined and it must be of type string.');
-    }
-    if (ownerName === null || ownerName === undefined || typeof ownerName.valueOf() !== 'string') {
-      throw new Error('ownerName cannot be null or undefined and it must be of type string.');
-    }
-    if (appName === null || appName === undefined || typeof appName.valueOf() !== 'string') {
-      throw new Error('appName cannot be null or undefined and it must be of type string.');
-    }
-  } catch (error) {
-    return callback(error);
-  }
-
-  // Construct URL
-  var baseUrl = this.client.baseUri;
-  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}/packages/{package_id}';
-  requestUrl = requestUrl.replace('{distribution_group_name}', encodeURIComponent(distributionGroupName));
-  requestUrl = requestUrl.replace('{package_id}', encodeURIComponent(packageId));
-  requestUrl = requestUrl.replace('{owner_name}', encodeURIComponent(ownerName));
-  requestUrl = requestUrl.replace('{app_name}', encodeURIComponent(appName));
-
-  // Create HTTP transport objects
-  var httpRequest = new WebResource();
-  httpRequest.method = 'GET';
-  httpRequest.headers = {};
-  httpRequest.url = requestUrl;
-  // Set Headers
-  if(options) {
-    for(var headerName in options['customHeaders']) {
-      if (options['customHeaders'].hasOwnProperty(headerName)) {
-        httpRequest.headers[headerName] = options['customHeaders'][headerName];
-      }
-    }
-  }
-  httpRequest.headers['Content-Type'] = 'application/json; charset=utf-8';
-  httpRequest.body = null;
-  // Send Request
-  return client.pipeline(httpRequest, function (err, response, responseBody) {
-    if (err) {
-      return callback(err);
-    }
-    var statusCode = response.statusCode;
-    if (statusCode !== 200 && statusCode !== 404 && statusCode !== 501) {
-      var error = new Error(responseBody);
-      error.statusCode = response.statusCode;
-      error.request = msRest.stripRequest(httpRequest);
-      error.response = msRest.stripResponse(response);
-      if (responseBody === '') responseBody = null;
-      var parsedErrorResponse;
-      try {
-        parsedErrorResponse = JSON.parse(responseBody);
-        if (parsedErrorResponse) {
-          if (parsedErrorResponse.error) parsedErrorResponse = parsedErrorResponse.error;
-          if (parsedErrorResponse.code) error.code = parsedErrorResponse.code;
-          if (parsedErrorResponse.message) error.message = parsedErrorResponse.message;
-        }
-      } catch (defaultError) {
-        error.message = util.format('Error "%s" occurred in deserializing the responseBody ' + 
-                         '- "%s" for the default response.', defaultError.message, responseBody);
-        return callback(error);
-      }
-      return callback(error);
-    }
-    // Create Result
-    var result = null;
-    if (responseBody === '') responseBody = null;
-    // Deserialize Response
-    if (statusCode === 200) {
-      var parsedResponse = null;
-      try {
-        parsedResponse = JSON.parse(responseBody);
-        result = JSON.parse(responseBody);
-        if (parsedResponse !== null && parsedResponse !== undefined) {
-          var resultMapper = new client.models['PackageDetails']().mapper();
-          result = client.deserialize(resultMapper, parsedResponse, 'result');
-        }
-      } catch (error) {
-        var deserializationError = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
-        deserializationError.request = msRest.stripRequest(httpRequest);
-        deserializationError.response = msRest.stripResponse(response);
-        return callback(deserializationError);
-      }
-    }
-    // Deserialize Response
-    if (statusCode === 404) {
-      var parsedResponse = null;
-      try {
-        parsedResponse = JSON.parse(responseBody);
-        result = JSON.parse(responseBody);
-        if (parsedResponse !== null && parsedResponse !== undefined) {
-          var resultMapper = new client.models['ErrorDetails']().mapper();
-          result = client.deserialize(resultMapper, parsedResponse, 'result');
-        }
-      } catch (error) {
-        var deserializationError1 = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
-        deserializationError1.request = msRest.stripRequest(httpRequest);
-        deserializationError1.response = msRest.stripResponse(response);
-        return callback(deserializationError1);
-      }
-    }
-    // Deserialize Response
-    if (statusCode === 501) {
-      var parsedResponse = null;
-      try {
-        parsedResponse = JSON.parse(responseBody);
-        result = JSON.parse(responseBody);
-        if (parsedResponse !== null && parsedResponse !== undefined) {
-          var resultMapper = new client.models['ErrorDetails']().mapper();
-          result = client.deserialize(resultMapper, parsedResponse, 'result');
-        }
-      } catch (error) {
-        var deserializationError2 = new Error(util.format('Error "%s" occurred in deserializing the responseBody - "%s"', error, responseBody));
-        deserializationError2.request = msRest.stripRequest(httpRequest);
-        deserializationError2.response = msRest.stripResponse(response);
-        return callback(deserializationError2);
-      }
-    }
-
-    return callback(null, result, httpRequest, response);
-  });
-};
-
-/**
- * Return detailed information about distributed packages in a given
+ * Return detailed information about distributed releases in a given
  * distribution group.
  *
  * @param {string} distributionGroupName The name of the distribution group.
@@ -2798,7 +1596,7 @@ Distribute.prototype.getLatestPackageForDistributionGroup = function (distributi
  *
  *                      {stream} [response] - The HTTP Response stream if an error did not occur.
  */
-Distribute.prototype.getPackagesForDistributionGroup = function (distributionGroupName, ownerName, appName, options, callback) {
+Distribute.prototype.getReleasesForDistributionGroup = function (distributionGroupName, ownerName, appName, options, callback) {
   var client = this.client;
   if(!callback && typeof options === 'function') {
     callback = options;
@@ -2824,7 +1622,7 @@ Distribute.prototype.getPackagesForDistributionGroup = function (distributionGro
 
   // Construct URL
   var baseUrl = this.client.baseUri;
-  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}/packages';
+  var requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}/releases';
   requestUrl = requestUrl.replace('{distribution_group_name}', encodeURIComponent(distributionGroupName));
   requestUrl = requestUrl.replace('{owner_name}', encodeURIComponent(ownerName));
   requestUrl = requestUrl.replace('{app_name}', encodeURIComponent(appName));
@@ -2888,10 +1686,10 @@ Distribute.prototype.getPackagesForDistributionGroup = function (distributionGro
               name: 'Sequence',
               element: {
                   required: false,
-                  serializedName: 'PackageDetailsElementType',
+                  serializedName: 'ReleaseDetailsElementType',
                   type: {
                     name: 'Composite',
-                    className: 'PackageDetails'
+                    className: 'ReleaseDetails'
                   }
               }
             }
diff --git a/src/util/apis/generated/operations/index.d.ts b/src/util/apis/generated/operations/index.d.ts
index fe13522..df15e3e 100644
--- a/src/util/apis/generated/operations/index.d.ts
+++ b/src/util/apis/generated/operations/index.d.ts
@@ -97,40 +97,6 @@ export interface Account {
     updateUserProfile(callback: ServiceCallback<any>): void;
 
     /**
-     * Returns a list of users that belong to an organization
-     *
-     * @param {string} orgName The organization's name
-     * 
-     * @param {object} [options] Optional Parameters.
-     * 
-     * @param {object} [options.customHeaders] Headers that will be added to the
-     * request
-     * 
-     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
-     * doc in ms-rest index.d.ts for details
-     */
-    getOrganizationUsers(orgName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<any>): void;
-    getOrganizationUsers(orgName: string, callback: ServiceCallback<any>): void;
-
-    /**
-     * Invites a new or existing user to an organization
-     *
-     * @param {string} orgName The organization's name
-     * 
-     * @param {string} userEmail The email of the user to invite
-     * 
-     * @param {object} [options] Optional Parameters.
-     * 
-     * @param {object} [options.customHeaders] Headers that will be added to the
-     * request
-     * 
-     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
-     * doc in ms-rest index.d.ts for details
-     */
-    inviteOrganizationUser(orgName: string, userEmail: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ErrorResponse>): void;
-    inviteOrganizationUser(orgName: string, userEmail: string, callback: ServiceCallback<models.ErrorResponse>): void;
-
-    /**
      * Removes the user from the app
      *
      * @param {string} ownerName The name of the owner
@@ -189,7 +155,7 @@ export interface Account {
     getAppTesters(ownerName: string, appName: string, callback: ServiceCallback<any>): void;
 
     /**
-     * Invites a new or existing user to an app
+     * Update pending invitation permission
      *
      * @param {string} ownerName The name of the owner
      * 
@@ -197,6 +163,9 @@ export interface Account {
      * 
      * @param {string} userEmail The email of the user to invite
      * 
+     * @param {array} permissions The permissions the user has for the app in the
+     * invitation
+     * 
      * @param {object} [options] Optional Parameters.
      * 
      * @param {object} [options.customHeaders] Headers that will be added to the
@@ -205,8 +174,8 @@ export interface Account {
      * @param {ServiceCallback} [callback] callback function; see ServiceCallback
      * doc in ms-rest index.d.ts for details
      */
-    inviteAppUser(ownerName: string, appName: string, userEmail: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ErrorResponse>): void;
-    inviteAppUser(ownerName: string, appName: string, userEmail: string, callback: ServiceCallback<models.ErrorResponse>): void;
+    updateAppUserInvitationsPermission(ownerName: string, appName: string, userEmail: string, permissions: string[], options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ErrorResponse>): void;
+    updateAppUserInvitationsPermission(ownerName: string, appName: string, userEmail: string, permissions: string[], callback: ServiceCallback<models.ErrorResponse>): void;
 
     /**
      * Removes a user's invitation to an app
@@ -229,6 +198,26 @@ export interface Account {
     deleteAppInvitation(ownerName: string, appName: string, userEmail: string, callback: ServiceCallback<models.ErrorResponse>): void;
 
     /**
+     * Invites a new or existing user to an app
+     *
+     * @param {string} ownerName The name of the owner
+     * 
+     * @param {string} appName The name of the application
+     * 
+     * @param {string} userEmail The user's email address'
+     * 
+     * @param {object} [options] Optional Parameters.
+     * 
+     * @param {object} [options.customHeaders] Headers that will be added to the
+     * request
+     * 
+     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
+     * doc in ms-rest index.d.ts for details
+     */
+    inviteAppUser(ownerName: string, appName: string, userEmail: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ErrorResponse>): void;
+    inviteAppUser(ownerName: string, appName: string, userEmail: string, callback: ServiceCallback<models.ErrorResponse>): void;
+
+    /**
      * Gets the pending invitations for the app
      *
      * @param {string} ownerName The name of the owner
@@ -487,10 +476,10 @@ export interface Account {
      * @param {string} [app.name] The name of the app used in URLs
      * 
      * @param {string} app.os The OS the app will be running on. Possible values
-     * include: 'iOS', 'Android'
+     * include: 'iOS', 'Android', 'Windows'
      * 
      * @param {string} app.platform The platform of the app. Possible values
-     * include: 'Objective-C-Swift', 'Java', 'React-Native', 'Xamarin'
+     * include: 'Java', 'Objective-C-Swift', 'React-Native', 'UWP', 'Xamarin'
      * 
      * @param {object} [options] Optional Parameters.
      * 
@@ -514,8 +503,8 @@ export interface Account {
      * @param {ServiceCallback} [callback] callback function; see ServiceCallback
      * doc in ms-rest index.d.ts for details
      */
-    getApps(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<any>): void;
-    getApps(callback: ServiceCallback<any>): void;
+    getMemberApps(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<any>): void;
+    getMemberApps(callback: ServiceCallback<any>): void;
 
     /**
      * Delete the api_token object with the specific id
@@ -566,6 +555,267 @@ export interface Account {
 
 /**
  * @class
+ * Distribute
+ * __NOTE__: An instance of this class is automatically created for an
+ * instance of the MobileCenterClient.
+ */
+export interface Distribute {
+
+    /**
+     * Get a release with id `release_id`. if `release_id` is `latest`, return the
+     * latest release that was distributed to the current user (from all the
+     * distribution groups).
+     *
+     * @param {string} appSecret The secret of the target application
+     * 
+     * @param {string} releaseId The ID of the release, or `latest` to get the
+     * latest release from all the distribution groups assigned to the current
+     * user.
+     * 
+     * @param {object} [options] Optional Parameters.
+     * 
+     * @param {object} [options.customHeaders] Headers that will be added to the
+     * request
+     * 
+     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
+     * doc in ms-rest index.d.ts for details
+     */
+    getReleaseOrLatestReleaseBySecret(appSecret: string, releaseId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<any>): void;
+    getReleaseOrLatestReleaseBySecret(appSecret: string, releaseId: string, callback: ServiceCallback<any>): void;
+
+    /**
+     * Get a release with id `release_id`. if `release_id` is `latest`, return the
+     * latest release that was distributed to the current user (from all the
+     * distribution groups).
+     *
+     * @param {string} releaseId The ID of the release, or `latest` to get the
+     * latest release from all the distribution groups assigned to the current
+     * user.
+     * 
+     * @param {string} ownerName The name of the owner
+     * 
+     * @param {string} appName The name of the application
+     * 
+     * @param {object} [options] Optional Parameters.
+     * 
+     * @param {object} [options.customHeaders] Headers that will be added to the
+     * request
+     * 
+     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
+     * doc in ms-rest index.d.ts for details
+     */
+    getRelease(releaseId: string, ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<any>): void;
+    getRelease(releaseId: string, ownerName: string, appName: string, callback: ServiceCallback<any>): void;
+
+    /**
+     * Updates a release.
+     *
+     * @param {number} releaseId The ID of the release
+     * 
+     * @param {string} ownerName The name of the owner
+     * 
+     * @param {string} appName The name of the application
+     * 
+     * @param {object} [options] Optional Parameters.
+     * 
+     * @param {string} [options.distributionGroupName] Name of a distribution
+     * group. The release will be associated with this distribution group. If the
+     * distribution group doesn't exist a 400 is returned. If both distribution
+     * group name and id are passed, the id is taking precedence.
+     * 
+     * @param {string} [options.distributionGroupId] Id of a distribution group.
+     * The release will be associated with this distribution group. If the
+     * distribution group doesn't exist a 400 is returned. If both distribution
+     * group name and id are passed, the id is taking precedence.
+     * 
+     * @param {string} [options.releaseNotes] Release notes for this release.
+     * 
+     * @param {object} [options.customHeaders] Headers that will be added to the
+     * request
+     * 
+     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
+     * doc in ms-rest index.d.ts for details
+     */
+    updateRelease(releaseId: number, ownerName: string, appName: string, options: { distributionGroupName? : string, distributionGroupId? : string, releaseNotes? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<any>): void;
+    updateRelease(releaseId: number, ownerName: string, appName: string, callback: ServiceCallback<any>): void;
+
+    /**
+     * Deletes a release.
+     *
+     * @param {string} releaseId The ID of the release
+     * 
+     * @param {string} ownerName The name of the owner
+     * 
+     * @param {string} appName The name of the application
+     * 
+     * @param {object} [options] Optional Parameters.
+     * 
+     * @param {object} [options.customHeaders] Headers that will be added to the
+     * request
+     * 
+     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
+     * doc in ms-rest index.d.ts for details
+     */
+    deleteRelease(releaseId: string, ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ErrorDetails>): void;
+    deleteRelease(releaseId: string, ownerName: string, appName: string, callback: ServiceCallback<models.ErrorDetails>): void;
+
+    /**
+     * Return detailed information about releases.
+     *
+     * @param {string} ownerName The name of the owner
+     * 
+     * @param {string} appName The name of the application
+     * 
+     * @param {object} [options] Optional Parameters.
+     * 
+     * @param {boolean} [options.publishedOnly] when true, filters out releases
+     * that were uplaoded but were never distributed. Releases that under deleted
+     * distribution groups will not be filtered out.
+     * 
+     * @param {string} [options.filter] OBSOLETE. Will be removed in next version.
+     * An OData style filter. Currently only support the 'eq' comparision type.
+     * E.g. ?$filter=status eq 'Available'
+     * 
+     * @param {object} [options.customHeaders] Headers that will be added to the
+     * request
+     * 
+     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
+     * doc in ms-rest index.d.ts for details
+     */
+    getReleases(ownerName: string, appName: string, options: { publishedOnly? : boolean, filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReleaseDetails[]>): void;
+    getReleases(ownerName: string, appName: string, callback: ServiceCallback<models.ReleaseDetails[]>): void;
+
+    /**
+     * Commits or aborts the upload process for a release for the specified
+     * application
+     *
+     * @param {string} uploadId The ID of the upload
+     * 
+     * @param {string} ownerName The name of the owner
+     * 
+     * @param {string} appName The name of the application
+     * 
+     * @param {string} status The desired operation for the upload. Possible
+     * values include: 'committed', 'aborted'
+     * 
+     * @param {object} [options] Optional Parameters.
+     * 
+     * @param {object} [options.customHeaders] Headers that will be added to the
+     * request
+     * 
+     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
+     * doc in ms-rest index.d.ts for details
+     */
+    updateReleaseUpload(uploadId: string, ownerName: string, appName: string, status: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReleaseUploadEndResponse>): void;
+    updateReleaseUpload(uploadId: string, ownerName: string, appName: string, status: string, callback: ServiceCallback<models.ReleaseUploadEndResponse>): void;
+
+    /**
+     * Begins the upload process for a new release for the specified application.
+     *
+     * @param {string} ownerName The name of the owner
+     * 
+     * @param {string} appName The name of the application
+     * 
+     * @param {object} [options] Optional Parameters.
+     * 
+     * @param {object} [options.customHeaders] Headers that will be added to the
+     * request
+     * 
+     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
+     * doc in ms-rest index.d.ts for details
+     */
+    createReleaseUpload(ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReleaseUploadBeginResponse>): void;
+    createReleaseUpload(ownerName: string, appName: string, callback: ServiceCallback<models.ReleaseUploadBeginResponse>): void;
+
+    /**
+     * Get the latest release from every distribution group associated with an
+     * application.
+     *
+     * @param {string} ownerName The name of the owner
+     * 
+     * @param {string} appName The name of the application
+     * 
+     * @param {object} [options] Optional Parameters.
+     * 
+     * @param {object} [options.customHeaders] Headers that will be added to the
+     * request
+     * 
+     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
+     * doc in ms-rest index.d.ts for details
+     */
+    getLatestReleases(ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.BasicReleaseDetails[]>): void;
+    getLatestReleases(ownerName: string, appName: string, callback: ServiceCallback<models.BasicReleaseDetails[]>): void;
+
+    /**
+     * Return detailed information about a distributed release in a given
+     * distribution group.
+     *
+     * @param {string} distributionGroupName The name of the distribution group.
+     * 
+     * @param {string} releaseId Must be `latest`, a specific `release_id` is not
+     * supported at this time.
+     * 
+     * @param {string} ownerName The name of the owner
+     * 
+     * @param {string} appName The name of the application
+     * 
+     * @param {object} [options] Optional Parameters.
+     * 
+     * @param {object} [options.customHeaders] Headers that will be added to the
+     * request
+     * 
+     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
+     * doc in ms-rest index.d.ts for details
+     */
+    getLatestReleaseForDistributionGroup(distributionGroupName: string, releaseId: string, ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<any>): void;
+    getLatestReleaseForDistributionGroup(distributionGroupName: string, releaseId: string, ownerName: string, appName: string, callback: ServiceCallback<any>): void;
+
+    /**
+     * Deletes a release with id 'release_id' in a given distribution group.
+     *
+     * @param {string} distributionGroupName The name of the distribution group.
+     * 
+     * @param {string} releaseId The ID identifying the unique release.
+     * 
+     * @param {string} ownerName The name of the owner
+     * 
+     * @param {string} appName The name of the application
+     * 
+     * @param {object} [options] Optional Parameters.
+     * 
+     * @param {object} [options.customHeaders] Headers that will be added to the
+     * request
+     * 
+     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
+     * doc in ms-rest index.d.ts for details
+     */
+    deleteReleaseForDistributionGroup(distributionGroupName: string, releaseId: string, ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<any>): void;
+    deleteReleaseForDistributionGroup(distributionGroupName: string, releaseId: string, ownerName: string, appName: string, callback: ServiceCallback<any>): void;
+
+    /**
+     * Return detailed information about distributed releases in a given
+     * distribution group.
+     *
+     * @param {string} distributionGroupName The name of the distribution group.
+     * 
+     * @param {string} ownerName The name of the owner
+     * 
+     * @param {string} appName The name of the application
+     * 
+     * @param {object} [options] Optional Parameters.
+     * 
+     * @param {object} [options.customHeaders] Headers that will be added to the
+     * request
+     * 
+     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
+     * doc in ms-rest index.d.ts for details
+     */
+    getReleasesForDistributionGroup(distributionGroupName: string, ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<any>): void;
+    getReleasesForDistributionGroup(distributionGroupName: string, ownerName: string, appName: string, callback: ServiceCallback<any>): void;
+}
+
+/**
+ * @class
  * CrashOperations
  * __NOTE__: An instance of this class is automatically created for an
  * instance of the MobileCenterClient.
@@ -731,12 +981,56 @@ export interface CrashOperations {
      * @param {ServiceCallback} [callback] callback function; see ServiceCallback
      * doc in ms-rest index.d.ts for details
      */
-    deleteSymbolUpload(symbolUploadId: string, ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<any>): void;
-    deleteSymbolUpload(symbolUploadId: string, ownerName: string, appName: string, callback: ServiceCallback<any>): void;
+    deleteSymbolUpload(symbolUploadId: string, ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<any>): void;
+    deleteSymbolUpload(symbolUploadId: string, ownerName: string, appName: string, callback: ServiceCallback<any>): void;
+
+    /**
+     * Gets a list of all uploads for the specified application
+     *
+     * @param {string} ownerName The name of the owner
+     * 
+     * @param {string} appName The name of the application
+     * 
+     * @param {object} [options] Optional Parameters.
+     * 
+     * @param {object} [options.customHeaders] Headers that will be added to the
+     * request
+     * 
+     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
+     * doc in ms-rest index.d.ts for details
+     */
+    getSymbolUploads(ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<any>): void;
+    getSymbolUploads(ownerName: string, appName: string, callback: ServiceCallback<any>): void;
+
+    /**
+     * Begins the symbol upload process for a new set of symbols for the specified
+     * application
+     *
+     * @param {string} ownerName The name of the owner
+     * 
+     * @param {string} appName The name of the application
+     * 
+     * @param {object} [options] Optional Parameters.
+     * 
+     * @param {string} [options.clientCallback] The callback URL that the client
+     * can optionally provide to get status updates for the current symbol upload
+     * 
+     * @param {object} [options.customHeaders] Headers that will be added to the
+     * request
+     * 
+     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
+     * doc in ms-rest index.d.ts for details
+     */
+    postSymbolUpload(ownerName: string, appName: string, options: { clientCallback? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<any>): void;
+    postSymbolUpload(ownerName: string, appName: string, callback: ServiceCallback<any>): void;
 
     /**
-     * Gets a list of all uploads for the specified application
+     * @summary Gets missing symbol crash group by its id
+     *
+     * Gets missing symbol crash group by its id
      *
+     * @param {string} symbolGroupId missing symbol crash group id
+     * 
      * @param {string} ownerName The name of the owner
      * 
      * @param {string} appName The name of the application
@@ -749,21 +1043,24 @@ export interface CrashOperations {
      * @param {ServiceCallback} [callback] callback function; see ServiceCallback
      * doc in ms-rest index.d.ts for details
      */
-    getSymbolUploads(ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<any>): void;
-    getSymbolUploads(ownerName: string, appName: string, callback: ServiceCallback<any>): void;
+    getMissingSymbolCrashGroupById(symbolGroupId: string, ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.MissingSymbolCrashGroupsResponse>): void;
+    getMissingSymbolCrashGroupById(symbolGroupId: string, ownerName: string, appName: string, callback: ServiceCallback<models.MissingSymbolCrashGroupsResponse>): void;
 
     /**
-     * Begins the symbol upload process for a new set of symbols for the specified
-     * application
+     * @summary Gets top N (ordered by crash count) of crash groups by missing
+     * symbol
+     *
+     * Gets top N (ordered by crash count) of crash groups by missing symbol
      *
+     * @param {number} top top N elements
+     * 
      * @param {string} ownerName The name of the owner
      * 
      * @param {string} appName The name of the application
      * 
      * @param {object} [options] Optional Parameters.
      * 
-     * @param {string} [options.clientCallback] The callback URL that the client
-     * can optionally provide to get status updates for the current symbol upload
+     * @param {string} [options.filter] query filter
      * 
      * @param {object} [options.customHeaders] Headers that will be added to the
      * request
@@ -771,8 +1068,8 @@ export interface CrashOperations {
      * @param {ServiceCallback} [callback] callback function; see ServiceCallback
      * doc in ms-rest index.d.ts for details
      */
-    postSymbolUpload(ownerName: string, appName: string, options: { clientCallback? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<any>): void;
-    postSymbolUpload(ownerName: string, appName: string, callback: ServiceCallback<any>): void;
+    getTopNFilteredMissingSymbolCrashGroups(top: number, ownerName: string, appName: string, options: { filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.MissingSymbolCrashGroupsResponse>): void;
+    getTopNFilteredMissingSymbolCrashGroups(top: number, ownerName: string, appName: string, callback: ServiceCallback<models.MissingSymbolCrashGroupsResponse>): void;
 
     /**
      * Gets a stacktrace for a specific error
@@ -1004,6 +1301,9 @@ export interface BuildOperations {
     /**
      * Gets the repositories available from the source code host
      *
+     * @param {string} sourceHost The source host. Possible values include:
+     * 'github', 'bitbucket'
+     * 
      * @param {string} ownerName The name of the owner
      * 
      * @param {string} appName The name of the application
@@ -1019,8 +1319,8 @@ export interface BuildOperations {
      * @param {ServiceCallback} [callback] callback function; see ServiceCallback
      * doc in ms-rest index.d.ts for details
      */
-    getRepositories(ownerName: string, appName: string, options: { form? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<any>): void;
-    getRepositories(ownerName: string, appName: string, callback: ServiceCallback<any>): void;
+    getRepositories(sourceHost: string, ownerName: string, appName: string, options: { form? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<any>): void;
+    getRepositories(sourceHost: string, ownerName: string, appName: string, callback: ServiceCallback<any>): void;
 
     /**
      * Returns the repository build configuration status of the app
@@ -1121,8 +1421,8 @@ export interface BuildOperations {
      * @param {ServiceCallback} [callback] callback function; see ServiceCallback
      * doc in ms-rest index.d.ts for details
      */
-    getBuildLogs(buildId: number, ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
-    getBuildLogs(buildId: number, ownerName: string, appName: string, callback: ServiceCallback<void>): void;
+    getBuildLogs(buildId: number, ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.BuildLog>): void;
+    getBuildLogs(buildId: number, ownerName: string, appName: string, callback: ServiceCallback<models.BuildLog>): void;
 
     /**
      * Gets the download URI
@@ -1144,8 +1444,32 @@ export interface BuildOperations {
      * @param {ServiceCallback} [callback] callback function; see ServiceCallback
      * doc in ms-rest index.d.ts for details
      */
-    getBuildDownload(buildId: number, downloadType: string, ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
-    getBuildDownload(buildId: number, downloadType: string, ownerName: string, appName: string, callback: ServiceCallback<void>): void;
+    getBuildDownload(buildId: number, downloadType: string, ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DownloadContainer>): void;
+    getBuildDownload(buildId: number, downloadType: string, ownerName: string, appName: string, callback: ServiceCallback<models.DownloadContainer>): void;
+
+    /**
+     * Distribute a build
+     *
+     * @param {number} buildId The build ID
+     * 
+     * @param {string} ownerName The name of the owner
+     * 
+     * @param {string} appName The name of the application
+     * 
+     * @param {string} distributionGroupId The distribution group ID
+     * 
+     * @param {object} [options] Optional Parameters.
+     * 
+     * @param {string} [options.releaseNotes] The release notes
+     * 
+     * @param {object} [options.customHeaders] Headers that will be added to the
+     * request
+     * 
+     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
+     * doc in ms-rest index.d.ts for details
+     */
+    postDistributeRequest(buildId: number, ownerName: string, appName: string, distributionGroupId: string, options: { releaseNotes? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DistributionResponse>): void;
+    postDistributeRequest(buildId: number, ownerName: string, appName: string, distributionGroupId: string, callback: ServiceCallback<models.DistributionResponse>): void;
 
     /**
      * Returns the build detail for the given build ID
@@ -2384,25 +2708,21 @@ export interface Identity {
 
 /**
  * @class
- * Distribute
+ * Deprecated
  * __NOTE__: An instance of this class is automatically created for an
  * instance of the MobileCenterClient.
  */
-export interface Distribute {
+export interface Deprecated {
 
     /**
-     * Get a release with id `release_id`. if `release_id` is `latest`, return the
-     * latest release that was distributed to the current user (from all the
-     * distribution groups).
+     * Invites a new or existing user to an app
      *
-     * @param {string} releaseId The ID of the release, or `latest` to get the
-     * latest release from all the distribution groups assigned to the current
-     * user.
-     * 
      * @param {string} ownerName The name of the owner
      * 
      * @param {string} appName The name of the application
      * 
+     * @param {string} userEmail The email of the user to invite
+     * 
      * @param {object} [options] Optional Parameters.
      * 
      * @param {object} [options.customHeaders] Headers that will be added to the
@@ -2411,45 +2731,37 @@ export interface Distribute {
      * @param {ServiceCallback} [callback] callback function; see ServiceCallback
      * doc in ms-rest index.d.ts for details
      */
-    getReleaseOrLatestRelease(releaseId: string, ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<any>): void;
-    getReleaseOrLatestRelease(releaseId: string, ownerName: string, appName: string, callback: ServiceCallback<any>): void;
+    inviteAppUser(ownerName: string, appName: string, userEmail: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ErrorResponse>): void;
+    inviteAppUser(ownerName: string, appName: string, userEmail: string, callback: ServiceCallback<models.ErrorResponse>): void;
+}
+
+/**
+ * @class
+ * Codepush
+ * __NOTE__: An instance of this class is automatically created for an
+ * instance of the MobileCenterClient.
+ */
+export interface Codepush {
 
     /**
-     * Updates a release.
+     * Modifies a CodePush release metadata under the given Deployment
      *
-     * @param {number} releaseId The ID of the release
+     * @param {string} deploymentName deployment name
      * 
-     * @param {string} ownerName The name of the owner
-     * 
-     * @param {string} appName The name of the application
+     * @param {string} releaseLabel release label
      * 
-     * @param {object} [options] Optional Parameters.
+     * @param {object} release Release modification. All fields are optional and
+     * only provided fields will get updated.
      * 
-     * @param {string} [options.distributionGroupName] Name of a distribution
-     * group. The release will be associated with this distribution group. If the
-     * distribution group doesn't exist a 400 is returned. If both distribution
-     * group name and id are passed, the id is taking precedence.
+     * @param {string} [release.targetBinaryRange]
      * 
-     * @param {string} [options.distributionGroupId] Id of a distribution group.
-     * The release will be associated with this distribution group. If the
-     * distribution group doesn't exist a 400 is returned. If both distribution
-     * group name and id are passed, the id is taking precedence.
+     * @param {string} [release.description]
      * 
-     * @param {string} [options.releaseNotes] Release notes for this release.
+     * @param {boolean} [release.isDisabled]
      * 
-     * @param {object} [options.customHeaders] Headers that will be added to the
-     * request
+     * @param {boolean} [release.isMandatory]
      * 
-     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
-     * doc in ms-rest index.d.ts for details
-     */
-    patchV01AppsByOwnerNameByAppNameReleasesByReleaseId(releaseId: number, ownerName: string, appName: string, options: { distributionGroupName? : string, distributionGroupId? : string, releaseNotes? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<any>): void;
-    patchV01AppsByOwnerNameByAppNameReleasesByReleaseId(releaseId: number, ownerName: string, appName: string, callback: ServiceCallback<any>): void;
-
-    /**
-     * Deletes a release.
-     *
-     * @param {string} releaseId The ID of the release
+     * @param {number} [release.rollout]
      * 
      * @param {string} ownerName The name of the owner
      * 
@@ -2463,48 +2775,38 @@ export interface Distribute {
      * @param {ServiceCallback} [callback] callback function; see ServiceCallback
      * doc in ms-rest index.d.ts for details
      */
-    deleteV01AppsByOwnerNameByAppNameReleasesByReleaseId(releaseId: string, ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ErrorDetails>): void;
-    deleteV01AppsByOwnerNameByAppNameReleasesByReleaseId(releaseId: string, ownerName: string, appName: string, callback: ServiceCallback<models.ErrorDetails>): void;
+    patchRelease(deploymentName: string, releaseLabel: string, release: models.LiveUpdateReleaseModification, ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
+    patchRelease(deploymentName: string, releaseLabel: string, release: models.LiveUpdateReleaseModification, ownerName: string, appName: string, callback: ServiceCallback<void>): void;
 
     /**
-     * Return detailed information about releases.
+     * Clears a Deployment of releases
      *
+     * @param {string} deploymentName deployment name
+     * 
      * @param {string} ownerName The name of the owner
      * 
      * @param {string} appName The name of the application
      * 
      * @param {object} [options] Optional Parameters.
      * 
-     * @param {boolean} [options.publishedOnly] when true, filters out releases
-     * that were uplaoded but were never distributed. Releases that under deleted
-     * distribution groups will not be filtered out.
-     * 
-     * @param {string} [options.filter] OBSOLETE. Will be removed in next version.
-     * An OData style filter. Currently only support the 'eq' comparision type.
-     * E.g. ?$filter=status eq 'Available'
-     * 
      * @param {object} [options.customHeaders] Headers that will be added to the
      * request
      * 
      * @param {ServiceCallback} [callback] callback function; see ServiceCallback
      * doc in ms-rest index.d.ts for details
      */
-    getV01AppsByOwnerNameByAppNameReleases(ownerName: string, appName: string, options: { publishedOnly? : boolean, filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReleaseDetails[]>): void;
-    getV01AppsByOwnerNameByAppNameReleases(ownerName: string, appName: string, callback: ServiceCallback<models.ReleaseDetails[]>): void;
+    deleteReleases(deploymentName: string, ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
+    deleteReleases(deploymentName: string, ownerName: string, appName: string, callback: ServiceCallback<void>): void;
 
     /**
-     * Commits or aborts the upload process for a release for the specified
-     * application
+     * Gets the history of releases on a Deployment
      *
-     * @param {string} uploadId The ID of the upload
+     * @param {string} deploymentName deployment name
      * 
      * @param {string} ownerName The name of the owner
      * 
      * @param {string} appName The name of the application
      * 
-     * @param {string} status The desired operation for the upload. Possible
-     * values include: 'committed', 'aborted'
-     * 
      * @param {object} [options] Optional Parameters.
      * 
      * @param {object} [options.customHeaders] Headers that will be added to the
@@ -2513,12 +2815,14 @@ export interface Distribute {
      * @param {ServiceCallback} [callback] callback function; see ServiceCallback
      * doc in ms-rest index.d.ts for details
      */
-    patchV01AppsByOwnerNameByAppNameReleaseUploadsByUploadId(uploadId: string, ownerName: string, appName: string, status: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReleaseUploadEndResponse>): void;
-    patchV01AppsByOwnerNameByAppNameReleaseUploadsByUploadId(uploadId: string, ownerName: string, appName: string, status: string, callback: ServiceCallback<models.ReleaseUploadEndResponse>): void;
+    getReleases(deploymentName: string, ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.LiveUpdateRelease[]>): void;
+    getReleases(deploymentName: string, ownerName: string, appName: string, callback: ServiceCallback<models.LiveUpdateRelease[]>): void;
 
     /**
-     * Begins the upload process for a new release for the specified application.
+     * Gets all releases metrics for specified Deployment
      *
+     * @param {string} deploymentName deployment name
+     * 
      * @param {string} ownerName The name of the owner
      * 
      * @param {string} appName The name of the application
@@ -2531,13 +2835,14 @@ export interface Distribute {
      * @param {ServiceCallback} [callback] callback function; see ServiceCallback
      * doc in ms-rest index.d.ts for details
      */
-    postV01AppsByOwnerNameByAppNameReleaseUploads(ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReleaseUploadBeginResponse>): void;
-    postV01AppsByOwnerNameByAppNameReleaseUploads(ownerName: string, appName: string, callback: ServiceCallback<models.ReleaseUploadBeginResponse>): void;
+    getDeploymentMetrics(deploymentName: string, ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.LiveUpdateReleaseMetric[]>): void;
+    getDeploymentMetrics(deploymentName: string, ownerName: string, appName: string, callback: ServiceCallback<models.LiveUpdateReleaseMetric[]>): void;
 
     /**
-     * Get the latest release from every distribution group associated with an
-     * application.
+     * Deletes a CodePush Deployment (e.g. 'Staging') for the given app
      *
+     * @param {string} deploymentName deployment name
+     * 
      * @param {string} ownerName The name of the owner
      * 
      * @param {string} appName The name of the application
@@ -2550,13 +2855,14 @@ export interface Distribute {
      * @param {ServiceCallback} [callback] callback function; see ServiceCallback
      * doc in ms-rest index.d.ts for details
      */
-    getLatestReleases(ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.BasicReleaseDetails[]>): void;
-    getLatestReleases(ownerName: string, appName: string, callback: ServiceCallback<models.BasicReleaseDetails[]>): void;
+    deleteDeployment(deploymentName: string, ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
+    deleteDeployment(deploymentName: string, ownerName: string, appName: string, callback: ServiceCallback<void>): void;
 
     /**
-     * Get the latest package from every distribution group associated with an
-     * application.
+     * Gets a CodePush Deployment (e.g. 'Staging') for the given app
      *
+     * @param {string} deploymentName deployment name
+     * 
      * @param {string} ownerName The name of the owner
      * 
      * @param {string} appName The name of the application
@@ -2569,17 +2875,13 @@ export interface Distribute {
      * @param {ServiceCallback} [callback] callback function; see ServiceCallback
      * doc in ms-rest index.d.ts for details
      */
-    getLatestPackages(ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.BasicPackageDetails[]>): void;
-    getLatestPackages(ownerName: string, appName: string, callback: ServiceCallback<models.BasicPackageDetails[]>): void;
+    getDeployment(deploymentName: string, ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Deployment>): void;
+    getDeployment(deploymentName: string, ownerName: string, appName: string, callback: ServiceCallback<models.Deployment>): void;
 
     /**
-     * Get a package with id 'package_id'. if 'package_id' is 'latest', return the
-     * latest package that was distributed to the current user (from all the
-     * distribution groups).
+     * Modifies a CodePush Deployment (e.g. 'Staging') for the given app
      *
-     * @param {string} packageId The ID of the package, or 'latest' to get the
-     * latest package from all the distribution groups assigned to the current
-     * user.
+     * @param {string} deploymentName deployment name
      * 
      * @param {string} ownerName The name of the owner
      * 
@@ -2587,51 +2889,35 @@ export interface Distribute {
      * 
      * @param {object} [options] Optional Parameters.
      * 
+     * @param {string} [options.name]
+     * 
      * @param {object} [options.customHeaders] Headers that will be added to the
      * request
      * 
      * @param {ServiceCallback} [callback] callback function; see ServiceCallback
      * doc in ms-rest index.d.ts for details
      */
-    getPackageOrLatestPackage(packageId: string, ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<any>): void;
-    getPackageOrLatestPackage(packageId: string, ownerName: string, appName: string, callback: ServiceCallback<any>): void;
+    patchDeployment(deploymentName: string, ownerName: string, appName: string, options: { name? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
+    patchDeployment(deploymentName: string, ownerName: string, appName: string, callback: ServiceCallback<void>): void;
 
     /**
-     * Updates a package.
+     * Report download of specified release
      *
-     * @param {number} packageId The ID of the package
-     * 
-     * @param {string} ownerName The name of the owner
+     * @param {string} deploymentKey deployment key
      * 
-     * @param {string} appName The name of the application
+     * @param {object} releaseMetadata Deployment status metric properties
      * 
-     * @param {object} [options] Optional Parameters.
+     * @param {string} [releaseMetadata.label]
      * 
-     * @param {string} [options.distributionGroupName] Name of a distribution
-     * group. The package will be associated with this distribution group. If the
-     * distribution group doesn't exist a 400 is returned. If both distribution
-     * group name and id are passed, the id is taking precedence.
+     * @param {string} [releaseMetadata.appVersion]
      * 
-     * @param {string} [options.distributionGroupId] Id of a distribution group.
-     * The package will be associated with this distribution group. If the
-     * distribution group doesn't exist a 400 is returned. If both distribution
-     * group name and id are passed, the id is taking precedence.
+     * @param {string} [releaseMetadata.previousDeploymentKey]
      * 
-     * @param {string} [options.releaseNotes] Release notes for this package.
+     * @param {string} [releaseMetadata.previousLabelOrAppVersion]
      * 
-     * @param {object} [options.customHeaders] Headers that will be added to the
-     * request
+     * @param {string} [releaseMetadata.status]
      * 
-     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
-     * doc in ms-rest index.d.ts for details
-     */
-    patchV01AppsByOwnerNameByAppNamePackagesByPackageId(packageId: number, ownerName: string, appName: string, options: { distributionGroupName? : string, distributionGroupId? : string, releaseNotes? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<any>): void;
-    patchV01AppsByOwnerNameByAppNamePackagesByPackageId(packageId: number, ownerName: string, appName: string, callback: ServiceCallback<any>): void;
-
-    /**
-     * Deletes a package.
-     *
-     * @param {string} packageId The ID of the package
+     * @param {string} [releaseMetadata.clientUniqueId]
      * 
      * @param {string} ownerName The name of the owner
      * 
@@ -2645,62 +2931,28 @@ export interface Distribute {
      * @param {ServiceCallback} [callback] callback function; see ServiceCallback
      * doc in ms-rest index.d.ts for details
      */
-    deleteV01AppsByOwnerNameByAppNamePackagesByPackageId(packageId: string, ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ErrorDetails>): void;
-    deleteV01AppsByOwnerNameByAppNamePackagesByPackageId(packageId: string, ownerName: string, appName: string, callback: ServiceCallback<models.ErrorDetails>): void;
+    postDownloadStatusMetric(deploymentKey: string, releaseMetadata: models.LiveUpdateStatusMetricMetadata, ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
+    postDownloadStatusMetric(deploymentKey: string, releaseMetadata: models.LiveUpdateStatusMetricMetadata, ownerName: string, appName: string, callback: ServiceCallback<void>): void;
 
     /**
-     * Return detailed information about packages.
+     * Report Deployment status metric
      *
-     * @param {string} ownerName The name of the owner
-     * 
-     * @param {string} appName The name of the application
-     * 
-     * @param {object} [options] Optional Parameters.
-     * 
-     * @param {boolean} [options.publishedOnly] when true, filters out packages
-     * that were uplaoded but were never distributed. Packages that under deleted
-     * distribution groups will not be filtered out.
+     * @param {string} deploymentKey deployment key
      * 
-     * @param {string} [options.filter] OBSOLETE. Will be removed in next version.
-     * An OData style filter. Currently only support the 'eq' comparision type.
-     * E.g. ?$filter=status eq 'Available'
-     * 
-     * @param {object} [options.customHeaders] Headers that will be added to the
-     * request
+     * @param {object} releaseMetadata Deployment status metric properties
      * 
-     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
-     * doc in ms-rest index.d.ts for details
-     */
-    getV01AppsByOwnerNameByAppNamePackages(ownerName: string, appName: string, options: { publishedOnly? : boolean, filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PackageDetails[]>): void;
-    getV01AppsByOwnerNameByAppNamePackages(ownerName: string, appName: string, callback: ServiceCallback<models.PackageDetails[]>): void;
-
-    /**
-     * Commits or aborts the upload process for a package for the specified
-     * application
-     *
-     * @param {string} uploadId The ID of the upload
+     * @param {string} [releaseMetadata.label]
      * 
-     * @param {string} ownerName The name of the owner
+     * @param {string} [releaseMetadata.appVersion]
      * 
-     * @param {string} appName The name of the application
+     * @param {string} [releaseMetadata.previousDeploymentKey]
      * 
-     * @param {string} status The desired operation for the upload. Possible
-     * values include: 'committed', 'aborted'
+     * @param {string} [releaseMetadata.previousLabelOrAppVersion]
      * 
-     * @param {object} [options] Optional Parameters.
+     * @param {string} [releaseMetadata.status]
      * 
-     * @param {object} [options.customHeaders] Headers that will be added to the
-     * request
+     * @param {string} [releaseMetadata.clientUniqueId]
      * 
-     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
-     * doc in ms-rest index.d.ts for details
-     */
-    patchV01AppsByOwnerNameByAppNamePackageUploadsByUploadId(uploadId: string, ownerName: string, appName: string, status: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PackageUploadEndResponse>): void;
-    patchV01AppsByOwnerNameByAppNamePackageUploadsByUploadId(uploadId: string, ownerName: string, appName: string, status: string, callback: ServiceCallback<models.PackageUploadEndResponse>): void;
-
-    /**
-     * Begins the upload process for a new package for the specified application
-     *
      * @param {string} ownerName The name of the owner
      * 
      * @param {string} appName The name of the application
@@ -2713,18 +2965,13 @@ export interface Distribute {
      * @param {ServiceCallback} [callback] callback function; see ServiceCallback
      * doc in ms-rest index.d.ts for details
      */
-    postV01AppsByOwnerNameByAppNamePackageUploads(ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PackageUploadBeginResponse>): void;
-    postV01AppsByOwnerNameByAppNamePackageUploads(ownerName: string, appName: string, callback: ServiceCallback<models.PackageUploadBeginResponse>): void;
+    postDeployStatusMetric(deploymentKey: string, releaseMetadata: models.LiveUpdateStatusMetricMetadata, ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
+    postDeployStatusMetric(deploymentKey: string, releaseMetadata: models.LiveUpdateStatusMetricMetadata, ownerName: string, appName: string, callback: ServiceCallback<void>): void;
 
     /**
-     * Return detailed information about a distributed release in a given
-     * distribution group.
+     * Gets a list of CodePush deployments (e.g. 'Staging', 'Production') for the
+     * given app
      *
-     * @param {string} distributionGroupName The name of the distribution group.
-     * 
-     * @param {string} releaseId Must be `latest`, a specific `release_id` is not
-     * supported at this time.
-     * 
      * @param {string} ownerName The name of the owner
      * 
      * @param {string} appName The name of the application
@@ -2737,87 +2984,54 @@ export interface Distribute {
      * @param {ServiceCallback} [callback] callback function; see ServiceCallback
      * doc in ms-rest index.d.ts for details
      */
-    getLatestReleaseForDistributionGroup(distributionGroupName: string, releaseId: string, ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<any>): void;
-    getLatestReleaseForDistributionGroup(distributionGroupName: string, releaseId: string, ownerName: string, appName: string, callback: ServiceCallback<any>): void;
+    getDeployments(ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Deployment[]>): void;
+    getDeployments(ownerName: string, appName: string, callback: ServiceCallback<models.Deployment[]>): void;
 
     /**
-     * Deletes a release with id 'release_id' in a given distribution group.
+     * Creates a CodePush Deployment (e.g. 'Staging') for the given app
      *
-     * @param {string} distributionGroupName The name of the distribution group.
-     * 
-     * @param {string} releaseId The ID identifying the unique release.
-     * 
      * @param {string} ownerName The name of the owner
      * 
      * @param {string} appName The name of the application
      * 
+     * @param {string} name
+     * 
      * @param {object} [options] Optional Parameters.
      * 
-     * @param {object} [options.customHeaders] Headers that will be added to the
-     * request
+     * @param {string} [options.key]
      * 
-     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
-     * doc in ms-rest index.d.ts for details
-     */
-    deleteReleaseForDistributionGroup(distributionGroupName: string, releaseId: string, ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<any>): void;
-    deleteReleaseForDistributionGroup(distributionGroupName: string, releaseId: string, ownerName: string, appName: string, callback: ServiceCallback<any>): void;
-
-    /**
-     * Return detailed information about distributed releases in a given
-     * distribution group.
-     *
-     * @param {string} distributionGroupName The name of the distribution group.
+     * @param {object} [options.latestRelease]
      * 
-     * @param {string} ownerName The name of the owner
+     * @param {string} [options.latestRelease.targetBinaryRange]
      * 
-     * @param {string} appName The name of the application
+     * @param {string} [options.latestRelease.blobUrl]
      * 
-     * @param {object} [options] Optional Parameters.
+     * @param {string} [options.latestRelease.description]
      * 
-     * @param {object} [options.customHeaders] Headers that will be added to the
-     * request
+     * @param {boolean} [options.latestRelease.isDisabled]
      * 
-     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
-     * doc in ms-rest index.d.ts for details
-     */
-    getReleasesForDistributionGroup(distributionGroupName: string, ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<any>): void;
-    getReleasesForDistributionGroup(distributionGroupName: string, ownerName: string, appName: string, callback: ServiceCallback<any>): void;
-
-    /**
-     * Return detailed information about a distributed package in a given
-     * distribution group.
-     *
-     * @param {string} distributionGroupName The name of the distribution group.
+     * @param {boolean} [options.latestRelease.isMandatory]
      * 
-     * @param {string} packageId For GET calls, this must be 'latest', specific
-     * package_id's are not supported at this time.
+     * @param {string} [options.latestRelease.label]
      * 
-     * @param {string} ownerName The name of the owner
+     * @param {string} [options.latestRelease.originalDeployment] Set on 'Promote'
      * 
-     * @param {string} appName The name of the application
+     * @param {string} [options.latestRelease.originalLabel] Set on 'Promote' and
+     * 'Rollback'
      * 
-     * @param {object} [options] Optional Parameters.
+     * @param {string} [options.latestRelease.hash]
      * 
-     * @param {object} [options.customHeaders] Headers that will be added to the
-     * request
+     * @param {string} [options.latestRelease.releasedBy]
      * 
-     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
-     * doc in ms-rest index.d.ts for details
-     */
-    getLatestPackageForDistributionGroup(distributionGroupName: string, packageId: string, ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<any>): void;
-    getLatestPackageForDistributionGroup(distributionGroupName: string, packageId: string, ownerName: string, appName: string, callback: ServiceCallback<any>): void;
-
-    /**
-     * Return detailed information about distributed packages in a given
-     * distribution group.
-     *
-     * @param {string} distributionGroupName The name of the distribution group.
+     * @param {string} [options.latestRelease.releaseMethod] The release method is
+     * unknown if unspecified. Possible values include: 'Upload', 'Promote',
+     * 'Rollback'
      * 
-     * @param {string} ownerName The name of the owner
+     * @param {number} [options.latestRelease.rollout]
      * 
-     * @param {string} appName The name of the application
+     * @param {number} [options.latestRelease.size]
      * 
-     * @param {object} [options] Optional Parameters.
+     * @param {number} [options.latestRelease.uploadTime]
      * 
      * @param {object} [options.customHeaders] Headers that will be added to the
      * request
@@ -2825,8 +3039,8 @@ export interface Distribute {
      * @param {ServiceCallback} [callback] callback function; see ServiceCallback
      * doc in ms-rest index.d.ts for details
      */
-    getPackagesForDistributionGroup(distributionGroupName: string, ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<any>): void;
-    getPackagesForDistributionGroup(distributionGroupName: string, ownerName: string, appName: string, callback: ServiceCallback<any>): void;
+    postDeployments(ownerName: string, appName: string, name: string, options: { key? : string, latestRelease? : models.LiveUpdateRelease, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Deployment>): void;
+    postDeployments(ownerName: string, appName: string, name: string, callback: ServiceCallback<models.Deployment>): void;
 }
 
 /**
@@ -3239,6 +3453,26 @@ export interface Analytics {
     eventPerDeviceCount(eventName: string, start: Date|string, ownerName: string, appName: string, callback: ServiceCallback<models.EventCountPerDevice>): void;
 
     /**
+     * Delete the set of Events with the specified event names
+     *
+     * @param {string} eventName The id of the event
+     * 
+     * @param {string} ownerName The name of the owner
+     * 
+     * @param {string} appName The name of the application
+     * 
+     * @param {object} [options] Optional Parameters.
+     * 
+     * @param {object} [options.customHeaders] Headers that will be added to the
+     * request
+     * 
+     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
+     * doc in ms-rest index.d.ts for details
+     */
+    eventsDelete(eventName: string, ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
+    eventsDelete(eventName: string, ownerName: string, appName: string, callback: ServiceCallback<void>): void;
+
+    /**
      * Count of active events in the time range ordered by event.
      *
      * @param {date} start Start date time in data in ISO 8601 date time format
@@ -3280,6 +3514,26 @@ export interface Analytics {
     events(start: Date|string, ownerName: string, appName: string, callback: ServiceCallback<models.Events>): void;
 
     /**
+     * Delete the set of Events with the specified event names
+     *
+     * @param {string} eventName The id of the event
+     * 
+     * @param {string} ownerName The name of the owner
+     * 
+     * @param {string} appName The name of the application
+     * 
+     * @param {object} [options] Optional Parameters.
+     * 
+     * @param {object} [options.customHeaders] Headers that will be added to the
+     * request
+     * 
+     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
+     * doc in ms-rest index.d.ts for details
+     */
+    eventsDeleteLogs(eventName: string, ownerName: string, appName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
+    eventsDeleteLogs(eventName: string, ownerName: string, appName: string, callback: ServiceCallback<void>): void;
+
+    /**
      * Percentage of crash-free device by day in the time range based on the
      * selected versions. Api will return -1 if crash devices is greater than
      * active devices
diff --git a/src/util/apis/generated/operations/index.js b/src/util/apis/generated/operations/index.js
index 9ba147d..a9bcabb 100644
--- a/src/util/apis/generated/operations/index.js
+++ b/src/util/apis/generated/operations/index.js
@@ -11,6 +11,7 @@
 'use strict';
 
 exports.Account = require('./account');
+exports.Distribute = require('./distribute');
 exports.CrashOperations = require('./crashOperations');
 exports.BuildOperations = require('./buildOperations');
 exports.Test = require('./test');
@@ -18,5 +19,6 @@ exports.Tables = require('./tables');
 exports.Azure = require('./azure');
 exports.Push = require('./push');
 exports.Identity = require('./identity');
-exports.Distribute = require('./distribute');
+exports.Deprecated = require('./deprecated');
+exports.Codepush = require('./codepush');
 exports.Analytics = require('./analytics');
diff --git a/swagger/bifrost.swagger.before.json b/swagger/bifrost.swagger.before.json
index be6c5ea..88b16d3 100644
--- a/swagger/bifrost.swagger.before.json
+++ b/swagger/bifrost.swagger.before.json
@@ -1,11446 +1,12458 @@
 {
-    "swagger": "2.0",
-    "info": {
-        "version": "preview",
-        "title": "Mobile Center API Service",
-        "description": "Mobile Center Frontdoor Graph API Service"
-    },
-    "host": "api.mobile.azure.com",
-    "basePath": "/",
-    "schemes": [
-        "https"
-    ],
-    "consumes": [
-        "application/json"
-    ],
-    "produces": [
-        "application/json"
-    ],
-    "paths": {
-        "/v0.1/user/invitations/distribution_groups/accept": {
-            "post": {
-                "description": "Accepts all pending invitations to distribution groups for the specified user",
-                "parameters": [],
-                "responses": {
-                    "204": {
-                        "description": "Success"
-                    },
-                    "400": {
-                        "description": "BadRequest",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "404": {
-                        "description": "NotFound",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    }
-                },
-                "operationId": "acceptGroupsInvitation",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "account"
-                ]
-            }
-        },
-        "/v0.1/user/invitations/apps/{invitation_token}/reject": {
-            "post": {
-                "description": "Rejects a pending invitation for the specified user",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/invitation_token"
-                    }
-                ],
-                "responses": {
-                    "204": {
-                        "description": "Success"
-                    },
-                    "400": {
-                        "description": "BadRequest",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "404": {
-                        "description": "NotFound",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    }
-                },
-                "operationId": "rejectInvitation",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "account"
-                ]
-            }
-        },
-        "/v0.1/user/invitations/apps/{invitation_token}/accept": {
-            "post": {
-                "description": "Accepts a pending invitation for the specified user",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/invitation_token"
-                    }
-                ],
-                "responses": {
-                    "204": {
-                        "description": "Success"
-                    },
-                    "400": {
-                        "description": "BadRequest",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "404": {
-                        "description": "NotFound",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    }
-                },
-                "operationId": "acceptInvitation",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "account"
-                ]
-            }
-        },
-        "/v0.1/user": {
-            "get": {
-                "description": "Returns the user profile data",
-                "parameters": [],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/UserProfileResponse"
-                        }
-                    },
-                    "400": {
-                        "description": "BadRequest",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "404": {
-                        "description": "NotFound",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    }
-                },
-                "operationId": "getUserProfile",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "account"
-                ]
+  "swagger": "2.0",
+  "info": {
+    "version": "preview",
+    "title": "Mobile Center API Service",
+    "description": "Mobile Center Frontdoor Graph API Service"
+  },
+  "host": "api.mobile.azure.com",
+  "basePath": "/",
+  "schemes": [
+    "https"
+  ],
+  "consumes": [
+    "application/json"
+  ],
+  "produces": [
+    "application/json"
+  ],
+  "paths": {
+    "/v0.1/user/invitations/distribution_groups/accept": {
+      "post": {
+        "description": "Accepts all pending invitations to distribution groups for the specified user",
+        "parameters": [],
+        "responses": {
+          "204": {
+            "description": "Success"
+          },
+          "400": {
+            "description": "BadRequest",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          },
+          "404": {
+            "description": "NotFound",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          }
+        },
+        "operationId": "acceptGroupsInvitation",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "account"
+        ]
+      }
+    },
+    "/v0.1/user/invitations/apps/{invitation_token}/reject": {
+      "post": {
+        "description": "Rejects a pending invitation for the specified user",
+        "parameters": [
+          {
+            "$ref": "#/parameters/invitation_token"
+          }
+        ],
+        "responses": {
+          "204": {
+            "description": "Success"
+          },
+          "400": {
+            "description": "BadRequest",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          },
+          "404": {
+            "description": "NotFound",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          }
+        },
+        "operationId": "rejectInvitation",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "account"
+        ]
+      }
+    },
+    "/v0.1/user/invitations/apps/{invitation_token}/accept": {
+      "post": {
+        "description": "Accepts a pending invitation for the specified user",
+        "parameters": [
+          {
+            "$ref": "#/parameters/invitation_token"
+          }
+        ],
+        "responses": {
+          "204": {
+            "description": "Success"
+          },
+          "400": {
+            "description": "BadRequest",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          },
+          "404": {
+            "description": "NotFound",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          }
+        },
+        "operationId": "acceptInvitation",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "account"
+        ]
+      }
+    },
+    "/v0.1/user": {
+      "get": {
+        "description": "Returns the user profile data",
+        "parameters": [],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/UserProfileResponse"
+            }
+          },
+          "400": {
+            "description": "BadRequest",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          },
+          "404": {
+            "description": "NotFound",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          }
+        },
+        "operationId": "getUserProfile",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "account"
+        ]
+      },
+      "patch": {
+        "description": "Updates the user profile and returns the updated user data",
+        "parameters": [
+          {
+            "name": "user",
+            "in": "body",
+            "description": "The data for the created user",
+            "required": true,
+            "schema": {
+              "$ref": "#/definitions/UserUpdateRequest"
+            }
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/UserProfileResponse"
+            }
+          },
+          "400": {
+            "description": "BadRequest",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          },
+          "404": {
+            "description": "NotFound",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          },
+          "409": {
+            "description": "Conflict",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          }
+        },
+        "operationId": "updateUserProfile",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "account"
+        ]
+      }
+    },
+    "/v0.1/sdk/apps/{app_secret}/releases/{release_id}": {
+      "get": {
+        "description": "Get a release with id `release_id`. if `release_id` is `latest`, return the latest release that was distributed to the current user (from all the distribution groups).",
+        "operationId": "getReleaseOrLatestReleaseBySecret",
+        "parameters": [
+          {
+            "name": "app_secret",
+            "type": "string",
+            "in": "path",
+            "description": "The secret of the target application",
+            "required": true
+          },
+          {
+            "name": "release_id",
+            "type": "string",
+            "in": "path",
+            "description": "The ID of the release, or `latest` to get the latest release from all the distribution groups assigned to the current user.",
+            "required": true
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/ReleaseDetails"
+            }
+          },
+          "400": {
+            "description": "<b>bad_request</b>: `release_id` is not a number or the string `latest`.\n",
+            "schema": {
+              "$ref": "#/definitions/ErrorDetails"
+            }
+          },
+          "404": {
+            "description": "<b>not_found</b> - A release or an app can't be found.\n",
+            "schema": {
+              "$ref": "#/definitions/ErrorDetails"
+            }
+          },
+          "500": {
+            "description": "An internal error.\n",
+            "schema": {
+              "$ref": "#/definitions/ErrorDetails"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "distribute"
+        ]
+      }
+    },
+    "/v0.1/management/crashes/apps/{owner_name}/{app_name}/crashes/{crash_id}/raw": {
+      "get": {
+        "description": "Gets the json of a specific crash",
+        "operationId": "getCrashRaw",
+        "parameters": [
+          {
+            "$ref": "#/parameters/path_crash_id"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/RawCrashLog"
+            }
+          },
+          "default": {
+            "description": "Error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "crash"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/xcode_versions": {
+      "get": {
+        "description": "Gets the Xcode versions available to this app",
+        "parameters": [
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/XcodeVersions"
+            }
+          },
+          "400": {
+            "description": "Bad Request",
+            "schema": {
+              "$ref": "#/definitions/ValidationErrorResponse"
+            }
+          }
+        },
+        "operationId": "build_getXcodeVersions",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "build"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/versions": {
+      "get": {
+        "description": "Gets a list of application versions",
+        "summary": "Gets a list of application versions",
+        "operationId": "getAppVersions",
+        "parameters": [
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "type": "array",
+              "items": {
+                "$ref": "#/definitions/AppVersion"
+              }
+            }
+          },
+          "default": {
+            "description": "Error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "crash"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/users/{user_email}": {
+      "delete": {
+        "description": "Removes the user from the app",
+        "parameters": [
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          },
+          {
+            "name": "user_email",
+            "type": "string",
+            "in": "path",
+            "description": "The email of the user to invite",
+            "required": true
+          }
+        ],
+        "responses": {
+          "204": {
+            "description": "Success"
+          },
+          "400": {
+            "description": "BadRequest",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          },
+          "403": {
+            "description": "Forbidden",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          },
+          "404": {
+            "description": "NotFound",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          }
+        },
+        "operationId": "deleteAppUser",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "account"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/users": {
+      "get": {
+        "description": "Returns the users associated with the app specified with the given app name which belongs to the given owner.",
+        "parameters": [
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "type": "array",
+              "items": {
+                "$ref": "#/definitions/UserProfileResponse"
+              }
+            }
+          },
+          "400": {
+            "description": "BadRequest",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          },
+          "403": {
+            "description": "Forbidden",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          },
+          "404": {
+            "description": "NotFound",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          }
+        },
+        "operationId": "getAppUsers",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "account"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/testers": {
+      "get": {
+        "description": "Returns the testers associated with the app specified with the given app name which belongs to the given owner.",
+        "parameters": [
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "type": "array",
+              "items": {
+                "$ref": "#/definitions/UserProfileResponse"
+              }
+            }
+          },
+          "400": {
+            "description": "BadRequest",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          },
+          "403": {
+            "description": "Forbidden",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          },
+          "404": {
+            "description": "NotFound",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          }
+        },
+        "operationId": "getAppTesters",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "account"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/test_series/{test_series_slug}/test_runs": {
+      "get": {
+        "description": "Returns list of all test runs for a given test series",
+        "operationId": "test_getAllTestRunsForSeries",
+        "parameters": [
+          {
+            "name": "test_series_slug",
+            "type": "string",
+            "in": "path",
+            "description": "The slug of the test series",
+            "required": true
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "type": "array",
+              "items": {
+                "$ref": "#/definitions/TestRun"
+              }
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "test"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/test_series/{test_series_slug}": {
+      "delete": {
+        "description": "Deletes a single test series",
+        "operationId": "test_deleteTestSeries",
+        "parameters": [
+          {
+            "name": "test_series_slug",
+            "type": "string",
+            "in": "path",
+            "description": "The slug of the test series",
+            "required": true
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Test series was successfully removed"
+          },
+          "404": {
+            "description": "The test series was not found"
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "test"
+        ]
+      },
+      "patch": {
+        "description": "Updates name and slug of a test series",
+        "operationId": "test_patchTestSeries",
+        "parameters": [
+          {
+            "name": "test_series_slug",
+            "type": "string",
+            "in": "path",
+            "description": "The slug of the test series",
+            "required": true
+          },
+          {
+            "name": "name",
+            "type": "string",
+            "in": "formData",
+            "description": "New name of the new test series",
+            "required": true
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Test series was successfully patched",
+            "schema": {
+              "$ref": "#/definitions/TestSeries"
+            }
+          },
+          "400": {
+            "description": "The new test series name is incorrect"
+          },
+          "404": {
+            "description": "Test series with the given slug name was not found"
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "test"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/test_series": {
+      "get": {
+        "description": "Returns list of all test series for an application",
+        "operationId": "test_getAllTestSeries",
+        "parameters": [
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "type": "array",
+              "items": {
+                "$ref": "#/definitions/TestSeries"
+              }
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "test"
+        ]
+      },
+      "post": {
+        "description": "Creates new test series for an application",
+        "operationId": "test_createTestSeries",
+        "parameters": [
+          {
+            "name": "name",
+            "type": "string",
+            "in": "formData",
+            "description": "Name of the new test series",
+            "required": true
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "$ref": "#/definitions/TestSeries"
+            }
+          },
+          "400": {
+            "description": "Invalid test series name",
+            "schema": {
+              "$ref": "#/definitions/TestCloudErrorDetails"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "test"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/test_runs/{test_run_id}/state": {
+      "get": {
+        "description": "Gets state of the test run",
+        "operationId": "test_getTestRunState",
+        "parameters": [
+          {
+            "name": "test_run_id",
+            "type": "string",
+            "in": "path",
+            "description": "The ID of the test run",
+            "required": true
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "$ref": "#/definitions/TestRunState"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "test"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/test_runs/{test_run_id}/start": {
+      "post": {
+        "description": "Starts test run",
+        "operationId": "test_startTestRun",
+        "parameters": [
+          {
+            "name": "test_run_id",
+            "type": "string",
+            "in": "path",
+            "description": "The ID of the test run",
+            "required": true
+          },
+          {
+            "name": "startOptions",
+            "schema": {
+              "$ref": "#/definitions/TestCloudStartTestRunOptions"
             },
-            "patch": {
-                "description": "Updates the user profile and returns the updated user data",
-                "parameters": [
-                    {
-                        "name": "user",
-                        "in": "body",
-                        "description": "The data for the created user",
-                        "required": true,
-                        "schema": {
-                            "$ref": "#/definitions/UserUpdateRequest"
-                        }
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/UserProfileResponse"
-                        }
-                    },
-                    "400": {
-                        "description": "BadRequest",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "404": {
-                        "description": "NotFound",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "409": {
-                        "description": "Conflict",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    }
-                },
-                "operationId": "updateUserProfile",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "account"
-                ]
-            }
-        },
-        "/v0.1/orgs/{org_name}/users": {
-            "get": {
-                "description": "Returns a list of users that belong to an organization",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/organization_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "type": "array",
-                            "items": {
-                                "$ref": "#/definitions/OrganizationUserResponse"
-                            }
-                        }
-                    },
-                    "400": {
-                        "description": "BadRequest",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "404": {
-                        "description": "NotFound",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    }
-                },
-                "operationId": "getOrganizationUsers",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "account"
-                ]
-            }
-        },
-        "/v0.1/orgs/{org_name}/invitations/{user_email}": {
-            "post": {
-                "description": "Invites a new or existing user to an organization",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/organization_name"
-                    },
-                    {
-                        "name": "user_email",
-                        "type": "string",
-                        "in": "path",
-                        "description": "The email of the user to invite",
-                        "required": true
-                    }
-                ],
-                "responses": {
-                    "204": {
-                        "description": "Success"
-                    },
-                    "400": {
-                        "description": "BadRequest",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "403": {
-                        "description": "Forbidden",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "404": {
-                        "description": "NotFound",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "409": {
-                        "description": "Conflict",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    }
-                },
-                "operationId": "inviteOrganizationUser",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "account"
-                ]
-            }
-        },
-        "/v0.1/management/crashes/apps/{owner_name}/{app_name}/crashes/{crash_id}/raw": {
-            "get": {
-                "description": "Gets the json of a specific crash",
-                "operationId": "getCrashRaw",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/path_crash_id"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/RawCrashLog"
-                        }
-                    },
-                    "default": {
-                        "description": "Error",
-                        "schema": {
-                            "$ref": "#/definitions/Failure"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "crash"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/xcode_versions": {
-            "get": {
-                "description": "Gets the Xcode versions available to this app",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/XcodeVersions"
-                        }
-                    },
-                    "400": {
-                        "description": "Bad Request",
-                        "schema": {
-                            "$ref": "#/definitions/ValidationErrorResponse"
-                        }
-                    }
-                },
-                "operationId": "build_getXcodeVersions",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "build"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/versions": {
-            "get": {
-                "description": "Gets a list of application versions",
-                "summary": "Gets a list of application versions",
-                "operationId": "getAppVersions",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "type": "array",
-                            "items": {
-                                "$ref": "#/definitions/AppVersion"
-                            }
-                        }
-                    },
-                    "default": {
-                        "description": "Error",
-                        "schema": {
-                            "$ref": "#/definitions/Failure"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "crash"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/users/{user_email}": {
-            "delete": {
-                "description": "Removes the user from the app",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    },
-                    {
-                        "name": "user_email",
-                        "type": "string",
-                        "in": "path",
-                        "description": "The email of the user to invite",
-                        "required": true
-                    }
-                ],
-                "responses": {
-                    "204": {
-                        "description": "Success"
-                    },
-                    "400": {
-                        "description": "BadRequest",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "403": {
-                        "description": "Forbidden",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "404": {
-                        "description": "NotFound",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    }
-                },
-                "operationId": "deleteAppUser",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "account"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/users": {
-            "get": {
-                "description": "Returns the users associated with the app specified with the given app name which belongs to the given owner.",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "type": "array",
-                            "items": {
-                                "$ref": "#/definitions/UserProfileResponse"
-                            }
-                        }
-                    },
-                    "400": {
-                        "description": "BadRequest",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "403": {
-                        "description": "Forbidden",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "404": {
-                        "description": "NotFound",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    }
-                },
-                "operationId": "getAppUsers",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "account"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/testers": {
-            "get": {
-                "description": "Returns the testers associated with the app specified with the given app name which belongs to the given owner.",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "type": "array",
-                            "items": {
-                                "$ref": "#/definitions/UserProfileResponse"
-                            }
-                        }
-                    },
-                    "400": {
-                        "description": "BadRequest",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "403": {
-                        "description": "Forbidden",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "404": {
-                        "description": "NotFound",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    }
-                },
-                "operationId": "getAppTesters",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "account"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/test_series/{test_series_slug}/test_runs": {
-            "get": {
-                "description": "Returns list of all test runs for a given test series",
-                "operationId": "test_getAllTestRunsForSeries",
-                "parameters": [
-                    {
-                        "name": "test_series_slug",
-                        "type": "string",
-                        "in": "path",
-                        "description": "The slug of the test series",
-                        "required": true
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "type": "array",
-                            "items": {
-                                "$ref": "#/definitions/TestRun"
-                            }
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "test"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/test_series/{test_series_slug}": {
-            "delete": {
-                "description": "Deletes a single test series",
-                "operationId": "test_deleteTestSeries",
-                "parameters": [
-                    {
-                        "name": "test_series_slug",
-                        "type": "string",
-                        "in": "path",
-                        "description": "The slug of the test series",
-                        "required": true
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Test series was successfully removed"
-                    },
-                    "404": {
-                        "description": "The test series was not found"
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "test"
-                ]
+            "in": "body",
+            "description": "Option required to start the test run",
+            "required": true
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "$ref": "#/definitions/TestCloudStartTestRunResult"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "test"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/test_runs/{test_run_id}/report": {
+      "get": {
+        "description": "Returns a single test report",
+        "operationId": "test_getTestReport",
+        "parameters": [
+          {
+            "name": "test_run_id",
+            "type": "string",
+            "format": "uuid",
+            "in": "path",
+            "description": "The ID of the test run",
+            "required": true
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "$ref": "#/definitions/TestReport"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "test"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/test_runs/{test_run_id}/hashes/batch": {
+      "post": {
+        "description": "Adds file with the given hash to a test run",
+        "operationId": "test_uploadHashesBatch",
+        "consumes": [
+          "application/json"
+        ],
+        "parameters": [
+          {
+            "name": "test_run_id",
+            "type": "string",
+            "in": "path",
+            "description": "The ID of the test run",
+            "required": true
+          },
+          {
+            "name": "file_info",
+            "schema": {
+              "type": "array",
+              "items": {
+                "$ref": "#/definitions/TestCloudFileHash"
+              }
             },
-            "patch": {
-                "description": "Updates name and slug of a test series",
-                "operationId": "test_patchTestSeries",
-                "parameters": [
-                    {
-                        "name": "test_series_slug",
-                        "type": "string",
-                        "in": "path",
-                        "description": "The slug of the test series",
-                        "required": true
-                    },
-                    {
-                        "name": "name",
-                        "type": "string",
-                        "in": "formData",
-                        "description": "New name of the new test series",
-                        "required": true
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Test series was successfully patched",
-                        "schema": {
-                            "$ref": "#/definitions/TestSeries"
-                        }
-                    },
-                    "400": {
-                        "description": "The new test series name is incorrect"
-                    },
-                    "404": {
-                        "description": "Test series with the given slug name was not found"
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "test"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/test_series": {
-            "get": {
-                "description": "Returns list of all test series for an application",
-                "operationId": "test_getAllTestSeries",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "type": "array",
-                            "items": {
-                                "$ref": "#/definitions/TestSeries"
-                            }
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "test"
-                ]
-            },
-            "post": {
-                "description": "Creates new test series for an application",
-                "operationId": "test_createTestSeries",
-                "parameters": [
-                    {
-                        "name": "name",
-                        "type": "string",
-                        "in": "formData",
-                        "description": "Name of the new test series",
-                        "required": true
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "$ref": "#/definitions/TestSeries"
-                        }
-                    },
-                    "400": {
-                        "description": "Invalid test series name",
-                        "schema": {
-                            "$ref": "#/definitions/TestCloudErrorDetails"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "test"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/test_runs/{test_run_id}/state": {
-            "get": {
-                "description": "Gets state of the test run",
-                "operationId": "test_getTestRunState",
-                "parameters": [
-                    {
-                        "name": "test_run_id",
-                        "type": "string",
-                        "in": "path",
-                        "description": "The ID of the test run",
-                        "required": true
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "$ref": "#/definitions/TestRunState"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "test"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/test_runs/{test_run_id}/start": {
-            "post": {
-                "description": "Starts test run",
-                "operationId": "test_startTestRun",
-                "parameters": [
-                    {
-                        "name": "test_run_id",
-                        "type": "string",
-                        "in": "path",
-                        "description": "The ID of the test run",
-                        "required": true
-                    },
-                    {
-                        "name": "startOptions",
-                        "schema": {
-                            "$ref": "#/definitions/TestCloudStartTestRunOptions"
-                        },
-                        "in": "body",
-                        "description": "Option required to start the test run",
-                        "required": true
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "$ref": "#/definitions/TestCloudStartTestRunResult"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "test"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/test_runs/{test_run_id}/report": {
-            "get": {
-                "description": "Returns a single test report",
-                "operationId": "test_getTestReport",
-                "parameters": [
-                    {
-                        "name": "test_run_id",
-                        "type": "string",
-                        "format": "uuid",
-                        "in": "path",
-                        "description": "The ID of the test run",
-                        "required": true
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "$ref": "#/definitions/TestReport"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "test"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/test_runs/{test_run_id}/hashes/batch": {
-            "post": {
-                "description": "Adds file with the given hash to a test run",
-                "operationId": "test_uploadHashesBatch",
-                "consumes": [
-                    "application/json"
-                ],
-                "parameters": [
-                    {
-                        "name": "test_run_id",
-                        "type": "string",
-                        "in": "path",
-                        "description": "The ID of the test run",
-                        "required": true
-                    },
-                    {
-                        "name": "file_info",
-                        "schema": {
-                            "type": "array",
-                            "items": {
-                                "$ref": "#/definitions/TestCloudFileHash"
-                            }
-                        },
-                        "in": "body",
-                        "description": "File hash information",
-                        "required": true
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "type": "array",
-                            "items": {
-                                "$ref": "#/definitions/TestCloudFileHashResponse"
-                            }
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "test"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/test_runs/{test_run_id}/hashes": {
-            "post": {
-                "description": "Adds file with the given hash to a test run",
-                "operationId": "test_uploadHash",
-                "consumes": [
-                    "application/json"
-                ],
-                "parameters": [
-                    {
-                        "name": "test_run_id",
-                        "type": "string",
-                        "in": "path",
-                        "description": "The ID of the test run",
-                        "required": true
-                    },
-                    {
-                        "name": "file_info",
-                        "schema": {
-                            "$ref": "#/definitions/TestCloudFileHashDeprecated"
-                        },
-                        "in": "body",
-                        "description": "File hash information",
-                        "required": true
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "201": {
-                        "description": "OK"
-                    },
-                    "401": {
-                        "description": "Byte range verification required for given SHA256 hash",
-                        "headers": {
-                            "X-Challenge-Bytes": {
-                                "description": "Byte range required to authenticate the request",
-                                "type": "string"
-                            }
-                        }
-                    },
-                    "412": {
-                        "description": "File with given SHA256 hash doesn't exist and must be uploaded"
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "test"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/test_runs/{test_run_id}/files": {
-            "post": {
-                "description": "Uploads file for a test run",
-                "operationId": "test_startUploadingFile",
-                "consumes": [
-                    "application/json"
-                ],
-                "parameters": [
-                    {
-                        "name": "test_run_id",
-                        "type": "string",
-                        "in": "path",
-                        "description": "The ID of the test run",
-                        "required": true
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "File was created and can be uploaded",
-                        "headers": {
-                            "Location": {
-                                "description": "Relative URL that points to the upload endpoint",
-                                "type": "string"
-                            }
-                        }
-                    },
-                    "400": {
-                        "description": "Bad request"
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "test"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/test_runs/{test_run_id}": {
-            "get": {
-                "description": "Returns a single test runs",
-                "operationId": "test_getTestRun",
-                "parameters": [
-                    {
-                        "name": "test_run_id",
-                        "type": "string",
-                        "format": "uuid",
-                        "in": "path",
-                        "description": "The ID of the test run",
-                        "required": true
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "$ref": "#/definitions/TestRun"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "test"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/test_runs": {
-            "get": {
-                "description": "Returns a list of test runs",
-                "operationId": "test_getTestRuns",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "type": "array",
-                            "items": {
-                                "$ref": "#/definitions/TestRun"
-                            }
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "test"
-                ]
-            },
-            "post": {
-                "description": "Creates a new test run",
-                "operationId": "test_createTestRun",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "201": {
-                        "description": "OK",
-                        "headers": {
-                            "Location": {
-                                "description": "Relative URL that points to the test run",
-                                "type": "string"
-                            }
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "test"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/symbols/{symbol_id}/ignore": {
-            "post": {
-                "description": "Marks a symbol by id (uuid) as ignored",
-                "operationId": "postIgnoreSymbol",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/path_symbol_id"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/Symbol"
-                        }
-                    },
-                    "403": {
-                        "description": "Unauthorized",
-                        "schema": {
-                            "$ref": "#/definitions/Failure"
-                        }
-                    },
-                    "404": {
-                        "description": "Not found",
-                        "schema": {
-                            "$ref": "#/definitions/Failure"
-                        }
-                    },
-                    "500": {
-                        "description": "Internal error",
-                        "schema": {
-                            "$ref": "#/definitions/Failure"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "crash"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/symbols/{symbol_id}": {
-            "get": {
-                "description": "Returns a particular symbol by id (uuid) for the provided application",
-                "operationId": "getSymbol",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/path_symbol_id"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/Symbol"
-                        }
-                    },
-                    "403": {
-                        "description": "Unauthorized",
-                        "schema": {
-                            "$ref": "#/definitions/Failure"
-                        }
-                    },
-                    "404": {
-                        "description": "Not found",
-                        "schema": {
-                            "$ref": "#/definitions/Failure"
-                        }
-                    },
-                    "500": {
-                        "description": "Internal error",
-                        "schema": {
-                            "$ref": "#/definitions/Failure"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "crash"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/symbols": {
-            "get": {
-                "description": "Returns the list of all symbols for the provided application",
-                "operationId": "getSymbols",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/Symbols"
-                        }
-                    },
-                    "403": {
-                        "description": "Unauthorized",
-                        "schema": {
-                            "$ref": "#/definitions/Failure"
-                        }
-                    },
-                    "500": {
-                        "description": "Internal error",
-                        "schema": {
-                            "$ref": "#/definitions/Failure"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "crash"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/symbol_uploads/{symbol_upload_id}": {
-            "get": {
-                "description": "Gets a symbol upload by id for the specified application",
-                "operationId": "getSymbolUpload",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/path_symbol_upload_id"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/SymbolUpload"
-                        }
-                    },
-                    "403": {
-                        "description": "Unauthorized",
-                        "schema": {
-                            "$ref": "#/definitions/Failure"
-                        }
-                    },
-                    "404": {
-                        "description": "Not found",
-                        "schema": {
-                            "$ref": "#/definitions/Failure"
-                        }
-                    },
-                    "500": {
-                        "description": "Internal error",
-                        "schema": {
-                            "$ref": "#/definitions/Failure"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "crash"
-                ]
-            },
-            "patch": {
-                "description": "Commits or aborts the symbol upload process for a new set of symbols for the specified application",
-                "operationId": "patchSymbolUpload",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/path_symbol_upload_id"
-                    },
-                    {
-                        "name": "body",
-                        "in": "body",
-                        "description": "The symbol information",
-                        "required": true,
-                        "schema": {
-                            "$ref": "#/definitions/SymbolUploadEndRequest"
-                        }
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/SymbolUpload"
-                        }
-                    },
-                    "400": {
-                        "description": "Bad request",
-                        "schema": {
-                            "$ref": "#/definitions/Failure"
-                        }
-                    },
-                    "403": {
-                        "description": "Unauthorized",
-                        "schema": {
-                            "$ref": "#/definitions/Failure"
-                        }
-                    },
-                    "500": {
-                        "description": "Internal error",
-                        "schema": {
-                            "$ref": "#/definitions/Failure"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "crash"
-                ]
-            },
-            "delete": {
-                "description": "Deletes a symbol upload by id for the specified application",
-                "operationId": "deleteSymbolUpload",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/path_symbol_upload_id"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/SymbolUpload"
-                        }
-                    },
-                    "403": {
-                        "description": "Unauthorized",
-                        "schema": {
-                            "$ref": "#/definitions/Failure"
-                        }
-                    },
-                    "404": {
-                        "description": "Not found",
-                        "schema": {
-                            "$ref": "#/definitions/Failure"
-                        }
-                    },
-                    "500": {
-                        "description": "Internal error",
-                        "schema": {
-                            "$ref": "#/definitions/Failure"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "crash"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/symbol_uploads": {
-            "get": {
-                "description": "Gets a list of all uploads for the specified application",
-                "operationId": "getSymbolUploads",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/SymbolUploads"
-                        }
-                    },
-                    "403": {
-                        "description": "Unauthorized",
-                        "schema": {
-                            "$ref": "#/definitions/Failure"
-                        }
-                    },
-                    "500": {
-                        "description": "Internal error",
-                        "schema": {
-                            "$ref": "#/definitions/Failure"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "crash"
-                ]
-            },
-            "post": {
-                "description": "Begins the symbol upload process for a new set of symbols for the specified application",
-                "operationId": "postSymbolUpload",
-                "parameters": [
-                    {
-                        "name": "body",
-                        "in": "body",
-                        "description": "The symbol information",
-                        "required": true,
-                        "schema": {
-                            "$ref": "#/definitions/SymbolUploadBeginRequest"
-                        }
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/SymbolUploadBeginResponse"
-                        }
-                    },
-                    "400": {
-                        "description": "Bad request",
-                        "schema": {
-                            "$ref": "#/definitions/Failure"
-                        }
-                    },
-                    "403": {
-                        "description": "Unauthorized",
-                        "schema": {
-                            "$ref": "#/definitions/Failure"
-                        }
-                    },
-                    "500": {
-                        "description": "Internal error",
-                        "schema": {
-                            "$ref": "#/definitions/Failure"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "crash"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/subscriptions/{subscription_id}/tables/{tableName}/data/{id}": {
-            "get": {
-                "parameters": [
-                    {
-                        "name": "subscription_id",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "name": "tableName",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "name": "id",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "type": "object"
-                        }
-                    },
-                    "400": {
-                        "description": "Invalid request",
-                        "schema": {
-                            "type": "object"
-                        }
-                    }
-                },
-                "operationId": "tables_getTableRow",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "data"
-                ]
-            },
-            "delete": {
-                "parameters": [
-                    {
-                        "name": "subscription_id",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "name": "tableName",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "name": "id",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "name": "permanent",
-                        "in": "query",
-                        "required": false,
-                        "type": "boolean"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "type": "object"
-                        }
-                    },
-                    "400": {
-                        "description": "Invalid request",
-                        "schema": {
-                            "type": "object"
-                        }
-                    }
-                },
-                "operationId": "tables_deleteTableRow",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "data"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/subscriptions/{subscription_id}/tables/{tableName}/data": {
-            "get": {
-                "parameters": [
-                    {
-                        "name": "subscription_id",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "name": "tableName",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "name": "skip",
-                        "in": "query",
-                        "required": false,
-                        "type": "integer",
-                        "format": "int32"
-                    },
-                    {
-                        "name": "take",
-                        "in": "query",
-                        "required": false,
-                        "type": "integer",
-                        "format": "int32"
-                    },
-                    {
-                        "name": "sort",
-                        "in": "query",
-                        "required": false,
-                        "type": "string"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "type": "object"
-                        }
-                    },
-                    "400": {
-                        "description": "Invalid request",
-                        "schema": {
-                            "type": "object"
-                        }
-                    }
-                },
-                "operationId": "tables_getTableData",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "data"
-                ]
-            },
-            "post": {
-                "parameters": [
-                    {
-                        "name": "subscription_id",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "name": "tableName",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "name": "import",
-                        "in": "body",
-                        "required": true,
-                        "schema": {
-                            "$ref": "#/definitions/ImportDataContainer"
-                        }
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "type": "object"
-                        }
-                    },
-                    "400": {
-                        "description": "Invalid request",
-                        "schema": {
-                            "type": "object"
-                        }
-                    }
-                },
-                "operationId": "tables_importTableData",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "data"
-                ]
+            "in": "body",
+            "description": "File hash information",
+            "required": true
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "type": "array",
+              "items": {
+                "$ref": "#/definitions/TestCloudFileHashResponse"
+              }
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "test"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/test_runs/{test_run_id}/hashes": {
+      "post": {
+        "description": "Adds file with the given hash to a test run",
+        "operationId": "test_uploadHash",
+        "consumes": [
+          "application/json"
+        ],
+        "parameters": [
+          {
+            "name": "test_run_id",
+            "type": "string",
+            "in": "path",
+            "description": "The ID of the test run",
+            "required": true
+          },
+          {
+            "name": "file_info",
+            "schema": {
+              "$ref": "#/definitions/TestCloudFileHashDeprecated"
             },
-            "delete": {
-                "parameters": [
-                    {
-                        "name": "subscription_id",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "name": "tableName",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "type": "object"
-                        }
-                    },
-                    "400": {
-                        "description": "Invalid request",
-                        "schema": {
-                            "type": "object"
-                        }
-                    }
-                },
-                "operationId": "tables_clearTableData",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "data"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/subscriptions/{subscription_id}/tables/{tableName}/columns/{columnName}": {
-            "get": {
-                "parameters": [
-                    {
-                        "name": "subscription_id",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "name": "tableName",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "name": "columnName",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "type": "object"
-                        }
-                    },
-                    "400": {
-                        "description": "Invalid request",
-                        "schema": {
-                            "type": "object"
-                        }
-                    }
-                },
-                "operationId": "tables_getColumn",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "data"
-                ]
-            },
-            "put": {
-                "parameters": [
-                    {
-                        "name": "subscription_id",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "name": "tableName",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "name": "columnName",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "name": "column",
-                        "in": "body",
-                        "required": true,
-                        "schema": {
-                            "$ref": "#/definitions/TableColumn"
-                        }
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "type": "object"
-                        }
-                    },
-                    "400": {
-                        "description": "Invalid request",
-                        "schema": {
-                            "type": "object"
-                        }
-                    }
-                },
-                "operationId": "tables_updateColumn",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "data"
-                ]
-            },
-            "delete": {
-                "parameters": [
-                    {
-                        "name": "subscription_id",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "name": "tableName",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "name": "columnName",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "type": "object"
-                        }
-                    },
-                    "400": {
-                        "description": "Invalid request",
-                        "schema": {
-                            "type": "object"
-                        }
-                    }
-                },
-                "operationId": "tables_deleteColumn",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "data"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/subscriptions/{subscription_id}/tables/{tableName}/columns": {
-            "get": {
-                "parameters": [
-                    {
-                        "name": "subscription_id",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "name": "tableName",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "type": "object"
-                        }
-                    },
-                    "400": {
-                        "description": "Invalid request",
-                        "schema": {
-                            "type": "object"
-                        }
-                    }
-                },
-                "operationId": "tables_getColumnList",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "data"
-                ]
-            },
-            "post": {
-                "parameters": [
-                    {
-                        "name": "subscription_id",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "name": "tableName",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "name": "column",
-                        "in": "body",
-                        "required": true,
-                        "schema": {
-                            "$ref": "#/definitions/TableColumn"
-                        }
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "type": "object"
-                        }
-                    },
-                    "400": {
-                        "description": "Invalid request",
-                        "schema": {
-                            "type": "object"
-                        }
-                    }
-                },
-                "operationId": "tables_updateColumnList",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "data"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/subscriptions/{subscription_id}/tables/{tableName}": {
-            "get": {
-                "parameters": [
-                    {
-                        "name": "subscription_id",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "name": "tableName",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "type": "object"
-                        }
-                    },
-                    "400": {
-                        "description": "Invalid request",
-                        "schema": {
-                            "type": "object"
-                        }
-                    }
-                },
-                "operationId": "tables_getTable",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "data"
-                ]
-            },
-            "put": {
-                "parameters": [
-                    {
-                        "name": "subscription_id",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "name": "tableName",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "name": "table",
-                        "in": "body",
-                        "required": true,
-                        "schema": {
-                            "$ref": "#/definitions/Table"
-                        }
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "type": "object"
-                        }
-                    },
-                    "400": {
-                        "description": "Invalid request",
-                        "schema": {
-                            "type": "object"
-                        }
-                    }
-                },
-                "operationId": "tables_updateTable",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "data"
-                ]
-            },
-            "delete": {
-                "parameters": [
-                    {
-                        "name": "subscription_id",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "name": "tableName",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "type": "object"
-                        }
-                    },
-                    "400": {
-                        "description": "Invalid request",
-                        "schema": {
-                            "type": "object"
-                        }
-                    }
-                },
-                "operationId": "tables_deleteTable",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "data"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/subscriptions/{subscription_id}/tables": {
-            "get": {
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "type": "object"
-                        }
-                    },
-                    "400": {
-                        "description": "Invalid request",
-                        "schema": {
-                            "type": "object"
-                        }
-                    }
-                },
-                "parameters": [
-                    {
-                        "name": "subscription_id",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "operationId": "tables_getTableList",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "data"
-                ]
-            },
-            "post": {
-                "parameters": [
-                    {
-                        "name": "subscription_id",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "name": "table",
-                        "in": "body",
-                        "required": true,
-                        "schema": {
-                            "$ref": "#/definitions/Table"
-                        }
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "type": "object"
-                        }
-                    },
-                    "400": {
-                        "description": "Invalid request",
-                        "schema": {
-                            "type": "object"
-                        }
-                    }
-                },
-                "operationId": "tables_createTable",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "data"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/subscriptions/{subscription_id}/resourceGroups": {
-            "delete": {
-                "parameters": [
-                    {
-                        "name": "subscription_id",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "type": "object"
-                        }
-                    },
-                    "400": {
-                        "description": "Invalid request",
-                        "schema": {
-                            "type": "object"
-                        }
-                    }
-                },
-                "operationId": "azure_deleteResourceGroup",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "data"
-                ]
-            },
-            "get": {
-                "parameters": [
-                    {
-                        "name": "subscription_id",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "type": "object"
-                        }
-                    },
-                    "400": {
-                        "description": "Invalid request",
-                        "schema": {
-                            "type": "object"
-                        }
-                    }
-                },
-                "operationId": "azure_getResourceGroup",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "data"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/subscriptions/{subscription_id}/push/keys": {
-            "get": {
-                "parameters": [
-                    {
-                        "name": "subscription_id",
-                        "type": "string",
-                        "in": "path",
-                        "required": true
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "type": "object"
-                        }
-                    },
-                    "400": {
-                        "description": "OK",
-                        "schema": {
-                            "type": "object"
-                        }
-                    }
-                },
-                "operationId": "push_getKeys",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "data"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/subscriptions/{subscription_id}/push/config": {
-            "get": {
-                "parameters": [
-                    {
-                        "name": "subscription_id",
-                        "type": "string",
-                        "in": "path",
-                        "required": true
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "type": "object"
-                        }
-                    },
-                    "400": {
-                        "description": "Invalid request",
-                        "schema": {
-                            "type": "object"
-                        }
-                    }
-                },
-                "operationId": "push_getConfiguration",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "data"
-                ]
-            },
-            "post": {
-                "parameters": [
-                    {
-                        "name": "subscription_id",
-                        "type": "string",
-                        "in": "path",
-                        "required": true
-                    },
-                    {
-                        "name": "hubDescription",
-                        "in": "body",
-                        "required": true,
-                        "schema": {
-                            "$ref": "#/definitions/PushConfig"
-                        }
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "type": "object"
-                        }
-                    },
-                    "400": {
-                        "description": "Invalid request",
-                        "schema": {
-                            "type": "object"
-                        }
-                    }
-                },
-                "operationId": "push_setConfiguration",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "data"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/subscriptions/{subscription_id}/push": {
-            "get": {
-                "parameters": [
-                    {
-                        "name": "subscription_id",
-                        "type": "string",
-                        "in": "path",
-                        "required": true
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "type": "object"
-                        }
-                    },
-                    "400": {
-                        "description": "Invalid request",
-                        "schema": {
-                            "type": "object"
-                        }
-                    }
-                },
-                "operationId": "push_getNotificationHub",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "data"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/subscriptions/{subscription_id}/ping/": {
-            "get": {
-                "parameters": [
-                    {
-                        "name": "subscription_id",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "type": "object"
-                        }
-                    },
-                    "400": {
-                        "description": "Invalid request",
-                        "schema": {
-                            "type": "object"
-                        }
-                    }
-                },
-                "operationId": "azure_ping",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "data"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/subscriptions/{subscription_id}/identity": {
-            "get": {
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "type": "object"
-                        }
-                    },
-                    "400": {
-                        "description": "Invalid request",
-                        "schema": {
-                            "type": "object"
-                        }
-                    }
-                },
-                "parameters": [
-                    {
-                        "name": "subscription_id",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "operationId": "identity_getConfiguration",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "data"
-                ]
-            },
-            "post": {
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "type": "object"
-                        }
-                    },
-                    "400": {
-                        "description": "Invalid request",
-                        "schema": {
-                            "type": "object"
-                        }
-                    }
-                },
-                "parameters": [
-                    {
-                        "name": "subscription_id",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "operationId": "identity_setConfiguration",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "data"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/subscriptions/{subscription_id}/deployments/{type}/operations": {
-            "get": {
-                "parameters": [
-                    {
-                        "name": "subscription_id",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "name": "type",
-                        "in": "path",
-                        "required": true,
-                        "type": "string",
-                        "enum": [
-                            "appsvc",
-                            "push"
-                        ]
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "type": "object"
-                        }
-                    },
-                    "400": {
-                        "description": "Invalid request",
-                        "schema": {
-                            "type": "object"
-                        }
-                    }
-                },
-                "operationId": "azure_getDeploymentOperations",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "data"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/subscriptions/{subscription_id}/deployments/{type}/": {
-            "post": {
-                "parameters": [
-                    {
-                        "name": "subscription_id",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "name": "type",
-                        "in": "path",
-                        "required": true,
-                        "type": "string",
-                        "enum": [
-                            "appsvc",
-                            "push"
-                        ]
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "type": "object"
-                        }
-                    },
-                    "400": {
-                        "description": "Invalid request",
-                        "schema": {
-                            "type": "object"
-                        }
-                    }
-                },
-                "operationId": "azure_submitDeployment",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "data"
-                ]
-            },
-            "get": {
-                "parameters": [
-                    {
-                        "name": "subscription_id",
-                        "in": "path",
-                        "required": true,
-                        "type": "string"
-                    },
-                    {
-                        "name": "type",
-                        "in": "path",
-                        "required": true,
-                        "type": "string",
-                        "enum": [
-                            "appsvc",
-                            "push"
-                        ]
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "type": "object"
-                        }
-                    },
-                    "400": {
-                        "description": "Invalid request",
-                        "schema": {
-                            "type": "object"
-                        }
-                    }
-                },
-                "operationId": "azure_getDeployment",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "data"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/subscriptions": {
-            "get": {
-                "description": "Get information about the currently active subscriptions, if any",
-                "operationId": "test_getSubscriptions",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "$ref": "#/definitions/Subscription"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "test"
-                ]
-            },
-            "post": {
-                "description": "Accept a free trial subscription",
-                "operationId": "test_createSubscription",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "201": {
-                        "description": "OK",
-                        "schema": {
-                            "$ref": "#/definitions/Subscription"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "test"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/source_hosts/{source_host}/repositories": {
-            "get": {
-                "description": "Gets the repositories available from the source code host",
-                "parameters": [
-                    {
-                        "name": "source_host",
-                        "type": "string",
-                        "in": "path",
-                        "description": "The source host",
-                        "required": true,
-                        "enum": [
-                            "github"
-                        ]
-                    },
-                    {
-                        "$ref": "#/parameters/form"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/SourceRepositories"
-                        }
-                    },
-                    "400": {
-                        "description": "Bad Request",
-                        "schema": {
-                            "$ref": "#/definitions/ValidationErrorResponse"
-                        }
-                    }
-                },
-                "operationId": "build_getRepositories",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "build"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/repo_config": {
-            "get": {
-                "description": "Returns the repository build configuration status of the app",
-                "parameters": [
-                    {
-                        "name": "includeInactive",
-                        "type": "boolean",
-                        "in": "query",
-                        "description": "Include inactive configurations if none are active",
-                        "required": false
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "List of repository configurations",
-                        "schema": {
-                            "$ref": "#/definitions/RepoConfigs"
-                        }
-                    },
-                    "400": {
-                        "description": "Bad Request",
-                        "schema": {
-                            "$ref": "#/definitions/ValidationErrorResponse"
-                        }
-                    }
-                },
-                "operationId": "build_getRepositoryConfiguration",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "build"
-                ]
-            },
-            "post": {
-                "description": "Configures the repository for build",
-                "parameters": [
-                    {
-                        "name": "repo",
-                        "in": "body",
-                        "description": "The repository information",
-                        "required": true,
-                        "schema": {
-                            "$ref": "#/definitions/RepoInfo"
-                        }
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/SuccessResponse"
-                        }
-                    },
-                    "400": {
-                        "description": "Bad Request",
-                        "schema": {
-                            "$ref": "#/definitions/ValidationErrorResponse"
-                        }
-                    }
-                },
-                "operationId": "build_createRepositoryConfiguration",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "build"
-                ]
-            },
-            "delete": {
-                "description": "Removes the configuration for the respository",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/SuccessResponse"
-                        }
-                    },
-                    "400": {
-                        "description": "Bad Request",
-                        "schema": {
-                            "$ref": "#/definitions/ValidationErrorResponse"
-                        }
-                    }
-                },
-                "operationId": "build_deleteRepositoryConfiguration",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "build"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/releases/{release_id}": {
-            "get": {
-                "description": "Get a release with id `release_id`. if `release_id` is `latest`, return the latest release that was distributed to the current user (from all the distribution groups).",
-                "operationId": "getReleaseOrLatestRelease",
-                "parameters": [
-                    {
-                        "name": "release_id",
-                        "type": "string",
-                        "in": "path",
-                        "description": "The ID of the release, or `latest` to get the latest release from all the distribution groups assigned to the current user.",
-                        "required": true
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/ReleaseDetails"
-                        }
-                    },
-                    "400": {
-                        "description": "<b>bad_request</b>: `release_id` is not a number or the string `latest`.\n",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorDetails"
-                        }
-                    },
-                    "404": {
-                        "description": "<b>not_found</b> - A release or an app can't be found.\n",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorDetails"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "distribute"
-                ]
-            },
-            "patch": {
-                "description": "Updates a release.",
-                "parameters": [
-                    {
-                        "name": "release_id",
-                        "type": "number",
-                        "in": "path",
-                        "description": "The ID of the release",
-                        "required": true
-                    },
-                    {
-                        "name": "body",
-                        "in": "body",
-                        "description": "The release information.",
-                        "required": true,
-                        "schema": {
-                            "$ref": "#/definitions/ReleaseUpdateRequest"
-                        }
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/ReleaseDetails"
-                        }
-                    },
-                    "400": {
-                        "description": "<b>not_supported</b>: Trying to change a distribution group. Currently this operation is not supported.   \n",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorDetails"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "distribute"
-                ]
-            },
-            "delete": {
-                "description": "Deletes a release.",
-                "parameters": [
-                    {
-                        "name": "release_id",
-                        "type": "string",
-                        "in": "path",
-                        "description": "The ID of the release",
-                        "required": true
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success"
-                    },
-                    "404": {
-                        "description": "<b>not_found</b>: An app or a release couldn't be found\n",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorDetails"
-                        }
-                    },
-                    "500": {
-                        "description": "An internal error. Delete can partially fail. If that happens partially_deleted error_code is returned.<br>\n<b>partially_deleted</b>: Release was removed from all distribution groups, but couldn't be deleted from Mobile Center.\n",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorDetails"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "distribute"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/releases": {
-            "get": {
-                "description": "Return detailed information about releases.",
-                "parameters": [
-                    {
-                        "name": "published_only",
-                        "type": "boolean",
-                        "in": "query",
-                        "description": "when true, filters out releases that were uplaoded but were never distributed. Releases that under deleted distribution groups will not be filtered out.",
-                        "required": false
-                    },
-                    {
-                        "name": "$filter",
-                        "type": "string",
-                        "in": "query",
-                        "description": "OBSOLETE. Will be removed in next version. An OData style filter. Currently only support the 'eq' comparision type. E.g. ?$filter=status eq 'Available'",
-                        "required": false
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "type": "array",
-                            "items": {
-                                "$ref": "#/definitions/ReleaseDetails"
-                            }
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "distribute"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/release_uploads/{upload_id}": {
-            "patch": {
-                "description": "Commits or aborts the upload process for a release for the specified application",
-                "parameters": [
-                    {
-                        "name": "upload_id",
-                        "type": "string",
-                        "in": "path",
-                        "description": "The ID of the upload",
-                        "required": true
-                    },
-                    {
-                        "name": "body",
-                        "in": "body",
-                        "description": "The release information",
-                        "required": true,
-                        "schema": {
-                            "$ref": "#/definitions/ReleaseUploadEndRequest"
-                        }
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/ReleaseUploadEndResponse"
-                        }
-                    },
-                    "400": {
-                        "description": "Unknown upload_id or status was committed but the upload hasn't finished."
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "distribute"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/release_uploads": {
-            "post": {
-                "description": "Begins the upload process for a new release for the specified application.",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "201": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/ReleaseUploadBeginResponse"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "distribute"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/recent_releases": {
-            "get": {
-                "description": "Get the latest release from every distribution group associated with an application.",
-                "operationId": "getLatestReleases",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "type": "array",
-                            "items": {
-                                "$ref": "#/definitions/BasicReleaseDetails"
-                            }
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "distribute"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/recent_packages": {
-            "get": {
-                "deprecated": true,
-                "description": "Get the latest package from every distribution group associated with an application.",
-                "operationId": "getLatestPackages",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "type": "array",
-                            "items": {
-                                "$ref": "#/definitions/BasicPackageDetails"
-                            }
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "distribute"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/packages/{package_id}": {
-            "get": {
-                "deprecated": true,
-                "description": "Get a package with id 'package_id'. if 'package_id' is 'latest', return the latest package that was distributed to the current user (from all the distribution groups).",
-                "operationId": "getPackageOrLatestPackage",
-                "parameters": [
-                    {
-                        "name": "package_id",
-                        "type": "string",
-                        "in": "path",
-                        "description": "The ID of the package, or 'latest' to get the latest package from all the distribution groups assigned to the current user.",
-                        "required": true
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/PackageDetails"
-                        }
-                    },
-                    "400": {
-                        "description": "<b>bad_request</b>: 'package_id' is not a number or the string \"latest\".\n",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorDetails"
-                        }
-                    },
-                    "404": {
-                        "description": "<b>not_found</b> - A package or an app can't be found.\n",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorDetails"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "distribute"
-                ]
-            },
-            "patch": {
-                "deprecated": true,
-                "description": "Updates a package.",
-                "parameters": [
-                    {
-                        "name": "package_id",
-                        "type": "number",
-                        "in": "path",
-                        "description": "The ID of the package",
-                        "required": true
-                    },
-                    {
-                        "name": "body",
-                        "in": "body",
-                        "description": "The package information.",
-                        "required": true,
-                        "schema": {
-                            "$ref": "#/definitions/PackageUpdateRequest"
-                        }
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/PackageDetails"
-                        }
-                    },
-                    "400": {
-                        "description": "<b>not_supported</b>: Trying to change a distribution group. Currently this operation is not supported.   \n",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorDetails"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "distribute"
-                ]
-            },
-            "delete": {
-                "deprecated": true,
-                "description": "Deletes a package.",
-                "parameters": [
-                    {
-                        "name": "package_id",
-                        "type": "string",
-                        "in": "path",
-                        "description": "The ID of the package",
-                        "required": true
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success"
-                    },
-                    "404": {
-                        "description": "<b>not_found</b>: An app or a package couldn't be found\n",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorDetails"
-                        }
-                    },
-                    "500": {
-                        "description": "An internal error. Delete can partially fail. If that happens partially_deleted error_code is returned.<br>\n<b>partially_deleted</b>: Package was removed from all distribution groups, but couldn't be deleted from Mobile Center.\n",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorDetails"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "distribute"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/packages": {
-            "get": {
-                "deprecated": true,
-                "description": "Return detailed information about packages.",
-                "parameters": [
-                    {
-                        "name": "published_only",
-                        "type": "boolean",
-                        "in": "query",
-                        "description": "when true, filters out packages that were uplaoded but were never distributed. Packages that under deleted distribution groups will not be filtered out.",
-                        "required": false
-                    },
-                    {
-                        "name": "$filter",
-                        "type": "string",
-                        "in": "query",
-                        "description": "OBSOLETE. Will be removed in next version. An OData style filter. Currently only support the 'eq' comparision type. E.g. ?$filter=status eq 'Available'",
-                        "required": false
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "type": "array",
-                            "items": {
-                                "$ref": "#/definitions/PackageDetails"
-                            }
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "distribute"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/package_uploads/{upload_id}": {
-            "patch": {
-                "deprecated": true,
-                "description": "Commits or aborts the upload process for a package for the specified application",
-                "parameters": [
-                    {
-                        "name": "upload_id",
-                        "type": "string",
-                        "in": "path",
-                        "description": "The ID of the upload",
-                        "required": true
-                    },
-                    {
-                        "name": "body",
-                        "in": "body",
-                        "description": "The package information",
-                        "required": true,
-                        "schema": {
-                            "$ref": "#/definitions/PackageUploadEndRequest"
-                        }
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/PackageUploadEndResponse"
-                        }
-                    },
-                    "400": {
-                        "description": "1. error code - release_not_uploaded - Release hasn't finished uploading or upload hasn't started or upload has failed. <br>  \n2. error code - no_upload_resource - upload_id is not recognized. An Upload resource should be created first. <br>\n"
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "distribute"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/package_uploads": {
-            "post": {
-                "deprecated": true,
-                "description": "Begins the upload process for a new package for the specified application",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "201": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/PackageUploadBeginResponse"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "distribute"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/invitations/{user_email}": {
-            "post": {
-                "description": "Invites a new or existing user to an app",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    },
-                    {
-                        "name": "user_email",
-                        "type": "string",
-                        "in": "path",
-                        "description": "The email of the user to invite",
-                        "required": true
-                    }
-                ],
-                "responses": {
-                    "204": {
-                        "description": "Success"
-                    },
-                    "400": {
-                        "description": "BadRequest",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "403": {
-                        "description": "Forbidden",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "404": {
-                        "description": "NotFound",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "409": {
-                        "description": "Conflict",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    }
-                },
-                "operationId": "inviteAppUser",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "account"
-                ]
-            },
-            "delete": {
-                "description": "Removes a user's invitation to an app",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    },
-                    {
-                        "name": "user_email",
-                        "type": "string",
-                        "in": "path",
-                        "description": "The email of the user to invite",
-                        "required": true
-                    }
-                ],
-                "responses": {
-                    "204": {
-                        "description": "Success"
-                    },
-                    "400": {
-                        "description": "BadRequest",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "403": {
-                        "description": "Forbidden",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "404": {
-                        "description": "NotFound",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    }
-                },
-                "operationId": "deleteAppInvitation",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "account"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/invitations": {
-            "get": {
-                "description": "Gets the pending invitations for the app",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/AppInvitationDetailResponse"
-                        }
-                    },
-                    "403": {
-                        "description": "Forbidden",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "404": {
-                        "description": "NotFound",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    }
-                },
-                "operationId": "getAppInvitations",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "account"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}/releases/{release_id}": {
-            "get": {
-                "operationId": "getLatestReleaseForDistributionGroup",
-                "description": "Return detailed information about a distributed release in a given distribution group.",
-                "parameters": [
-                    {
-                        "name": "distribution_group_name",
-                        "type": "string",
-                        "in": "path",
-                        "description": "The name of the distribution group.",
-                        "required": true
-                    },
-                    {
-                        "name": "release_id",
-                        "type": "string",
-                        "in": "path",
-                        "description": "Must be `latest`, a specific `release_id` is not supported at this time.",
-                        "required": true
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/ReleaseDetails"
-                        }
-                    },
-                    "404": {
-                        "description": "1. error code - not_found - Distribution group or the app doesn't exist.<br>  \n2. error code - no_releases_for_app - App has no releases.\n",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorDetails"
-                        }
-                    },
-                    "501": {
-                        "description": "<b>not_implemented</b> - Cannot request a specific release_id.\n",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorDetails"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "distribute"
-                ]
-            },
-            "delete": {
-                "operationId": "deleteReleaseForDistributionGroup",
-                "description": "Deletes a release with id 'release_id' in a given distribution group.",
-                "parameters": [
-                    {
-                        "name": "distribution_group_name",
-                        "type": "string",
-                        "in": "path",
-                        "description": "The name of the distribution group.",
-                        "required": true
-                    },
-                    {
-                        "name": "release_id",
-                        "type": "string",
-                        "in": "path",
-                        "description": "The ID identifying the unique release.",
-                        "required": true
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/ReleaseDeleteResponse"
-                        }
-                    },
-                    "404": {
-                        "description": "1. error code - distribution_group_not_found - Distribution group or the app doesn't exist.<br>  \n2. error code - not_found - Not found.\n",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorDetails"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "distribute"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}/releases": {
-            "get": {
-                "operationId": "getReleasesForDistributionGroup",
-                "description": "Return detailed information about distributed releases in a given distribution group.",
-                "parameters": [
-                    {
-                        "name": "distribution_group_name",
-                        "type": "string",
-                        "in": "path",
-                        "description": "The name of the distribution group.",
-                        "required": true
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "type": "array",
-                            "items": {
-                                "$ref": "#/definitions/ReleaseDetails"
-                            }
-                        }
-                    },
-                    "404": {
-                        "description": "<b>not_found</b>: A distribution group can't be found.\n",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorDetails"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "distribute"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}/packages/{package_id}": {
-            "get": {
-                "deprecated": true,
-                "operationId": "getLatestPackageForDistributionGroup",
-                "description": "Return detailed information about a distributed package in a given distribution group.",
-                "parameters": [
-                    {
-                        "name": "distribution_group_name",
-                        "type": "string",
-                        "in": "path",
-                        "description": "The name of the distribution group.",
-                        "required": true
-                    },
-                    {
-                        "name": "package_id",
-                        "type": "string",
-                        "in": "path",
-                        "description": "For GET calls, this must be 'latest', specific package_id's are not supported at this time.",
-                        "required": true
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/PackageDetails"
-                        }
-                    },
-                    "404": {
-                        "description": "1. error code - not_found - Distribution group or the app doesn't exist.<br>  \n2. error code - no_packages_for_app - App has no packages.\n",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorDetails"
-                        }
-                    },
-                    "501": {
-                        "description": "<b>not_implemented</b> - Cannot request a specific package_id.\n",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorDetails"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "distribute"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}/packages": {
-            "get": {
-                "deprecated": true,
-                "operationId": "getPackagesForDistributionGroup",
-                "description": "Return detailed information about distributed packages in a given distribution group.",
-                "parameters": [
-                    {
-                        "name": "distribution_group_name",
-                        "type": "string",
-                        "in": "path",
-                        "description": "The name of the distribution group.",
-                        "required": true
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "type": "array",
-                            "items": {
-                                "$ref": "#/definitions/PackageDetails"
-                            }
-                        }
-                    },
-                    "404": {
-                        "description": "<b>not_found</b>: A distribution group can't be found.\n",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorDetails"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "distribute"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}/members": {
-            "get": {
-                "description": "Returns a list of member details in the distribution group specified",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    },
-                    {
-                        "name": "distribution_group_name",
-                        "type": "string",
-                        "in": "path",
-                        "description": "The name of the distribution group",
-                        "required": true
-                    },
-                    {
-                        "name": "exclude_pending_invitations",
-                        "type": "boolean",
-                        "in": "query",
-                        "description": "Whether to exclude pending invitations in the response",
-                        "required": false
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "type": "array",
-                            "items": {
-                                "$ref": "#/definitions/DistributionGroupUserGetResponse"
-                            }
-                        }
-                    },
-                    "403": {
-                        "description": "Forbidden",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "404": {
-                        "description": "NotFound",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    }
-                },
-                "operationId": "getDistributionGroupUsers",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "account"
-                ]
-            },
-            "post": {
-                "description": "Adds the members to the specified distribution group",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    },
-                    {
-                        "name": "distribution_group_name",
-                        "type": "string",
-                        "in": "path",
-                        "description": "The name of the distribution group",
-                        "required": true
-                    },
-                    {
-                        "name": "members",
-                        "in": "body",
-                        "description": "The list of members to add",
-                        "required": true,
-                        "schema": {
-                            "$ref": "#/definitions/DistributionGroupUserRequest"
-                        }
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "schema": {
-                            "type": "array",
-                            "items": {
-                                "$ref": "#/definitions/DistributionGroupUserPostResponse"
-                            }
-                        },
-                        "description": "Success"
-                    },
-                    "400": {
-                        "description": "BadRequest",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "403": {
-                        "description": "Forbidden",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "404": {
-                        "description": "NotFound",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    }
-                },
-                "operationId": "createDistributionGroupUsers",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "account"
-                ]
-            },
-            "delete": {
-                "description": "Remove the users from the distribution group",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    },
-                    {
-                        "name": "distribution_group_name",
-                        "type": "string",
-                        "in": "path",
-                        "description": "The name of the distribution group",
-                        "required": true
-                    },
-                    {
-                        "name": "members",
-                        "in": "body",
-                        "description": "The list of members to add",
-                        "required": true,
-                        "schema": {
-                            "$ref": "#/definitions/DistributionGroupUserRequest"
-                        }
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "schema": {
-                            "$ref": "#/definitions/DistributionGroupUserDeleteResponse"
-                        },
-                        "description": "Success"
-                    },
-                    "400": {
-                        "description": "BadRequest",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "403": {
-                        "description": "Forbidden",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "404": {
-                        "description": "NotFound",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    }
-                },
-                "operationId": "deleteDistributionGroupUsers",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "account"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}": {
-            "get": {
-                "description": "Returns a single distribution group for a given distribution group name",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    },
-                    {
-                        "name": "distribution_group_name",
-                        "type": "string",
-                        "in": "path",
-                        "description": "The name of the distribution group",
-                        "required": true
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/DistributionGroupResponse"
-                        }
-                    },
-                    "400": {
-                        "description": "BadRequest",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "403": {
-                        "description": "Forbidden",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "404": {
-                        "description": "NotFound",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    }
-                },
-                "operationId": "getDistributionGroup",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "account"
-                ]
-            },
-            "patch": {
-                "description": "Updates the attributes of distribution group",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    },
-                    {
-                        "name": "distribution_group_name",
-                        "type": "string",
-                        "in": "path",
-                        "description": "The name of the distribution group",
-                        "required": true
-                    },
-                    {
-                        "name": "distribution_group",
-                        "in": "body",
-                        "description": "The attributes to update for the distribution group",
-                        "required": true,
-                        "schema": {
-                            "$ref": "#/definitions/DistributionGroupPatchRequest"
-                        }
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/DistributionGroupResponse"
-                        }
-                    },
-                    "400": {
-                        "description": "BadRequest",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "403": {
-                        "description": "Forbidden",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "404": {
-                        "description": "NotFound",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    }
-                },
-                "operationId": "updateDistributionGroup",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "account"
-                ]
-            },
-            "delete": {
-                "description": "Deletes a distribution group",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/app_name"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "name": "distribution_group_name",
-                        "type": "string",
-                        "in": "path",
-                        "description": "The name of the distribution group",
-                        "required": true
-                    }
-                ],
-                "responses": {
-                    "204": {
-                        "description": "Success"
-                    },
-                    "400": {
-                        "description": "BadRequest",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "403": {
-                        "description": "Forbidden",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "404": {
-                        "description": "NotFound",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    }
-                },
-                "operationId": "deleteDistributionGroup",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "account"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/distribution_groups": {
-            "get": {
-                "description": "Returns a list of distribution groups in the app specified",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "type": "array",
-                            "items": {
-                                "$ref": "#/definitions/DistributionGroupResponse"
-                            }
-                        }
-                    },
-                    "403": {
-                        "description": "Forbidden",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "404": {
-                        "description": "NotFound",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    }
-                },
-                "operationId": "getDistributionGroups",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "account"
-                ]
-            },
-            "post": {
-                "description": "Creates a new distribution group and returns it to the caller",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    },
-                    {
-                        "name": "distribution_group",
-                        "in": "body",
-                        "description": "The data for the distribution group",
-                        "required": true,
-                        "schema": {
-                            "$ref": "#/definitions/DistributionGroupRequest"
-                        }
-                    }
-                ],
-                "responses": {
-                    "201": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/DistributionGroupResponse"
-                        }
-                    },
-                    "400": {
-                        "description": "BadRequest",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "403": {
-                        "description": "Forbidden",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "404": {
-                        "description": "NotFound",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "409": {
-                        "description": "Conflict",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    }
-                },
-                "operationId": "createDistributionGroup",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "account"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/device_selection": {
-            "post": {
-                "description": "Creates a short ID for a list of devices",
-                "operationId": "test_createDeviceSelection",
-                "parameters": [
-                    {
-                        "name": "devices",
-                        "type": "array",
-                        "items": {
-                            "type": "string"
-                        },
-                        "in": "formData",
-                        "description": "List of device IDs",
-                        "required": true
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "$ref": "#/definitions/DeviceSelection"
-                        }
-                    },
-                    "400": {
-                        "description": "Invalid list of device IDs",
-                        "schema": {
-                            "$ref": "#/definitions/TestCloudErrorDetails"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "test"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/device_configurations": {
-            "get": {
-                "description": "Returns a list of available devices",
-                "operationId": "test_getDeviceConfigurations",
-                "parameters": [
-                    {
-                        "name": "app_upload_id",
-                        "type": "string",
-                        "format": "uuid",
-                        "in": "query",
-                        "description": "The ID of the test run",
-                        "required": false
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OK",
-                        "schema": {
-                            "type": "array",
-                            "items": {
-                                "$ref": "#/definitions/DeviceConfiguration"
-                            }
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "test"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/crash_groups/{crash_group_id}/stacktrace": {
-            "get": {
-                "description": "Gets a stacktrace for a specific error",
-                "operationId": "getGroupStacktrace",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/path_crash_group_id"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/Stacktrace"
-                        }
-                    },
-                    "default": {
-                        "description": "Error",
-                        "schema": {
-                            "$ref": "#/definitions/Failure"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "crash"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/crash_groups/{crash_group_id}/crashes/{crash_id}/stacktrace": {
-            "get": {
-                "description": "Gets a stacktrace for a specific error",
-                "operationId": "getErrorStacktrace",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/path_crash_group_id"
-                    },
-                    {
-                        "$ref": "#/parameters/path_crash_id"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/Stacktrace"
-                        }
-                    },
-                    "default": {
-                        "description": "Error",
-                        "schema": {
-                            "$ref": "#/definitions/Failure"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "crash"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/crash_groups/{crash_group_id}/crashes/{crash_id}": {
-            "get": {
-                "description": "Gets a specific error for an app",
-                "operationId": "getCrash",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/path_crash_group_id"
-                    },
-                    {
-                        "$ref": "#/parameters/path_crash_id"
-                    },
-                    {
-                        "$ref": "#/parameters/include_report"
-                    },
-                    {
-                        "$ref": "#/parameters/include_log"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "201": {
-                        "description": "Created",
-                        "schema": {
-                            "$ref": "#/definitions/Crash"
-                        }
-                    },
-                    "default": {
-                        "description": "Error",
-                        "schema": {
-                            "$ref": "#/definitions/Failure"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "crash"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/crash_groups/{crash_group_id}/crashes": {
-            "get": {
-                "description": "Gets all crashes of the app",
-                "operationId": "getCrashes",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/path_crash_group_id"
-                    },
-                    {
-                        "$ref": "#/parameters/include_report"
-                    },
-                    {
-                        "$ref": "#/parameters/include_log"
-                    },
-                    {
-                        "$ref": "#/parameters/date_from"
-                    },
-                    {
-                        "$ref": "#/parameters/date_to"
-                    },
-                    {
-                        "$ref": "#/parameters/app_version"
-                    },
-                    {
-                        "$ref": "#/parameters/error_type"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "type": "array",
-                            "items": {
-                                "$ref": "#/definitions/Crash"
-                            }
-                        }
-                    },
-                    "default": {
-                        "description": "Error",
-                        "schema": {
-                            "$ref": "#/definitions/Failure"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "crash"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/crash_groups/{crash_group_id}": {
-            "get": {
-                "description": "Gets a specific group",
-                "operationId": "getCrashGroup",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/path_crash_group_id"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/CrashGroup"
-                        }
-                    },
-                    "default": {
-                        "description": "Error",
-                        "schema": {
-                            "$ref": "#/definitions/Failure"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "crash"
-                ]
-            },
-            "patch": {
-                "description": "Updates a group",
-                "operationId": "patchCrashGroup",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/path_crash_group_id"
-                    },
-                    {
-                        "name": "group",
-                        "description": "Group change object. All fields are optional and only provided fields will get updated.",
-                        "in": "body",
-                        "required": true,
-                        "schema": {
-                            "$ref": "#/definitions/CrashGroupChange"
-                        }
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/CrashGroup"
-                        }
-                    },
-                    "default": {
-                        "description": "Error",
-                        "schema": {
-                            "$ref": "#/definitions/Failure"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "crash"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/crash_groups": {
-            "get": {
-                "description": "Gets a list of crashes",
-                "summary": "Gets a list of crashes",
-                "operationId": "getCrashGroups",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/last_occurrence_from"
-                    },
-                    {
-                        "$ref": "#/parameters/last_occurrence_to"
-                    },
-                    {
-                        "$ref": "#/parameters/app_version"
-                    },
-                    {
-                        "$ref": "#/parameters/group_type"
-                    },
-                    {
-                        "$ref": "#/parameters/group_status"
-                    },
-                    {
-                        "$ref": "#/parameters/group_text_search"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "type": "array",
-                            "items": {
-                                "$ref": "#/definitions/CrashGroup"
-                            }
-                        }
-                    },
-                    "default": {
-                        "description": "Error",
-                        "schema": {
-                            "$ref": "#/definitions/Failure"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "crash"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/crash_group_counts": {
-            "get": {
-                "description": "",
-                "summary": "",
-                "operationId": "getCrashGroupCounts",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/CrashGroupCounts"
-                        }
-                    },
-                    "default": {
-                        "description": "Error",
-                        "schema": {
-                            "$ref": "#/definitions/Failure"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "crash"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/commits/batch/{sha_collection}": {
-            "get": {
-                "description": "Returns commit information for a batch of shas",
-                "parameters": [
-                    {
-                        "name": "sha_collection",
-                        "type": "string",
-                        "in": "path",
-                        "description": "A collection of commit SHAs comma-delimited",
-                        "required": true
-                    },
-                    {
-                        "$ref": "#/parameters/form"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/Branches"
-                        }
-                    }
-                },
-                "operationId": "build_getCommits",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "build"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/builds/{build_id}/logs": {
-            "get": {
-                "description": "Get the build log",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/build_id"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success"
-                    }
-                },
-                "operationId": "build_getBuildLogs",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "build"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/builds/{build_id}/downloads/{download_type}": {
-            "get": {
-                "description": "Gets the download URI",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/build_id"
-                    },
-                    {
-                        "name": "download_type",
-                        "type": "string",
-                        "enum": [
-                            "build",
-                            "symbols",
-                            "logs"
-                        ],
-                        "in": "path",
-                        "description": "The download type",
-                        "required": true
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success"
-                    }
-                },
-                "operationId": "build_getBuildDownload",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "build"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/builds/{build_id}": {
-            "get": {
-                "description": "Returns the build detail for the given build ID",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/build_id"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/Build"
-                        }
-                    }
-                },
-                "operationId": "build_getBuild",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "build"
-                ]
-            },
-            "patch": {
-                "description": "Cancels a build",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/build_id"
-                    },
-                    {
-                        "name": "properties",
-                        "in": "body",
-                        "required": true,
-                        "schema": {
-                            "$ref": "#/definitions/BuildPatch"
-                        }
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/Build"
-                        }
-                    }
-                },
-                "operationId": "build_updateBuildStatus",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "build"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/branches/{branch}/toolset_projects": {
-            "get": {
-                "description": "Returns the projects in the repository for the branch, for all toolsets",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/branch"
-                    },
-                    {
-                        "name": "os",
-                        "type": "string",
-                        "in": "query",
-                        "description": "The desired OS for the project scan; normally the same as the app OS",
-                        "required": true,
-                        "enum": [
-                            "iOS",
-                            "Android"
-                        ]
-                    },
-                    {
-                        "name": "platform",
-                        "type": "string",
-                        "in": "query",
-                        "description": "The desired platform for the project scan",
-                        "required": true,
-                        "enum": [
-                            "Objective-C-Swift",
-                            "React-Native",
-                            "Xamarin",
-                            "Java"
-                        ]
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/ToolsetProjects"
-                        }
-                    }
-                },
-                "operationId": "build_getProjectInformation",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "build"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/branches/{branch}/config": {
-            "get": {
-                "description": "Gets the branch configuration",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/branch"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/BranchConfiguration"
-                        }
-                    },
-                    "400": {
-                        "description": "Bad Request",
-                        "schema": {
-                            "$ref": "#/definitions/ValidationErrorResponse"
-                        }
-                    }
-                },
-                "operationId": "build_getBranchConfiguration",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "build"
-                ]
-            },
-            "post": {
-                "description": "Configures the branch for build",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/branch"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/BranchConfiguration"
-                        }
-                    }
-                },
-                "operationId": "build_createBranchConfiguration",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "build"
-                ]
-            },
-            "put": {
-                "description": "Reconfigures the branch for build",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/branch"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/BranchConfiguration"
-                        }
-                    }
-                },
-                "operationId": "build_updateBranchConfiguration",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "build"
-                ]
-            },
-            "delete": {
-                "description": "Deletes the branch build configuration",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/branch"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/SuccessResponse"
-                        }
-                    }
-                },
-                "operationId": "build_deleteBranchConfiguration",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "build"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/branches/{branch}/builds": {
-            "get": {
-                "description": "Returns the list of builds for the branch",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/branch"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/Builds"
-                        }
-                    }
-                },
-                "operationId": "build_getBranchBuilds",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "build"
-                ]
-            },
-            "post": {
-                "description": "Create a build",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/branch"
-                    },
-                    {
-                        "name": "params",
-                        "in": "body",
-                        "description": "Parameters of the build",
-                        "required": false,
-                        "schema": {
-                            "$ref": "#/definitions/BuildParams"
-                        }
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Created build(s)",
-                        "schema": {
-                            "$ref": "#/definitions/Builds"
-                        }
-                    }
-                },
-                "operationId": "build_queueBuild",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "build"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/branches": {
-            "get": {
-                "description": "Returns the list of Git branches for this application",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/BranchStatusCollection"
-                        }
-                    },
-                    "400": {
-                        "description": "Bad Request",
-                        "schema": {
-                            "$ref": "#/definitions/ValidationErrorResponse"
-                        }
-                    }
-                },
-                "operationId": "build_getBranches",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "build"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/analytics/versions": {
-            "get": {
-                "operationId": "Analytics_Versions",
-                "description": "Count of active versions in the time range ordered by version.",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/StartParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/EndParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/CountParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/VersionsParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Count of active versions in the time range ordered by version.",
-                        "schema": {
-                            "$ref": "#/definitions/Versions"
-                        }
-                    },
-                    "default": {
-                        "description": "Error code with reason",
-                        "schema": {
-                            "$ref": "#/definitions/Error"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "analytics"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/analytics/sessions_per_device": {
-            "get": {
-                "operationId": "Analytics_PerDeviceCounts",
-                "description": "Count of sessions per device in the time range",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/StartParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/EndParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/IntervalParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/VersionsParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Count of sessions per device in the time range",
-                        "schema": {
-                            "$ref": "#/definitions/SessionsPerDevice"
-                        }
-                    },
-                    "default": {
-                        "description": "Error code with reason",
-                        "schema": {
-                            "$ref": "#/definitions/Error"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "analytics"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/analytics/session_durations_distribution": {
-            "get": {
-                "operationId": "Analytics_SessionDurationsDistribution",
-                "description": "Gets session duration .",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/StartParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/EndParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/VersionsParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "List of  session durations for requested time range.",
-                        "schema": {
-                            "$ref": "#/definitions/SessionDurationsDistribution"
-                        }
-                    },
-                    "default": {
-                        "description": "Error code with reason",
-                        "schema": {
-                            "$ref": "#/definitions/Error"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "analytics"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/analytics/session_counts": {
-            "get": {
-                "operationId": "Analytics_SessionCounts",
-                "description": "Count of sessions in the time range.",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/StartParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/EndParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/IntervalParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/VersionsParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Count of sessions in the time range.",
-                        "schema": {
-                            "$ref": "#/definitions/SessionCounts"
-                        }
-                    },
-                    "default": {
-                        "description": "Error code with reason",
-                        "schema": {
-                            "$ref": "#/definitions/Error"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "analytics"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/analytics/places": {
-            "get": {
-                "operationId": "Analytics_PlaceCounts",
-                "description": "Places in the time range",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/StartParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/EndParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/CountParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/VersionsParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Places with count during the time range in descending order",
-                        "schema": {
-                            "$ref": "#/definitions/Places"
-                        }
-                    },
-                    "default": {
-                        "description": "Error code with reason",
-                        "schema": {
-                            "$ref": "#/definitions/Error"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "analytics"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/analytics/oses": {
-            "get": {
-                "operationId": "Analytics_OperatingSystemCounts",
-                "description": "OSes in the time range",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/StartParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/EndParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/CountParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/VersionsParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "OSes with count during the time range in descending order",
-                        "schema": {
-                            "$ref": "#/definitions/OSes"
-                        }
-                    },
-                    "default": {
-                        "description": "Error code with reason",
-                        "schema": {
-                            "$ref": "#/definitions/Error"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "analytics"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/analytics/models": {
-            "get": {
-                "operationId": "Analytics_ModelCounts",
-                "description": "models in the time range",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/StartParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/EndParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/CountParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/VersionsParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Models with count during the time range in descending order",
-                        "schema": {
-                            "$ref": "#/definitions/AnalyticsModels"
-                        }
-                    },
-                    "default": {
-                        "description": "Error code with reason",
-                        "schema": {
-                            "$ref": "#/definitions/Error"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "analytics"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/analytics/log_flow": {
-            "get": {
-                "operationId": "Analytics_LogFlow",
-                "description": "Logs received between the specified start time and the current time. The API will return a maximum of 100 logs per call.",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/LogFlowStartTimeParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "List of logs for the requested time range.",
-                        "schema": {
-                            "$ref": "#/definitions/LogContainer"
-                        }
-                    },
-                    "default": {
-                        "description": "Error code with reason",
-                        "schema": {
-                            "$ref": "#/definitions/Error"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "analytics"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/analytics/languages": {
-            "get": {
-                "operationId": "Analytics_LanguageCounts",
-                "description": "languages in the time range",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/StartParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/EndParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/CountParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/VersionsParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Languages with count during the time range in descending order",
-                        "schema": {
-                            "$ref": "#/definitions/Languages"
-                        }
-                    },
-                    "default": {
-                        "description": "Error code with reason",
-                        "schema": {
-                            "$ref": "#/definitions/Error"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "analytics"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/analytics/events/{event_name}/properties/{event_property_name}/counts": {
-            "get": {
-                "operationId": "Analytics_EventPropertyCounts",
-                "description": "Event properties value counts during the time range in descending order.  Limited up to 5 values.",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/EventParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/EventPropertyParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/StartParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/EndParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/VersionsParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/PropertyCountParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Event properties value counts during the time range in descending order.  Limited up to 5 values.",
-                        "schema": {
-                            "$ref": "#/definitions/EventPropertyValues"
-                        }
-                    },
-                    "default": {
-                        "description": "Error code with reason",
-                        "schema": {
-                            "$ref": "#/definitions/Error"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "analytics"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/analytics/events/{event_name}/properties": {
-            "get": {
-                "operationId": "Analytics_EventProperties",
-                "description": "Event properties.  Up to the first 5 received properties.",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/EventParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Event properties.  Up to the first 5 received properties.",
-                        "schema": {
-                            "$ref": "#/definitions/EventProperties"
-                        }
-                    },
-                    "default": {
-                        "description": "Error code with reason",
-                        "schema": {
-                            "$ref": "#/definitions/Error"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "analytics"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/analytics/events/{event_name}/event_count": {
-            "get": {
-                "operationId": "Analytics_EventCount",
-                "description": "Count of events by interval in the time range.",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/EventParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/StartParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/EndParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/VersionsParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Count of events by interval in the time range.",
-                        "schema": {
-                            "$ref": "#/definitions/EventCount"
-                        }
-                    },
-                    "default": {
-                        "description": "Error code with reason",
-                        "schema": {
-                            "$ref": "#/definitions/Error"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "analytics"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/analytics/events/{event_name}/device_count": {
-            "get": {
-                "operationId": "Analytics_EventDeviceCount",
-                "description": "Count of devices for an event by interval in the time range.",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/EventParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/StartParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/EndParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/VersionsParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Count of devices for an event by interval in the time range.",
-                        "schema": {
-                            "$ref": "#/definitions/EventDeviceCount"
-                        }
-                    },
-                    "default": {
-                        "description": "Error code with reason",
-                        "schema": {
-                            "$ref": "#/definitions/Error"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "analytics"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/analytics/events/{event_name}/count_per_session": {
-            "get": {
-                "operationId": "Analytics_EventPerSessionCount",
-                "description": "Count of events per session by interval in the time range.",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/EventParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/StartParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/EndParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/VersionsParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Count of events per session by interval in the time range.",
-                        "schema": {
-                            "$ref": "#/definitions/EventCountPerSession"
-                        }
-                    },
-                    "default": {
-                        "description": "Error code with reason",
-                        "schema": {
-                            "$ref": "#/definitions/Error"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "analytics"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/analytics/events/{event_name}/count_per_device": {
-            "get": {
-                "operationId": "Analytics_EventPerDeviceCount",
-                "description": "Count of events per device by interval in the time range.",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/EventParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/StartParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/EndParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/VersionsParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Count of events per device by interval in the time range.",
-                        "schema": {
-                            "$ref": "#/definitions/EventCountPerDevice"
-                        }
-                    },
-                    "default": {
-                        "description": "Error code with reason",
-                        "schema": {
-                            "$ref": "#/definitions/Error"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "analytics"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/analytics/events": {
-            "get": {
-                "operationId": "Analytics_Events",
-                "description": "Count of active events in the time range ordered by event.",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/StartParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/EndParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/VersionsParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/EventNameParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/TopParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/SkipParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/InlineCountParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/OrderByParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Count of active events in the time range ordered by event.",
-                        "schema": {
-                            "$ref": "#/definitions/Events"
-                        }
-                    },
-                    "default": {
-                        "description": "Error code with reason",
-                        "schema": {
-                            "$ref": "#/definitions/Error"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "analytics"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/analytics/crashfree_device_percentages": {
-            "get": {
-                "operationId": "Analytics_CrashFreeDevicePercentages",
-                "description": "Percentage of crash-free device by day in the time range based on the selected versions. Api will return -1 if crash devices is greater than active devices",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/StartParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/EndParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/VersionsParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Percentage of crash-free devices by day in the time range and overall percentage of the time range.",
-                        "schema": {
-                            "$ref": "#/definitions/CrashFreeDevicePercentages"
-                        }
-                    },
-                    "default": {
-                        "description": "Error code with reason",
-                        "schema": {
-                            "$ref": "#/definitions/Error"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "analytics"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/analytics/crash_groups/{crash_group_id}/overall": {
-            "get": {
-                "operationId": "Analytics_CrashGroupTotals",
-                "description": "Overall crashes and affected users count of the selected crash group with selected version",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/CrashGroupParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/VersionParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Overall crashes and affected users count",
-                        "schema": {
-                            "$ref": "#/definitions/CrashOverall"
-                        }
-                    },
-                    "default": {
-                        "description": "Error code with reason",
-                        "schema": {
-                            "$ref": "#/definitions/Error"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "analytics"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/analytics/crash_groups/{crash_group_id}/operating_systems": {
-            "get": {
-                "operationId": "Analytics_CrashGroupOperatingSystemCounts",
-                "description": "top OSes of the selected crash group with selected version",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/CrashGroupParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/VersionParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/TopParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Top OSes with percentage in descending order",
-                        "schema": {
-                            "$ref": "#/definitions/CrashGroupOperatingSystems"
-                        }
-                    },
-                    "default": {
-                        "description": "Error code with reason",
-                        "schema": {
-                            "$ref": "#/definitions/Error"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "analytics"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/analytics/crash_groups/{crash_group_id}/models": {
-            "get": {
-                "operationId": "Analytics_CrashGroupModelCounts",
-                "description": "top models of the selected crash group with selected version",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/CrashGroupParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/VersionParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/TopParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Top Models with percentage in descending order",
-                        "schema": {
-                            "$ref": "#/definitions/CrashGroupModels"
-                        }
-                    },
-                    "default": {
-                        "description": "Error code with reason",
-                        "schema": {
-                            "$ref": "#/definitions/Error"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "analytics"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/analytics/crash_groups/{crash_group_id}/crash_counts": {
-            "get": {
-                "operationId": "Analytics_CrashGroupCounts",
-                "description": "Count of crashes by day in the time range of the selected crash group with selected version",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/CrashGroupParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/VersionParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/StartParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/EndParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Count of crashes by day in the time range and total crashes over the time range.",
-                        "schema": {
-                            "$ref": "#/definitions/CrashCounts"
-                        }
-                    },
-                    "default": {
-                        "description": "Error code with reason",
-                        "schema": {
-                            "$ref": "#/definitions/Error"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "analytics"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/analytics/crash_groups": {
-            "post": {
-                "operationId": "Analytics_CrashGroupsTotals",
-                "description": "Overall crashes and affected users count of the selected crash groups with selected versions",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/CrashGroupsParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Overall crashes and affected users count for all selected crash groups",
-                        "schema": {
-                            "$ref": "#/definitions/CrashesOverall"
-                        }
-                    },
-                    "default": {
-                        "description": "Error code with reason",
-                        "schema": {
-                            "$ref": "#/definitions/Error"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "analytics"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/analytics/crash_counts": {
-            "get": {
-                "operationId": "Analytics_CrashCounts",
-                "description": "Count of crashes by day in the time range based the selected versions.",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/StartParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/EndParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/VersionsParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Count of crashes by day in the time range and total crashes over the time range.",
-                        "schema": {
-                            "$ref": "#/definitions/CrashCounts"
-                        }
-                    },
-                    "default": {
-                        "description": "Error code with reason",
-                        "schema": {
-                            "$ref": "#/definitions/Error"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "analytics"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}/analytics/active_device_counts": {
-            "get": {
-                "operationId": "Analytics_DeviceCounts",
-                "description": "Count of active devices by interval in the time range.",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/StartParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/EndParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/VersionsParameter"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Count of active devices by interval in the time range.",
-                        "schema": {
-                            "$ref": "#/definitions/ActiveDeviceCounts"
-                        }
-                    },
-                    "default": {
-                        "description": "Error code with reason",
-                        "schema": {
-                            "$ref": "#/definitions/Error"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "analytics"
-                ]
-            }
-        },
-        "/v0.1/apps/{owner_name}/{app_name}": {
-            "get": {
-                "description": "Return a specific app with the given app name which belongs to the given owner.",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "$ref": "#/parameters/app_name"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/AppResponse"
-                        }
-                    },
-                    "400": {
-                        "description": "BadRequest",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "404": {
-                        "description": "NotFound",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    }
-                },
-                "operationId": "getApp",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "account"
-                ]
-            },
-            "patch": {
-                "description": "Partially updates a single app",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/app_name"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    },
-                    {
-                        "name": "app",
-                        "in": "body",
-                        "description": "The partial data for the app",
-                        "schema": {
-                            "$ref": "#/definitions/AppPatchRequest"
-                        }
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/AppResponse"
-                        }
-                    },
-                    "400": {
-                        "description": "BadRequest",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "403": {
-                        "description": "Forbidden",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "404": {
-                        "description": "NotFound",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "409": {
-                        "description": "Conflict",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    }
-                },
-                "operationId": "updateApp",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "account"
-                ]
-            },
-            "delete": {
-                "description": "Delete an app",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/app_name"
-                    },
-                    {
-                        "$ref": "#/parameters/owner_name"
-                    }
-                ],
-                "responses": {
-                    "204": {
-                        "description": "Success"
-                    },
-                    "403": {
-                        "description": "Forbidden",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "404": {
-                        "description": "NotFound",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    }
-                },
-                "operationId": "deleteApp",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "account"
-                ]
-            }
-        },
-        "/v0.1/apps": {
-            "post": {
-                "description": "Creates a new app and returns it to the caller",
-                "parameters": [
-                    {
-                        "$ref": "#/parameters/app"
-                    }
-                ],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/AppResponse"
-                        }
-                    },
-                    "201": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/AppResponse"
-                        }
-                    },
-                    "400": {
-                        "description": "BadRequest",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "404": {
-                        "description": "NotFound",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "409": {
-                        "description": "Conflict",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    }
-                },
-                "operationId": "createApp",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "account"
-                ]
-            },
-            "get": {
-                "description": "Returns a list of apps",
-                "parameters": [],
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "type": "array",
-                            "items": {
-                                "$ref": "#/definitions/AppResponse"
-                            }
-                        }
-                    },
-                    "400": {
-                        "description": "BadRequest",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "404": {
-                        "description": "NotFound",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    }
-                },
-                "operationId": "getApps",
-                "security": [
-                    {
-                        "APIToken": []
-                    }
-                ],
-                "tags": [
-                    "account"
-                ]
-            }
-        },
-        "/v0.1/api_tokens/{api_token_id}": {
-            "delete": {
-                "operationId": "deleteApiToken",
-                "description": "Delete the api_token object with the specific id",
-                "parameters": [
-                    {
-                        "name": "api_token_id",
-                        "type": "string",
-                        "in": "path",
-                        "description": "The unique ID (UUID) of the api token",
-                        "required": true
-                    }
-                ],
-                "responses": {
-                    "204": {
-                        "description": "Success"
-                    },
-                    "400": {
-                        "description": "Error",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "401": {
-                        "description": "Unauthorized",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "404": {
-                        "description": "NotFound",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "Basic": []
-                    }
-                ],
-                "tags": [
-                    "account"
-                ]
-            }
-        },
-        "/v0.1/api_tokens": {
-            "get": {
-                "operationId": "getApiTokens",
-                "description": "Returns api tokens for the authenticated user",
-                "responses": {
-                    "200": {
-                        "description": "Success",
-                        "schema": {
-                            "type": "array",
-                            "items": {
-                                "$ref": "#/definitions/ApiTokensGetResponse"
-                            }
-                        }
-                    },
-                    "400": {
-                        "description": "Error",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "401": {
-                        "description": "Unauthorized",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "Basic": []
-                    }
-                ],
-                "tags": [
-                    "account"
-                ]
-            },
-            "post": {
-                "operationId": "createApiToken",
-                "description": "Creates a new API token",
-                "parameters": [
-                    {
-                        "name": "description",
-                        "in": "body",
-                        "description": "Description of the token",
-                        "schema": {
-                            "$ref": "#/definitions/ApiTokensCreateRequest"
-                        }
-                    }
-                ],
-                "responses": {
-                    "201": {
-                        "description": "Success",
-                        "schema": {
-                            "$ref": "#/definitions/ApiTokensCreateResponse"
-                        }
-                    },
-                    "400": {
-                        "description": "Error",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    },
-                    "401": {
-                        "description": "Unauthorized",
-                        "schema": {
-                            "$ref": "#/definitions/ErrorResponse"
-                        }
-                    }
-                },
-                "security": [
-                    {
-                        "Basic": []
-                    }
-                ],
-                "tags": [
-                    "account"
-                ]
+            "in": "body",
+            "description": "File hash information",
+            "required": true
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "201": {
+            "description": "OK"
+          },
+          "401": {
+            "description": "Byte range verification required for given SHA256 hash",
+            "headers": {
+              "X-Challenge-Bytes": {
+                "description": "Byte range required to authenticate the request",
+                "type": "string"
+              }
+            }
+          },
+          "412": {
+            "description": "File with given SHA256 hash doesn't exist and must be uploaded"
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "test"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/test_runs/{test_run_id}/files": {
+      "post": {
+        "description": "Uploads file for a test run",
+        "operationId": "test_startUploadingFile",
+        "consumes": [
+          "application/json"
+        ],
+        "parameters": [
+          {
+            "name": "test_run_id",
+            "type": "string",
+            "in": "path",
+            "description": "The ID of the test run",
+            "required": true
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "File was created and can be uploaded",
+            "headers": {
+              "Location": {
+                "description": "Relative URL that points to the upload endpoint",
+                "type": "string"
+              }
+            }
+          },
+          "400": {
+            "description": "Bad request"
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "test"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/test_runs/{test_run_id}": {
+      "get": {
+        "description": "Returns a single test runs",
+        "operationId": "test_getTestRun",
+        "parameters": [
+          {
+            "name": "test_run_id",
+            "type": "string",
+            "format": "uuid",
+            "in": "path",
+            "description": "The ID of the test run",
+            "required": true
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "$ref": "#/definitions/TestRun"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "test"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/test_runs": {
+      "get": {
+        "description": "Returns a list of test runs",
+        "operationId": "test_getTestRuns",
+        "parameters": [
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "type": "array",
+              "items": {
+                "$ref": "#/definitions/TestRun"
+              }
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "test"
+        ]
+      },
+      "post": {
+        "description": "Creates a new test run",
+        "operationId": "test_createTestRun",
+        "parameters": [
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "201": {
+            "description": "OK",
+            "headers": {
+              "Location": {
+                "description": "Relative URL that points to the test run",
+                "type": "string"
+              }
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "test"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/symbols/{symbol_id}/ignore": {
+      "post": {
+        "description": "Marks a symbol by id (uuid) as ignored",
+        "operationId": "postIgnoreSymbol",
+        "parameters": [
+          {
+            "$ref": "#/parameters/path_symbol_id"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/Symbol"
+            }
+          },
+          "403": {
+            "description": "Unauthorized",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          },
+          "404": {
+            "description": "Not found",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          },
+          "500": {
+            "description": "Internal error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "crash"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/symbols/{symbol_id}": {
+      "get": {
+        "description": "Returns a particular symbol by id (uuid) for the provided application",
+        "operationId": "getSymbol",
+        "parameters": [
+          {
+            "$ref": "#/parameters/path_symbol_id"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/Symbol"
+            }
+          },
+          "403": {
+            "description": "Unauthorized",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          },
+          "404": {
+            "description": "Not found",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          },
+          "500": {
+            "description": "Internal error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "crash"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/symbols": {
+      "get": {
+        "description": "Returns the list of all symbols for the provided application",
+        "operationId": "getSymbols",
+        "parameters": [
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/Symbols"
+            }
+          },
+          "403": {
+            "description": "Unauthorized",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          },
+          "500": {
+            "description": "Internal error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "crash"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/symbol_uploads/{symbol_upload_id}": {
+      "get": {
+        "description": "Gets a symbol upload by id for the specified application",
+        "operationId": "getSymbolUpload",
+        "parameters": [
+          {
+            "$ref": "#/parameters/path_symbol_upload_id"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/SymbolUpload"
+            }
+          },
+          "403": {
+            "description": "Unauthorized",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          },
+          "404": {
+            "description": "Not found",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          },
+          "500": {
+            "description": "Internal error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "crash"
+        ]
+      },
+      "patch": {
+        "description": "Commits or aborts the symbol upload process for a new set of symbols for the specified application",
+        "operationId": "patchSymbolUpload",
+        "parameters": [
+          {
+            "$ref": "#/parameters/path_symbol_upload_id"
+          },
+          {
+            "name": "body",
+            "in": "body",
+            "description": "The symbol information",
+            "required": true,
+            "schema": {
+              "$ref": "#/definitions/SymbolUploadEndRequest"
+            }
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/SymbolUpload"
+            }
+          },
+          "400": {
+            "description": "Bad request",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          },
+          "403": {
+            "description": "Unauthorized",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          },
+          "500": {
+            "description": "Internal error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "crash"
+        ]
+      },
+      "delete": {
+        "description": "Deletes a symbol upload by id for the specified application",
+        "operationId": "deleteSymbolUpload",
+        "parameters": [
+          {
+            "$ref": "#/parameters/path_symbol_upload_id"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/SymbolUpload"
+            }
+          },
+          "403": {
+            "description": "Unauthorized",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          },
+          "404": {
+            "description": "Not found",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          },
+          "500": {
+            "description": "Internal error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "crash"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/symbol_uploads": {
+      "get": {
+        "description": "Gets a list of all uploads for the specified application",
+        "operationId": "getSymbolUploads",
+        "parameters": [
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/SymbolUploads"
+            }
+          },
+          "403": {
+            "description": "Unauthorized",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          },
+          "500": {
+            "description": "Internal error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "crash"
+        ]
+      },
+      "post": {
+        "description": "Begins the symbol upload process for a new set of symbols for the specified application",
+        "operationId": "postSymbolUpload",
+        "parameters": [
+          {
+            "name": "body",
+            "in": "body",
+            "description": "The symbol information",
+            "required": true,
+            "schema": {
+              "$ref": "#/definitions/SymbolUploadBeginRequest"
+            }
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/SymbolUploadBeginResponse"
+            }
+          },
+          "400": {
+            "description": "Bad request",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          },
+          "403": {
+            "description": "Unauthorized",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          },
+          "500": {
+            "description": "Internal error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "crash"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/symbol_groups/{symbol_group_id}": {
+      "get": {
+        "description": "Gets missing symbol crash group by its id",
+        "summary": "Gets missing symbol crash group by its id",
+        "operationId": "getMissingSymbolCrashGroupById",
+        "parameters": [
+          {
+            "$ref": "#/parameters/path_symbol_group_id"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/MissingSymbolCrashGroupsResponse"
+            }
+          },
+          "default": {
+            "description": "Error",
+            "schema": {
+              "$ref": "#/definitions/FailureResponse"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "crash"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/symbol_groups": {
+      "get": {
+        "description": "Gets top N (ordered by crash count) of crash groups by missing symbol",
+        "summary": "Gets top N (ordered by crash count) of crash groups by missing symbol",
+        "operationId": "getTopNFilteredMissingSymbolCrashGroups",
+        "parameters": [
+          {
+            "$ref": "#/parameters/query_top"
+          },
+          {
+            "$ref": "#/parameters/query_filter"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/MissingSymbolCrashGroupsResponse"
+            }
+          },
+          "default": {
+            "description": "Error",
+            "schema": {
+              "$ref": "#/definitions/FailureResponse"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "crash"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/subscriptions/{subscription_id}/tables/{tableName}/data/{id}": {
+      "get": {
+        "parameters": [
+          {
+            "name": "subscription_id",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "name": "tableName",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "name": "id",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "type": "object"
+            }
+          },
+          "400": {
+            "description": "Invalid request",
+            "schema": {
+              "type": "object"
+            }
+          }
+        },
+        "operationId": "tables_getTableRow",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "data"
+        ]
+      },
+      "delete": {
+        "parameters": [
+          {
+            "name": "subscription_id",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "name": "tableName",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "name": "id",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "name": "permanent",
+            "in": "query",
+            "required": false,
+            "type": "boolean"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "type": "object"
+            }
+          },
+          "400": {
+            "description": "Invalid request",
+            "schema": {
+              "type": "object"
+            }
+          }
+        },
+        "operationId": "tables_deleteTableRow",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "data"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/subscriptions/{subscription_id}/tables/{tableName}/data": {
+      "get": {
+        "parameters": [
+          {
+            "name": "subscription_id",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "name": "tableName",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "name": "skip",
+            "in": "query",
+            "required": false,
+            "type": "integer",
+            "format": "int32"
+          },
+          {
+            "name": "take",
+            "in": "query",
+            "required": false,
+            "type": "integer",
+            "format": "int32"
+          },
+          {
+            "name": "sort",
+            "in": "query",
+            "required": false,
+            "type": "string"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "type": "object"
+            }
+          },
+          "400": {
+            "description": "Invalid request",
+            "schema": {
+              "type": "object"
+            }
+          }
+        },
+        "operationId": "tables_getTableData",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "data"
+        ]
+      },
+      "post": {
+        "parameters": [
+          {
+            "name": "subscription_id",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "name": "tableName",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "name": "import",
+            "in": "body",
+            "required": true,
+            "schema": {
+              "$ref": "#/definitions/ImportDataContainer"
+            }
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "type": "object"
+            }
+          },
+          "400": {
+            "description": "Invalid request",
+            "schema": {
+              "type": "object"
+            }
+          }
+        },
+        "operationId": "tables_importTableData",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "data"
+        ]
+      },
+      "delete": {
+        "parameters": [
+          {
+            "name": "subscription_id",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "name": "tableName",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "type": "object"
+            }
+          },
+          "400": {
+            "description": "Invalid request",
+            "schema": {
+              "type": "object"
+            }
+          }
+        },
+        "operationId": "tables_clearTableData",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "data"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/subscriptions/{subscription_id}/tables/{tableName}/columns/{columnName}": {
+      "get": {
+        "parameters": [
+          {
+            "name": "subscription_id",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "name": "tableName",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "name": "columnName",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "type": "object"
+            }
+          },
+          "400": {
+            "description": "Invalid request",
+            "schema": {
+              "type": "object"
+            }
+          }
+        },
+        "operationId": "tables_getColumn",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "data"
+        ]
+      },
+      "put": {
+        "parameters": [
+          {
+            "name": "subscription_id",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "name": "tableName",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "name": "columnName",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "name": "column",
+            "in": "body",
+            "required": true,
+            "schema": {
+              "$ref": "#/definitions/TableColumn"
+            }
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "type": "object"
+            }
+          },
+          "400": {
+            "description": "Invalid request",
+            "schema": {
+              "type": "object"
+            }
+          }
+        },
+        "operationId": "tables_updateColumn",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "data"
+        ]
+      },
+      "delete": {
+        "parameters": [
+          {
+            "name": "subscription_id",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "name": "tableName",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "name": "columnName",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "type": "object"
+            }
+          },
+          "400": {
+            "description": "Invalid request",
+            "schema": {
+              "type": "object"
+            }
+          }
+        },
+        "operationId": "tables_deleteColumn",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "data"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/subscriptions/{subscription_id}/tables/{tableName}/columns": {
+      "get": {
+        "parameters": [
+          {
+            "name": "subscription_id",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "name": "tableName",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "type": "object"
+            }
+          },
+          "400": {
+            "description": "Invalid request",
+            "schema": {
+              "type": "object"
+            }
+          }
+        },
+        "operationId": "tables_getColumnList",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "data"
+        ]
+      },
+      "post": {
+        "parameters": [
+          {
+            "name": "subscription_id",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "name": "tableName",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "name": "column",
+            "in": "body",
+            "required": true,
+            "schema": {
+              "$ref": "#/definitions/TableColumn"
+            }
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "type": "object"
+            }
+          },
+          "400": {
+            "description": "Invalid request",
+            "schema": {
+              "type": "object"
+            }
+          }
+        },
+        "operationId": "tables_updateColumnList",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "data"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/subscriptions/{subscription_id}/tables/{tableName}": {
+      "get": {
+        "parameters": [
+          {
+            "name": "subscription_id",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "name": "tableName",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "type": "object"
+            }
+          },
+          "400": {
+            "description": "Invalid request",
+            "schema": {
+              "type": "object"
+            }
+          }
+        },
+        "operationId": "tables_getTable",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "data"
+        ]
+      },
+      "put": {
+        "parameters": [
+          {
+            "name": "subscription_id",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "name": "tableName",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "name": "table",
+            "in": "body",
+            "required": true,
+            "schema": {
+              "$ref": "#/definitions/Table"
+            }
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "type": "object"
+            }
+          },
+          "400": {
+            "description": "Invalid request",
+            "schema": {
+              "type": "object"
+            }
+          }
+        },
+        "operationId": "tables_updateTable",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "data"
+        ]
+      },
+      "delete": {
+        "parameters": [
+          {
+            "name": "subscription_id",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "name": "tableName",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "type": "object"
+            }
+          },
+          "400": {
+            "description": "Invalid request",
+            "schema": {
+              "type": "object"
+            }
+          }
+        },
+        "operationId": "tables_deleteTable",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "data"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/subscriptions/{subscription_id}/tables": {
+      "get": {
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "type": "object"
+            }
+          },
+          "400": {
+            "description": "Invalid request",
+            "schema": {
+              "type": "object"
+            }
+          }
+        },
+        "parameters": [
+          {
+            "name": "subscription_id",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "operationId": "tables_getTableList",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "data"
+        ]
+      },
+      "post": {
+        "parameters": [
+          {
+            "name": "subscription_id",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "name": "table",
+            "in": "body",
+            "required": true,
+            "schema": {
+              "$ref": "#/definitions/Table"
+            }
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "type": "object"
+            }
+          },
+          "400": {
+            "description": "Invalid request",
+            "schema": {
+              "type": "object"
+            }
+          }
+        },
+        "operationId": "tables_createTable",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "data"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/subscriptions/{subscription_id}/resourceGroups": {
+      "delete": {
+        "parameters": [
+          {
+            "name": "subscription_id",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "type": "object"
+            }
+          },
+          "400": {
+            "description": "Invalid request",
+            "schema": {
+              "type": "object"
+            }
+          }
+        },
+        "operationId": "azure_deleteResourceGroup",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "data"
+        ]
+      },
+      "get": {
+        "parameters": [
+          {
+            "name": "subscription_id",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "type": "object"
+            }
+          },
+          "400": {
+            "description": "Invalid request",
+            "schema": {
+              "type": "object"
+            }
+          }
+        },
+        "operationId": "azure_getResourceGroup",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "data"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/subscriptions/{subscription_id}/push/keys": {
+      "get": {
+        "parameters": [
+          {
+            "name": "subscription_id",
+            "type": "string",
+            "in": "path",
+            "required": true
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "type": "object"
+            }
+          },
+          "400": {
+            "description": "OK",
+            "schema": {
+              "type": "object"
+            }
+          }
+        },
+        "operationId": "push_getKeys",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "data"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/subscriptions/{subscription_id}/push/config": {
+      "get": {
+        "parameters": [
+          {
+            "name": "subscription_id",
+            "type": "string",
+            "in": "path",
+            "required": true
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "type": "object"
+            }
+          },
+          "400": {
+            "description": "Invalid request",
+            "schema": {
+              "type": "object"
+            }
+          }
+        },
+        "operationId": "push_getConfiguration",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "data"
+        ]
+      },
+      "post": {
+        "parameters": [
+          {
+            "name": "subscription_id",
+            "type": "string",
+            "in": "path",
+            "required": true
+          },
+          {
+            "name": "hubDescription",
+            "in": "body",
+            "required": true,
+            "schema": {
+              "$ref": "#/definitions/PushConfig"
+            }
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "type": "object"
+            }
+          },
+          "400": {
+            "description": "Invalid request",
+            "schema": {
+              "type": "object"
+            }
+          }
+        },
+        "operationId": "push_setConfiguration",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "data"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/subscriptions/{subscription_id}/push": {
+      "get": {
+        "parameters": [
+          {
+            "name": "subscription_id",
+            "type": "string",
+            "in": "path",
+            "required": true
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "type": "object"
+            }
+          },
+          "400": {
+            "description": "Invalid request",
+            "schema": {
+              "type": "object"
+            }
+          }
+        },
+        "operationId": "push_getNotificationHub",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "data"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/subscriptions/{subscription_id}/ping/": {
+      "get": {
+        "parameters": [
+          {
+            "name": "subscription_id",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "type": "object"
+            }
+          },
+          "400": {
+            "description": "Invalid request",
+            "schema": {
+              "type": "object"
+            }
+          }
+        },
+        "operationId": "azure_ping",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "data"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/subscriptions/{subscription_id}/identity": {
+      "get": {
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "type": "object"
+            }
+          },
+          "400": {
+            "description": "Invalid request",
+            "schema": {
+              "type": "object"
+            }
+          }
+        },
+        "parameters": [
+          {
+            "name": "subscription_id",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "operationId": "identity_getConfiguration",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "data"
+        ]
+      },
+      "post": {
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "type": "object"
+            }
+          },
+          "400": {
+            "description": "Invalid request",
+            "schema": {
+              "type": "object"
+            }
+          }
+        },
+        "parameters": [
+          {
+            "name": "subscription_id",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "operationId": "identity_setConfiguration",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "data"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/subscriptions/{subscription_id}/deployments/{type}/operations": {
+      "get": {
+        "parameters": [
+          {
+            "name": "subscription_id",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "name": "type",
+            "in": "path",
+            "required": true,
+            "type": "string",
+            "enum": [
+              "appsvc",
+              "push"
+            ]
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "type": "object"
+            }
+          },
+          "400": {
+            "description": "Invalid request",
+            "schema": {
+              "type": "object"
+            }
+          }
+        },
+        "operationId": "azure_getDeploymentOperations",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "data"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/subscriptions/{subscription_id}/deployments/{type}/": {
+      "post": {
+        "parameters": [
+          {
+            "name": "subscription_id",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "name": "type",
+            "in": "path",
+            "required": true,
+            "type": "string",
+            "enum": [
+              "appsvc",
+              "push"
+            ]
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "type": "object"
+            }
+          },
+          "400": {
+            "description": "Invalid request",
+            "schema": {
+              "type": "object"
+            }
+          }
+        },
+        "operationId": "azure_submitDeployment",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "data"
+        ]
+      },
+      "get": {
+        "parameters": [
+          {
+            "name": "subscription_id",
+            "in": "path",
+            "required": true,
+            "type": "string"
+          },
+          {
+            "name": "type",
+            "in": "path",
+            "required": true,
+            "type": "string",
+            "enum": [
+              "appsvc",
+              "push"
+            ]
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "type": "object"
+            }
+          },
+          "400": {
+            "description": "Invalid request",
+            "schema": {
+              "type": "object"
+            }
+          }
+        },
+        "operationId": "azure_getDeployment",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "data"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/subscriptions": {
+      "get": {
+        "description": "Get information about the currently active subscriptions, if any",
+        "operationId": "test_getSubscriptions",
+        "parameters": [
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "$ref": "#/definitions/Subscription"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "test"
+        ]
+      },
+      "post": {
+        "description": "Accept a free trial subscription",
+        "operationId": "test_createSubscription",
+        "parameters": [
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "201": {
+            "description": "OK",
+            "schema": {
+              "$ref": "#/definitions/Subscription"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "test"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/source_hosts/{source_host}/repositories": {
+      "get": {
+        "description": "Gets the repositories available from the source code host",
+        "parameters": [
+          {
+            "name": "source_host",
+            "type": "string",
+            "in": "path",
+            "description": "The source host",
+            "required": true,
+            "enum": [
+              "github",
+              "bitbucket"
+            ]
+          },
+          {
+            "$ref": "#/parameters/form"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/SourceRepositories"
+            }
+          },
+          "400": {
+            "description": "Bad Request",
+            "schema": {
+              "$ref": "#/definitions/ValidationErrorResponse"
+            }
+          }
+        },
+        "operationId": "build_getRepositories",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "build"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/repo_config": {
+      "get": {
+        "description": "Returns the repository build configuration status of the app",
+        "parameters": [
+          {
+            "name": "includeInactive",
+            "type": "boolean",
+            "in": "query",
+            "description": "Include inactive configurations if none are active",
+            "required": false
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "List of repository configurations",
+            "schema": {
+              "$ref": "#/definitions/RepoConfigs"
+            }
+          },
+          "400": {
+            "description": "Bad Request",
+            "schema": {
+              "$ref": "#/definitions/ValidationErrorResponse"
+            }
+          }
+        },
+        "operationId": "build_getRepositoryConfiguration",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "build"
+        ]
+      },
+      "post": {
+        "description": "Configures the repository for build",
+        "parameters": [
+          {
+            "name": "repo",
+            "in": "body",
+            "description": "The repository information",
+            "required": true,
+            "schema": {
+              "$ref": "#/definitions/RepoInfo"
+            }
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/SuccessResponse"
+            }
+          },
+          "400": {
+            "description": "Bad Request",
+            "schema": {
+              "$ref": "#/definitions/ValidationErrorResponse"
+            }
+          }
+        },
+        "operationId": "build_createRepositoryConfiguration",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "build"
+        ]
+      },
+      "delete": {
+        "description": "Removes the configuration for the respository",
+        "parameters": [
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/SuccessResponse"
+            }
+          },
+          "400": {
+            "description": "Bad Request",
+            "schema": {
+              "$ref": "#/definitions/ValidationErrorResponse"
+            }
+          }
+        },
+        "operationId": "build_deleteRepositoryConfiguration",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "build"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/releases/{release_id}": {
+      "get": {
+        "description": "Get a release with id `release_id`. if `release_id` is `latest`, return the latest release that was distributed to the current user (from all the distribution groups).",
+        "operationId": "getRelease",
+        "parameters": [
+          {
+            "name": "release_id",
+            "type": "string",
+            "in": "path",
+            "description": "The ID of the release, or `latest` to get the latest release from all the distribution groups assigned to the current user.",
+            "required": true
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/ReleaseDetails"
+            }
+          },
+          "400": {
+            "description": "<b>bad_request</b>: `release_id` is not a number or the string `latest`.\n",
+            "schema": {
+              "$ref": "#/definitions/ErrorDetails"
+            }
+          },
+          "404": {
+            "description": "<b>not_found</b> - A release or an app can't be found.\n",
+            "schema": {
+              "$ref": "#/definitions/ErrorDetails"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "distribute"
+        ]
+      },
+      "patch": {
+        "description": "Updates a release.",
+        "parameters": [
+          {
+            "name": "release_id",
+            "type": "number",
+            "in": "path",
+            "description": "The ID of the release",
+            "required": true
+          },
+          {
+            "name": "body",
+            "in": "body",
+            "description": "The release information.",
+            "required": true,
+            "schema": {
+              "$ref": "#/definitions/ReleaseUpdateRequest"
+            }
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/ReleaseDetails"
+            }
+          },
+          "400": {
+            "description": "<b>not_supported</b>: Trying to change a distribution group. Currently this operation is not supported.   \n",
+            "schema": {
+              "$ref": "#/definitions/ErrorDetails"
+            }
+          }
+        },
+        "operationId": "updateRelease",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "distribute"
+        ]
+      },
+      "delete": {
+        "description": "Deletes a release.",
+        "parameters": [
+          {
+            "name": "release_id",
+            "type": "string",
+            "in": "path",
+            "description": "The ID of the release",
+            "required": true
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success"
+          },
+          "404": {
+            "description": "<b>not_found</b>: An app or a release couldn't be found\n",
+            "schema": {
+              "$ref": "#/definitions/ErrorDetails"
+            }
+          },
+          "500": {
+            "description": "An internal error. Delete can partially fail. If that happens partially_deleted error_code is returned.<br>\n<b>partially_deleted</b>: Release was removed from all distribution groups, but couldn't be deleted from Mobile Center.\n",
+            "schema": {
+              "$ref": "#/definitions/ErrorDetails"
+            }
+          }
+        },
+        "operationId": "deleteRelease",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "distribute"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/releases": {
+      "get": {
+        "description": "Return detailed information about releases.",
+        "parameters": [
+          {
+            "name": "published_only",
+            "type": "boolean",
+            "in": "query",
+            "description": "when true, filters out releases that were uplaoded but were never distributed. Releases that under deleted distribution groups will not be filtered out.",
+            "required": false
+          },
+          {
+            "name": "$filter",
+            "type": "string",
+            "in": "query",
+            "description": "OBSOLETE. Will be removed in next version. An OData style filter. Currently only support the 'eq' comparision type. E.g. ?$filter=status eq 'Available'",
+            "required": false
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "type": "array",
+              "items": {
+                "$ref": "#/definitions/ReleaseDetails"
+              }
+            }
+          }
+        },
+        "operationId": "getReleases",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "distribute"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/release_uploads/{upload_id}": {
+      "patch": {
+        "description": "Commits or aborts the upload process for a release for the specified application",
+        "parameters": [
+          {
+            "name": "upload_id",
+            "type": "string",
+            "in": "path",
+            "description": "The ID of the upload",
+            "required": true
+          },
+          {
+            "name": "body",
+            "in": "body",
+            "description": "The release information",
+            "required": true,
+            "schema": {
+              "$ref": "#/definitions/ReleaseUploadEndRequest"
+            }
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/ReleaseUploadEndResponse"
+            }
+          },
+          "400": {
+            "description": "Unknown upload_id or status was committed but the upload hasn't finished."
+          }
+        },
+        "operationId": "updateReleaseUpload",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "distribute"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/release_uploads": {
+      "post": {
+        "description": "Begins the upload process for a new release for the specified application.",
+        "parameters": [
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "201": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/ReleaseUploadBeginResponse"
+            }
+          }
+        },
+        "operationId": "createReleaseUpload",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "distribute"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/recent_releases": {
+      "get": {
+        "description": "Get the latest release from every distribution group associated with an application.",
+        "operationId": "getLatestReleases",
+        "parameters": [
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "type": "array",
+              "items": {
+                "$ref": "#/definitions/BasicReleaseDetails"
+              }
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "distribute"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/recent_packages": {},
+    "/v0.1/apps/{owner_name}/{app_name}/packages/{package_id}": {},
+    "/v0.1/apps/{owner_name}/{app_name}/packages": {},
+    "/v0.1/apps/{owner_name}/{app_name}/package_uploads/{upload_id}": {},
+    "/v0.1/apps/{owner_name}/{app_name}/package_uploads": {},
+    "/v0.1/apps/{owner_name}/{app_name}/invitations/{user_email}": {
+      "post": {
+        "deprecated": true,
+        "description": "Invites a new or existing user to an app",
+        "parameters": [
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          },
+          {
+            "name": "user_email",
+            "type": "string",
+            "in": "path",
+            "description": "The email of the user to invite",
+            "required": true
+          }
+        ],
+        "responses": {
+          "204": {
+            "description": "Success"
+          },
+          "400": {
+            "description": "BadRequest",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          },
+          "403": {
+            "description": "Forbidden",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          },
+          "404": {
+            "description": "NotFound",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          },
+          "409": {
+            "description": "Conflict",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          }
+        },
+        "operationId": "deprecated_inviteAppUser",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "account"
+        ]
+      },
+      "patch": {
+        "description": "Update pending invitation permission",
+        "parameters": [
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          },
+          {
+            "name": "user_email",
+            "type": "string",
+            "in": "path",
+            "description": "The email of the user to invite",
+            "required": true
+          },
+          {
+            "name": "user_invitation_permissions_data",
+            "in": "body",
+            "description": "The value to update the user permission in the invite.",
+            "schema": {
+              "$ref": "#/definitions/UserInvitationPermissionsUpdateRequest"
+            }
+          }
+        ],
+        "responses": {
+          "204": {
+            "description": "Success"
+          },
+          "400": {
+            "description": "BadRequest",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          },
+          "403": {
+            "description": "Forbidden",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          },
+          "404": {
+            "description": "NotFound",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          }
+        },
+        "operationId": "updateAppUserInvitationsPermission",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "account"
+        ]
+      },
+      "delete": {
+        "description": "Removes a user's invitation to an app",
+        "parameters": [
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          },
+          {
+            "name": "user_email",
+            "type": "string",
+            "in": "path",
+            "description": "The email of the user to invite",
+            "required": true
+          }
+        ],
+        "responses": {
+          "204": {
+            "description": "Success"
+          },
+          "400": {
+            "description": "BadRequest",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          },
+          "403": {
+            "description": "Forbidden",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          },
+          "404": {
+            "description": "NotFound",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          }
+        },
+        "operationId": "deleteAppInvitation",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "account"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/invitations": {
+      "post": {
+        "description": "Invites a new or existing user to an app",
+        "parameters": [
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          },
+          {
+            "name": "user_email",
+            "in": "body",
+            "description": "The email of the user to invite",
+            "schema": {
+              "$ref": "#/definitions/UserEmailRequest"
+            }
+          }
+        ],
+        "responses": {
+          "204": {
+            "description": "Success"
+          },
+          "400": {
+            "description": "BadRequest",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          },
+          "403": {
+            "description": "Forbidden",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          },
+          "404": {
+            "description": "NotFound",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          },
+          "409": {
+            "description": "Conflict",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          }
+        },
+        "operationId": "inviteAppUser",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "account"
+        ]
+      },
+      "get": {
+        "description": "Gets the pending invitations for the app",
+        "parameters": [
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/AppInvitationDetailResponse"
+            }
+          },
+          "403": {
+            "description": "Forbidden",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          },
+          "404": {
+            "description": "NotFound",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          }
+        },
+        "operationId": "getAppInvitations",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "account"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}/releases/{release_id}": {
+      "get": {
+        "operationId": "getLatestReleaseForDistributionGroup",
+        "description": "Return detailed information about a distributed release in a given distribution group.",
+        "parameters": [
+          {
+            "name": "distribution_group_name",
+            "type": "string",
+            "in": "path",
+            "description": "The name of the distribution group.",
+            "required": true
+          },
+          {
+            "name": "release_id",
+            "type": "string",
+            "in": "path",
+            "description": "Must be `latest`, a specific `release_id` is not supported at this time.",
+            "required": true
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/ReleaseDetails"
+            }
+          },
+          "404": {
+            "description": "1. error code - not_found - Distribution group or the app doesn't exist.<br>  \n2. error code - no_releases_for_app - App has no releases.\n",
+            "schema": {
+              "$ref": "#/definitions/ErrorDetails"
+            }
+          },
+          "501": {
+            "description": "<b>not_implemented</b> - Cannot request a specific release_id.\n",
+            "schema": {
+              "$ref": "#/definitions/ErrorDetails"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "distribute"
+        ]
+      },
+      "delete": {
+        "operationId": "deleteReleaseForDistributionGroup",
+        "description": "Deletes a release with id 'release_id' in a given distribution group.",
+        "parameters": [
+          {
+            "name": "distribution_group_name",
+            "type": "string",
+            "in": "path",
+            "description": "The name of the distribution group.",
+            "required": true
+          },
+          {
+            "name": "release_id",
+            "type": "string",
+            "in": "path",
+            "description": "The ID identifying the unique release.",
+            "required": true
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/ReleaseDeleteResponse"
+            }
+          },
+          "404": {
+            "description": "1. error code - distribution_group_not_found - Distribution group or the app doesn't exist.<br>  \n2. error code - not_found - Not found.\n",
+            "schema": {
+              "$ref": "#/definitions/ErrorDetails"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "distribute"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}/releases": {
+      "get": {
+        "operationId": "getReleasesForDistributionGroup",
+        "description": "Return detailed information about distributed releases in a given distribution group.",
+        "parameters": [
+          {
+            "name": "distribution_group_name",
+            "type": "string",
+            "in": "path",
+            "description": "The name of the distribution group.",
+            "required": true
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "type": "array",
+              "items": {
+                "$ref": "#/definitions/ReleaseDetails"
+              }
+            }
+          },
+          "404": {
+            "description": "<b>not_found</b>: A distribution group can't be found.\n",
+            "schema": {
+              "$ref": "#/definitions/ErrorDetails"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "distribute"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}/packages/{package_id}": {},
+    "/v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}/packages": {},
+    "/v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}/members": {
+      "get": {
+        "description": "Returns a list of member details in the distribution group specified",
+        "parameters": [
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          },
+          {
+            "name": "distribution_group_name",
+            "type": "string",
+            "in": "path",
+            "description": "The name of the distribution group",
+            "required": true
+          },
+          {
+            "name": "exclude_pending_invitations",
+            "type": "boolean",
+            "in": "query",
+            "description": "Whether to exclude pending invitations in the response",
+            "required": false
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "type": "array",
+              "items": {
+                "$ref": "#/definitions/DistributionGroupUserGetResponse"
+              }
+            }
+          },
+          "403": {
+            "description": "Forbidden",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          },
+          "404": {
+            "description": "NotFound",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          }
+        },
+        "operationId": "getDistributionGroupUsers",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "account"
+        ]
+      },
+      "post": {
+        "description": "Adds the members to the specified distribution group",
+        "parameters": [
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          },
+          {
+            "name": "distribution_group_name",
+            "type": "string",
+            "in": "path",
+            "description": "The name of the distribution group",
+            "required": true
+          },
+          {
+            "name": "members",
+            "in": "body",
+            "description": "The list of members to add",
+            "required": true,
+            "schema": {
+              "$ref": "#/definitions/DistributionGroupUserRequest"
             }
-        }
-    },
-    "definitions": {
-        "GetInAppUpdateTokenResponse": {
-            "properties": {
-                "api_token": {
-                    "type": "string",
-                    "description": "The api token generated will not be accessible again"
-                }
-            },
-            "required": [
-                "api_token"
-            ]
-        },
-        "ApiTokensCreateResponse": {
-            "properties": {
-                "id": {
-                    "type": "string",
-                    "description": "The unique id (UUID) of the api token"
-                },
-                "api_token": {
-                    "type": "string",
-                    "description": "The api token generated will not be accessible again"
-                },
-                "description": {
-                    "type": "string",
-                    "description": "The description of the token"
-                },
-                "created_at": {
-                    "type": "string",
-                    "description": "The creation time"
-                }
+          }
+        ],
+        "responses": {
+          "200": {
+            "schema": {
+              "type": "array",
+              "items": {
+                "$ref": "#/definitions/DistributionGroupUserPostResponse"
+              }
             },
-            "required": [
-                "id",
-                "created_at",
-                "api_token"
-            ]
-        },
-        "ApiTokensCreateRequest": {
-            "properties": {
-                "description": {
-                    "type": "string",
-                    "description": "The description of the token"
-                }
+            "description": "Success"
+          },
+          "400": {
+            "description": "BadRequest",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
             }
-        },
-        "ApiTokensGetResponse": {
-            "properties": {
-                "id": {
-                    "type": "string",
-                    "description": "The unique id (UUID) of the api token"
-                },
-                "description": {
-                    "type": "string",
-                    "description": "The description of the token"
-                },
-                "created_at": {
-                    "type": "string",
-                    "description": "The creation time"
-                }
-            },
-            "required": [
-                "id",
-                "created_at"
-            ]
-        },
-        "Status": {
-            "required": [
-                "status"
-            ],
-            "properties": {
-                "status": {
-                    "type": "string"
-                }
+          },
+          "403": {
+            "description": "Forbidden",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
             }
-        },
-        "Failure": {
-            "required": [
-                "message"
-            ],
-            "properties": {
-                "message": {
-                    "type": "string"
-                }
+          },
+          "404": {
+            "description": "NotFound",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          }
+        },
+        "operationId": "createDistributionGroupUsers",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "account"
+        ]
+      },
+      "delete": {
+        "description": "Remove the users from the distribution group",
+        "parameters": [
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          },
+          {
+            "name": "distribution_group_name",
+            "type": "string",
+            "in": "path",
+            "description": "The name of the distribution group",
+            "required": true
+          },
+          {
+            "name": "members",
+            "in": "body",
+            "description": "The list of members to add",
+            "required": true,
+            "schema": {
+              "$ref": "#/definitions/DistributionGroupUserRequest"
             }
-        },
-        "ErrorResponse": {
-            "type": "object",
-            "properties": {
-                "error": {
-                    "$ref": "#/definitions/ErrorDetails"
-                }
-            },
-            "required": [
-                "error"
-            ]
-        },
-        "ErrorDetails": {
-            "properties": {
-                "code": {
-                    "type": "string",
-                    "enum": [
-                        "BadRequest",
-                        "Conflict",
-                        "NotAcceptable",
-                        "NotFound",
-                        "InternalServerError",
-                        "Unauthorized"
-                    ]
-                },
-                "message": {
-                    "type": "string"
-                }
+          }
+        ],
+        "responses": {
+          "200": {
+            "schema": {
+              "$ref": "#/definitions/DistributionGroupUserDeleteResponse"
             },
-            "required": [
-                "code",
-                "message"
-            ]
-        },
-        "SuccessResponse": {
-            "required": [
-                "message"
-            ],
-            "properties": {
-                "message": {
-                    "type": "string"
-                }
+            "description": "Success"
+          },
+          "400": {
+            "description": "BadRequest",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
             }
-        },
-        "AppPatchRequest": {
-            "properties": {
-                "description": {
-                    "description": "A short text describing the app",
-                    "type": "string"
-                },
-                "display_name": {
-                    "description": "The display name of the app",
-                    "type": "string"
-                },
-                "name": {
-                    "description": "The name of the app used in URLs",
-                    "type": "string"
-                }
+          },
+          "403": {
+            "description": "Forbidden",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
             }
-        },
-        "AppRequest": {
-            "properties": {
-                "description": {
-                    "description": "A short text describing the app",
-                    "type": "string"
-                },
-                "display_name": {
-                    "description": "The descriptive name of the app. This can contain any characters",
-                    "type": "string"
-                },
-                "name": {
-                    "description": "The name of the app used in URLs",
-                    "type": "string"
-                },
-                "os": {
-                    "description": "The OS the app will be running on",
-                    "type": "string",
-                    "enum": [
-                        "iOS",
-                        "Android"
-                    ]
-                },
-                "platform": {
-                    "description": "The platform of the app",
-                    "type": "string",
-                    "enum": [
-                        "Objective-C-Swift",
-                        "Java",
-                        "React-Native",
-                        "Xamarin"
-                    ]
-                }
-            },
-            "required": [
-                "display_name",
-                "os",
-                "platform"
-            ]
-        },
-        "DistributionGroupPatchRequest": {
-            "properties": {
-                "name": {
-                    "description": "The name of the distribution group",
-                    "type": "string"
-                }
+          },
+          "404": {
+            "description": "NotFound",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          }
+        },
+        "operationId": "deleteDistributionGroupUsers",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "account"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}": {
+      "get": {
+        "description": "Returns a single distribution group for a given distribution group name",
+        "parameters": [
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          },
+          {
+            "name": "distribution_group_name",
+            "type": "string",
+            "in": "path",
+            "description": "The name of the distribution group",
+            "required": true
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/DistributionGroupResponse"
             }
-        },
-        "DistributionGroupRequest": {
-            "properties": {
-                "name": {
-                    "description": "The name of the distribution group",
-                    "type": "string"
-                }
-            },
-            "required": [
-                "name"
-            ]
-        },
-        "DistributionGroupUserRequest": {
-            "properties": {
-                "user_emails": {
-                    "description": "The list of emails of the users",
-                    "type": "array",
-                    "items": {
-                        "type": "string"
-                    }
-                }
+          },
+          "400": {
+            "description": "BadRequest",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
             }
-        },
-        "FeaturePatchRequest": {
-            "properties": {
-                "description": {
-                    "description": "The friendly name of the feature",
-                    "type": "string"
-                },
-                "display_name": {
-                    "description": "The full (friendly) name of the feature.",
-                    "type": "string"
-                },
-                "state": {
-                    "description": "The state of the feature",
-                    "type": "integer"
-                }
+          },
+          "403": {
+            "description": "Forbidden",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
             }
-        },
-        "FeatureCreateRequest": {
-            "properties": {
-                "name": {
-                    "type": "string",
-                    "description": "The unique name of the feature"
-                },
-                "display_name": {
-                    "type": "string",
-                    "description": "The full (friendly) name of the feature."
-                },
-                "state": {
-                    "type": "integer",
-                    "description": "The state of the feature"
-                },
-                "description": {
-                    "type": "string",
-                    "description": "The friendly name of the feature"
-                }
-            },
-            "required": [
-                "name",
-                "display_name"
-            ]
-        },
-        "GrantAdminRoleRequest": {
-            "properties": {
-                "admin_role": {
-                    "description": "The new admin_role",
-                    "type": "string",
-                    "enum": [
-                        "superAdmin",
-                        "admin",
-                        "devOps",
-                        "notAdmin"
-                    ]
-                }
-            },
-            "required": [
-                "admin_role"
-            ]
-        },
-        "OrgPatchRequest": {
-            "properties": {
-                "description": {
-                    "description": "The organization's description",
-                    "type": "string"
-                },
-                "display_name": {
-                    "description": "The full (friendly) name of the organization.",
-                    "type": "string"
-                }
+          },
+          "404": {
+            "description": "NotFound",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          }
+        },
+        "operationId": "getDistributionGroup",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "account"
+        ]
+      },
+      "patch": {
+        "description": "Updates the attributes of distribution group",
+        "parameters": [
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          },
+          {
+            "name": "distribution_group_name",
+            "type": "string",
+            "in": "path",
+            "description": "The name of the distribution group",
+            "required": true
+          },
+          {
+            "name": "distribution_group",
+            "in": "body",
+            "description": "The attributes to update for the distribution group",
+            "required": true,
+            "schema": {
+              "$ref": "#/definitions/DistributionGroupPatchRequest"
             }
-        },
-        "OrganizationRequest": {
-            "properties": {
-                "display_name": {
-                    "description": "The display name of the organization",
-                    "type": "string"
-                },
-                "email": {
-                    "type": "string",
-                    "description": "The billing email address of the organization"
-                },
-                "name": {
-                    "description": "The name of the organization used in URLs",
-                    "type": "string"
-                }
-            },
-            "required": [
-                "name"
-            ]
-        },
-        "UserUpdateRequest": {
-            "properties": {
-                "display_name": {
-                    "description": "The full name of the user. Might for example be first and last name",
-                    "type": "string"
-                }
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/DistributionGroupResponse"
             }
-        },
-        "UserUpdateRequestInternal": {
-            "properties": {
-                "display_name": {
-                    "description": "The full name of the user. Might for example be first and last name",
-                    "type": "string"
-                },
-                "name": {
-                    "description": "The new, unique name that is used to identify.",
-                    "type": "string"
-                },
-                "next_nps_survey_date": {
-                    "description": "The date in the future when the user should be checked again for NPS eligibility",
-                    "type": "string"
-                }
+          },
+          "400": {
+            "description": "BadRequest",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
             }
-        },
-        "AppInvitationDetailResponse": {
-            "properties": {
-                "id": {
-                    "description": "The unique ID (UUID) of the invitation",
-                    "type": "string"
-                },
-                "app": {
-                    "$ref": "#/definitions/AppResponse"
-                },
-                "email": {
-                    "description": "The email address of the invited user",
-                    "type": "string"
-                },
-                "invite_type": {
-                    "description": "The invitation type",
-                    "type": "string",
-                    "enum": [
-                        "developer",
-                        "tester"
-                    ]
-                },
-                "invited_by": {
-                    "$ref": "#/definitions/UserProfileResponse"
-                },
-                "is_existing_user": {
-                    "description": "Indicates whether the invited user already exists",
-                    "type": "boolean"
-                }
-            },
-            "required": [
-                "id",
-                "email",
-                "is_existing_user",
-                "invited_by",
-                "invite_type",
-                "app"
-            ]
-        },
-        "AppResponse": {
-            "properties": {
-                "id": {
-                    "description": "The unique ID (UUID) of the app",
-                    "type": "string"
-                },
-                "app_secret": {
-                    "description": "A unique and secret key used to identify the app in communication with the ingestion endpoint for crash reporting and analytics",
-                    "type": "string"
-                },
-                "azure_subscription_id": {
-                    "description": "The unique ID (UUID) of the Azure subscription associate with the app",
-                    "type": "string"
-                },
-                "description": {
-                    "description": "The description of the app",
-                    "type": "string"
-                },
-                "display_name": {
-                    "description": "The display name of the app",
-                    "type": "string"
-                },
-                "icon_url": {
-                    "description": "The string representation of the URL pointing to the app's icon",
-                    "type": "string"
-                },
-                "name": {
-                    "description": "The name of the app used in URLs",
-                    "type": "string"
-                },
-                "os": {
-                    "description": "The OS the app will be running on",
-                    "type": "string",
-                    "enum": [
-                        "iOS",
-                        "Android"
-                    ]
-                },
-                "owner": {
-                    "$ref": "#/definitions/Owner"
-                },
-                "platform": {
-                    "description": "The platform of the app",
-                    "type": "string",
-                    "enum": [
-                        "Objective-C-Swift",
-                        "Java",
-                        "React-Native",
-                        "Xamarin"
-                    ]
-                }
-            },
-            "required": [
-                "id",
-                "app_secret",
-                "display_name",
-                "name",
-                "os",
-                "owner",
-                "platform"
-            ]
-        },
-        "DistributionGroupResponse": {
-            "properties": {
-                "id": {
-                    "description": "The unique ID of the distribution group",
-                    "type": "string"
-                },
-                "name": {
-                    "description": "The name of the distribution group used in URLs",
-                    "type": "string"
-                }
-            },
-            "required": [
-                "id",
-                "name"
-            ]
-        },
-        "DistributionGroupUserDeleteResponse": {
-            "properties": {
-                "code": {
-                    "description": "The code of the result",
-                    "type": "string"
-                },
-                "message": {
-                    "description": "The message of the result",
-                    "type": "integer"
-                },
-                "status": {
-                    "description": "The status code of the result",
-                    "type": "integer"
-                },
-                "user_email": {
-                    "description": "The email of the user",
-                    "type": "string"
-                }
-            },
-            "required": [
-                "status"
-            ]
-        },
-        "DistributionGroupUserGetResponse": {
-            "properties": {
-                "id": {
-                    "description": "The unique id (UUID) of the user",
-                    "type": "string"
-                },
-                "avatar_url": {
-                    "description": "The avatar URL of the user",
-                    "type": "string"
-                },
-                "can_change_password": {
-                    "description": "User is required to send an old password in order to change the password.",
-                    "type": "boolean"
-                },
-                "display_name": {
-                    "description": "The full name of the user. Might for example be first and last name",
-                    "type": "string"
-                },
-                "email": {
-                    "description": "The email address of the user",
-                    "type": "string"
-                },
-                "invite_pending": {
-                    "description": "Whether the has accepted the invite. Available when an invite is pending, and the value will be \"true\".",
-                    "type": "boolean"
-                },
-                "name": {
-                    "description": "The unique name that is used to identify the user.",
-                    "type": "string"
-                }
-            },
-            "required": [
-                "email"
-            ]
-        },
-        "DistributionGroupUserPostResponse": {
-            "properties": {
-                "code": {
-                    "description": "The code of the result",
-                    "type": "string"
-                },
-                "invite_pending": {
-                    "description": "Whether the has accepted the invite. Available when an invite is pending, and the value will be \"true\".",
-                    "type": "boolean"
-                },
-                "message": {
-                    "description": "The message of the result",
-                    "type": "integer"
-                },
-                "status": {
-                    "description": "The status code of the result",
-                    "type": "integer"
-                },
-                "user_email": {
-                    "description": "The email of the user",
-                    "type": "string"
-                }
-            },
-            "required": [
-                "status"
-            ]
-        },
-        "DistributionGroupWithUsersResponse": {
-            "properties": {
-                "id": {
-                    "description": "The unique ID of the distribution group",
-                    "type": "string"
-                },
-                "name": {
-                    "description": "The name of the distribution group used in URLs",
-                    "type": "string"
-                },
-                "total_user_count": {
-                    "description": "The count of users in the distribution group",
-                    "type": "number"
-                },
-                "users": {
-                    "description": "The distribution group users",
-                    "items": {
-                        "$ref": "#/definitions/DistributionGroupUserGetResponse"
-                    },
-                    "type": "array"
-                }
-            },
-            "required": [
-                "id",
-                "name",
-                "users",
-                "total_user_count"
-            ]
-        },
-        "FeatureNameResponse": {
-            "properties": {
-                "name": {
-                    "description": "The unique name of the feature",
-                    "type": "string"
-                }
-            },
-            "required": [
-                "name"
-            ]
-        },
-        "FeatureResponse": {
-            "properties": {
-                "description": {
-                    "description": "The description of the feature",
-                    "type": "string"
-                },
-                "display_name": {
-                    "description": "The friendly name of the feature",
-                    "type": "string"
-                },
-                "name": {
-                    "description": "The unique name of the feature",
-                    "type": "string"
-                },
-                "state": {
-                    "description": "The state (unset, enabled, disabled) of the feature",
-                    "type": "integer"
-                }
-            },
-            "required": [
-                "name",
-                "display_name",
-                "state"
-            ]
-        },
-        "OrgNameAvailabilityResponse": {
-            "properties": {
-                "available": {
-                    "description": "The availability status of the requested org name",
-                    "type": "boolean"
-                },
-                "name": {
-                    "description": "The generated org name",
-                    "type": "string"
-                }
-            },
-            "required": [
-                "available",
-                "name"
-            ]
-        },
-        "OrganizationResponse": {
-            "properties": {
-                "id": {
-                    "description": "The unique id (UUID) of the organization",
-                    "type": "string"
-                },
-                "display_name": {
-                    "description": "The display name of the organization",
-                    "type": "string"
-                },
-                "name": {
-                    "description": "The slug name of the organization",
-                    "type": "string"
-                }
-            },
-            "required": [
-                "id",
-                "display_name",
-                "name"
-            ]
-        },
-        "OrganizationUserResponse": {
-            "properties": {
-                "email": {
-                    "type": "string",
-                    "description": "The email address of the user"
-                },
-                "display_name": {
-                    "type": "string",
-                    "description": "The full name of the user. Might for example be first and last name"
-                },
-                "name": {
-                    "type": "string",
-                    "description": "The unique name that is used to identify the user."
-                }
-            },
-            "required": [
-                "display_name",
-                "email",
-                "name"
-            ]
-        },
-        "UserNameAvailabilityResponse": {
-            "properties": {
-                "available": {
-                    "description": "The availability status of the requested user name",
-                    "type": "boolean"
-                },
-                "name": {
-                    "description": "The requested user name",
-                    "type": "string"
-                }
-            },
-            "required": [
-                "available",
-                "name"
-            ]
-        },
-        "UserProfileResponse": {
-            "properties": {
-                "id": {
-                    "description": "The unique id (UUID) of the user",
-                    "type": "string"
-                },
-                "avatar_url": {
-                    "description": "The avatar URL of the user",
-                    "type": "string"
-                },
-                "can_change_password": {
-                    "description": "User is required to send an old password in order to change the password.",
-                    "type": "boolean"
-                },
-                "display_name": {
-                    "description": "The full name of the user. Might for example be first and last name",
-                    "type": "string"
-                },
-                "email": {
-                    "description": "The email address of the user",
-                    "type": "string"
-                },
-                "name": {
-                    "description": "The unique name that is used to identify the user.",
-                    "type": "string"
-                }
-            },
-            "required": [
-                "id",
-                "display_name",
-                "email",
-                "name"
-            ]
-        },
-        "Owner": {
-            "description": "The information about the app's owner",
-            "properties": {
-                "id": {
-                    "description": "The unique id (UUID) of the owner",
-                    "type": "string"
-                },
-                "avatar_url": {
-                    "description": "The avatar URL of the owner",
-                    "type": "string"
-                },
-                "display_name": {
-                    "description": "The owner's display name",
-                    "type": "string"
-                },
-                "email": {
-                    "description": "The owner's email address",
-                    "type": "string"
-                },
-                "name": {
-                    "description": "The unique name that used to identify the owner",
-                    "type": "string"
-                },
-                "type": {
-                    "description": "The owner type. Can either be 'org' or 'user'",
-                    "type": "string",
-                    "enum": [
-                        "org",
-                        "user"
-                    ]
-                }
-            },
-            "required": [
-                "id",
-                "display_name",
-                "email",
-                "name",
-                "type"
-            ]
-        },
-        "SourceRepository": {
-            "description": "The source repository",
-            "properties": {
-                "name": {
-                    "description": "The repository name",
-                    "type": "string"
-                }
+          },
+          "403": {
+            "description": "Forbidden",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
             }
-        },
-        "SourceRepositories": {
-            "description": "A list of source repositories",
-            "type": "array",
-            "items": {
-                "$ref": "#/definitions/SourceRepository"
+          },
+          "404": {
+            "description": "NotFound",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          }
+        },
+        "operationId": "updateDistributionGroup",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "account"
+        ]
+      },
+      "delete": {
+        "description": "Deletes a distribution group",
+        "parameters": [
+          {
+            "$ref": "#/parameters/app_name"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "name": "distribution_group_name",
+            "type": "string",
+            "in": "path",
+            "description": "The name of the distribution group",
+            "required": true
+          }
+        ],
+        "responses": {
+          "204": {
+            "description": "Success"
+          },
+          "400": {
+            "description": "BadRequest",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
             }
-        },
-        "WebSocketContainer": {
-            "description": "A websocket reference",
-            "properties": {
-                "url": {
-                    "type": "string",
-                    "description": "WebSocket URL"
-                }
-            },
-            "required": [
-                "url"
-            ]
-        },
-        "XcodeScheme": {
-            "properties": {
-                "name": {
-                    "description": "Scheme name",
-                    "type": "string"
-                },
-                "hasTestAction": {
-                    "description": "Does scheme have a test action?",
-                    "type": "boolean"
-                }
-            },
-            "required": [
-                "name",
-                "hasTestAction"
-            ]
-        },
-        "XcodeSchemeContainer": {
-            "properties": {
-                "path": {
-                    "description": "Path to project",
-                    "type": "string"
-                },
-                "sharedSchemes": {
-                    "description": "Project schemes",
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/XcodeScheme"
-                    }
-                },
-                "podfilePath": {
-                    "description": "Path to CococaPods file, if present",
-                    "type": "string"
-                }
-            },
-            "required": [
-                "path",
-                "sharedSchemes"
-            ]
-        },
-        "XamarinSolution": {
-            "properties": {
-                "path": {
-                    "description": "Path to solution",
-                    "type": "string"
-                },
-                "configurations": {
-                    "description": "Solution configurations",
-                    "type": "array",
-                    "items": {
-                        "type": "string"
-                    }
-                }
-            },
-            "required": [
-                "path",
-                "configurations"
-            ]
-        },
-        "AndroidProject": {
-            "properties": {
-                "androidModules": {
-                    "description": "Android Gradle modules",
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/AndroidModule"
-                    }
-                },
-                "gradleWrapperPath": {
-                    "description": "The path of the Gradle wrapper",
-                    "type": "string"
-                }
-            },
-            "required": [
-                "androidModules"
-            ]
-        },
-        "AndroidModule": {
-            "properties": {
-                "name": {
-                    "description": "Name of the Android module",
-                    "type": "string"
-                },
-                "productFlavors": {
-                    "description": "The product flavors of the Android module",
-                    "type": "array",
-                    "items": {
-                        "type": "string"
-                    }
-                },
-                "buildVariants": {
-                    "description": "The build variants of the Android module (matrix of product flavor + build type (debug|release))",
-                    "type": "array",
-                    "items": {
-                        "type": "string"
-                    }
-                }
-            },
-            "required": [
-                "name"
-            ]
-        },
-        "ToolsetProjects": {
-            "description": "A collection of projects for each type of toolset",
-            "properties": {
-                "xcode": {
-                    "description": "Xcode projects, with their schemes",
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/XcodeSchemeContainer"
-                    }
-                },
-                "javascript": {
-                    "description": "package.json filess",
-                    "type": "array",
-                    "items": {
-                        "type": "string"
-                    }
-                },
-                "xamarin": {
-                    "description": "Xamarin solutions",
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/XamarinSolution"
-                    }
-                },
-                "android": {
-                    "$ref": "#/definitions/AndroidProject"
-                }
+          },
+          "403": {
+            "description": "Forbidden",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          },
+          "404": {
+            "description": "NotFound",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          }
+        },
+        "operationId": "deleteDistributionGroup",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "account"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/distribution_groups": {
+      "get": {
+        "description": "Returns a list of distribution groups in the app specified",
+        "parameters": [
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "type": "array",
+              "items": {
+                "$ref": "#/definitions/DistributionGroupResponse"
+              }
+            }
+          },
+          "403": {
+            "description": "Forbidden",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          },
+          "404": {
+            "description": "NotFound",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          }
+        },
+        "operationId": "getDistributionGroups",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "account"
+        ]
+      },
+      "post": {
+        "description": "Creates a new distribution group and returns it to the caller",
+        "parameters": [
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          },
+          {
+            "name": "distribution_group",
+            "in": "body",
+            "description": "The data for the distribution group",
+            "required": true,
+            "schema": {
+              "$ref": "#/definitions/DistributionGroupRequest"
             }
-        },
-        "BranchStatusCollection": {
-            "description": "A collection of branch status",
-            "type": "array",
-            "items": {
-                "$ref": "#/definitions/BranchStatus"
+          }
+        ],
+        "responses": {
+          "201": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/DistributionGroupResponse"
             }
-        },
-        "BranchStatus": {
-            "description": "The branch build status",
-            "properties": {
-                "configured": {
-                    "type": "boolean"
-                },
-                "lastBuild": {
-                    "$ref": "#/definitions/Build"
-                }
-            },
-            "additionalProperties": {
-                "$ref": "#/definitions/BranchProperties"
-            },
-            "required": [
-                "configured"
-            ]
-        },
-        "BranchProperties": {
-            "description": "The branch build core properties",
-            "properties": {
-                "branch": {
-                    "$ref": "#/definitions/Branch"
-                },
-                "enabled": {
-                    "type": "boolean"
-                }
+          },
+          "400": {
+            "description": "BadRequest",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
             }
-        },
-        "BranchConfiguration": {
-            "description": "The branch build configuration",
-            "properties": {
-                "id": {
-                    "type": "integer"
-                },
-                "trigger": {
-                    "type": "string",
-                    "enum": [
-                        "continous",
-                        "continuous",
-                        "manual"
-                    ]
-                },
-                "testsEnabled": {
-                    "type": "boolean"
-                },
-                "signed": {
-                    "type": "boolean"
-                },
-                "toolsets": {
-                    "$ref": "#/definitions/BranchConfigurationToolsets"
-                }
-            },
-            "additionalProperties": {
-                "$ref": "#/definitions/BranchProperties"
-            },
-            "required": [
-                "id"
-            ]
-        },
-        "BranchConfigurationToolsets": {
-            "description": "The branch build configuration for each toolset",
-            "properties": {
-                "xcode": {
-                    "$ref": "#/definitions/XcodeBranchConfigurationProperties"
-                },
-                "javascript": {
-                    "$ref": "#/definitions/JavaScriptBranchConfigurationProperties"
-                },
-                "xamarin": {
-                    "$ref": "#/definitions/XamarinBranchConfigurationProperties"
-                },
-                "android": {
-                    "$ref": "#/definitions/AndroidBranchConfigurationProperties"
-                }
+          },
+          "403": {
+            "description": "Forbidden",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
             }
-        },
-        "XcodeBranchConfigurationProperties": {
-            "description": "Build configuration when Xcode is part of the build steps",
-            "properties": {
-                "projectOrWorkspacePath": {
-                    "description": "Xcode project/workspace path",
-                    "type": "string"
-                },
-                "podfilePath": {
-                    "description": "Path to CococaPods file, if present",
-                    "type": "string"
-                },
-                "provisioningProfileEncoded": {
-                    "type": "string"
-                },
-                "certificateEncoded": {
-                    "type": "string"
-                },
-                "certificatePassword": {
-                    "type": "string"
-                },
-                "scheme": {
-                    "type": "string"
-                },
-                "xcodeVersion": {
-                    "type": "string"
-                },
-                "provisioningProfileFilename": {
-                    "type": "string"
-                },
-                "certificateFilename": {
-                    "type": "string"
-                },
-                "teamId": {
-                    "type": "string"
-                },
-                "automaticSigning": {
-                    "type": "boolean"
-                }
-            },
-            "required": [
-                "projectOrWorkspacePath",
-                "scheme",
-                "xcodeVersion"
-            ]
-        },
-        "AndroidBranchConfigurationProperties": {
-            "description": "Build configuration for Android projects",
-            "properties": {
-                "gradleWrapperPath": {
-                    "description": "Path to the Gradle wrapper script",
-                    "type": "string"
-                },
-                "module": {
-                    "description": "The Gradle module to build",
-                    "type": "string"
-                },
-                "variant": {
-                    "description": "The Android build variant to build",
-                    "type": "string"
-                },
-                "runTests": {
-                    "description": "Whether to run unit tests during the build (default)",
-                    "type": "boolean",
-                    "default": true
-                },
-                "runLint": {
-                    "description": "Whether to run lint checks during the build (default)",
-                    "type": "boolean",
-                    "default": true
-                }
-            },
-            "required": [
-                "module",
-                "variant"
-            ]
-        },
-        "JavaScriptBranchConfigurationProperties": {
-            "description": "Build configuration when React Native, or other JavaScript tech, is part of the build steps",
-            "properties": {
-                "packageJsonPath": {
-                    "description": "Path to package.json file for the main project, e.g. \"package.json\" or \"myapp/package.json\"",
-                    "type": "string"
-                },
-                "runTests": {
-                    "description": "Whether to run Jest unit tests, via npm test, during the build",
-                    "type": "boolean",
-                    "default": true
-                }
-            },
-            "required": [
-                "packageJsonPath"
-            ]
-        },
-        "XamarinBranchConfigurationProperties": {
-            "description": "Build configuration for Xamarin projects",
-            "properties": {
-                "slnPath": {
-                    "type": "string"
-                },
-                "isSimBuild": {
-                    "type": "string"
-                },
-                "args": {
-                    "type": "string"
-                },
-                "configuration": {
-                    "type": "string"
-                },
-                "p12File": {
-                    "type": "string"
-                },
-                "p12Pwd": {
-                    "type": "string"
-                },
-                "provProfile": {
-                    "type": "string"
-                }
-            },
-            "required": [
-                "slnPath",
-                "isSimBuild",
-                "args",
-                "configuration",
-                "p12File",
-                "p12Pwd",
-                "provProfile"
-            ]
-        },
-        "Branch": {
-            "properties": {
-                "name": {
-                    "description": "The branch name",
-                    "type": "string"
-                },
-                "commit": {
-                    "$ref": "#/definitions/Commit"
-                }
-            },
-            "required": [
-                "name",
-                "commit"
-            ]
-        },
-        "Commit": {
-            "properties": {
-                "sha": {
-                    "description": "The commit SHA",
-                    "type": "string"
-                },
-                "url": {
-                    "description": "The URL to the commit",
-                    "type": "string"
-                }
+          },
+          "404": {
+            "description": "NotFound",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
             }
-        },
-        "RepoConfig": {
-            "properties": {
-                "type": {
-                    "description": "Type of repository",
-                    "type": "string"
-                },
-                "state": {
-                    "type": "string",
-                    "enum": [
-                        "unauthorized",
-                        "inactive",
-                        "active"
-                    ],
-                    "description": "State of the configuration"
-                },
-                "repo_url": {
-                    "type": "string",
-                    "description": "URL of the repository"
-                },
-                "id": {
-                    "type": "string",
-                    "description": "Repository identifier"
-                }
-            },
-            "required": [
-                "type",
-                "state"
-            ]
-        },
-        "RepoConfigs": {
-            "description": "A list of repo configurations",
+          },
+          "409": {
+            "description": "Conflict",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          }
+        },
+        "operationId": "createDistributionGroup",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "account"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/device_selection": {
+      "post": {
+        "description": "Creates a short ID for a list of devices",
+        "operationId": "test_createDeviceSelection",
+        "parameters": [
+          {
+            "name": "devices",
             "type": "array",
             "items": {
-                "$ref": "#/definitions/RepoConfig"
-            }
-        },
-        "RepoInfo": {
-            "properties": {
-                "repo_url": {
-                    "type": "string",
-                    "description": "The repository url"
-                }
+              "type": "string"
             },
-            "required": [
-                "repo_url"
-            ]
-        },
-        "Branches": {
-            "description": "A list of branches",
-            "type": "array",
-            "items": {
-                "$ref": "#/definitions/Branch"
+            "in": "formData",
+            "description": "List of device IDs",
+            "required": true
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "$ref": "#/definitions/DeviceSelection"
             }
-        },
-        "XcodeVersions": {
-            "description": "A list of Xcode versions",
-            "type": "array",
-            "items": {
-                "$ref": "#/definitions/XcodeVersion"
+          },
+          "400": {
+            "description": "Invalid list of device IDs",
+            "schema": {
+              "$ref": "#/definitions/TestCloudErrorDetails"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "test"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/device_configurations": {
+      "get": {
+        "description": "Returns a list of available devices",
+        "operationId": "test_getDeviceConfigurations",
+        "parameters": [
+          {
+            "name": "app_upload_id",
+            "type": "string",
+            "format": "uuid",
+            "in": "query",
+            "description": "The ID of the test run",
+            "required": false
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "type": "array",
+              "items": {
+                "$ref": "#/definitions/DeviceConfiguration"
+              }
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "test"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}/releases/{release_label}": {
+      "patch": {
+        "description": "Modifies a CodePush release metadata under the given Deployment",
+        "operationId": "patchRelease",
+        "parameters": [
+          {
+            "$ref": "#/parameters/path_deployment_name"
+          },
+          {
+            "$ref": "#/parameters/path_release_label"
+          },
+          {
+            "name": "release",
+            "description": "Release modification. All fields are optional and only provided fields will get updated.",
+            "in": "body",
+            "required": true,
+            "schema": {
+              "$ref": "#/definitions/LiveUpdateReleaseModification"
+            }
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "204": {
+            "description": "Success"
+          },
+          "default": {
+            "description": "Error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "codepush"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}/releases": {
+      "delete": {
+        "description": "Clears a Deployment of releases",
+        "operationId": "deleteReleases",
+        "parameters": [
+          {
+            "$ref": "#/parameters/path_deployment_name"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "204": {
+            "description": "Success"
+          },
+          "default": {
+            "description": "Error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "codepush"
+        ]
+      },
+      "get": {
+        "description": "Gets the history of releases on a Deployment",
+        "operationId": "getReleases",
+        "parameters": [
+          {
+            "$ref": "#/parameters/path_deployment_name"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "type": "array",
+              "items": {
+                "$ref": "#/definitions/LiveUpdateRelease"
+              }
             }
-        },
-        "XcodeVersion": {
-            "description": "The Xcode version",
-            "properties": {
-                "name": {
-                    "description": "The version name",
-                    "type": "string"
-                },
-                "current": {
-                    "description": "If the version is current",
-                    "type": "boolean"
-                }
+          },
+          "default": {
+            "description": "Error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "codepush"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}/metrics": {
+      "get": {
+        "description": "Gets all releases metrics for specified Deployment",
+        "operationId": "getDeploymentMetrics",
+        "parameters": [
+          {
+            "$ref": "#/parameters/path_deployment_name"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "type": "array",
+              "items": {
+                "$ref": "#/definitions/LiveUpdateReleaseMetric"
+              }
             }
-        },
-        "Builds": {
-            "description": "A list of builds",
-            "type": "array",
-            "items": {
-                "$ref": "#/definitions/Build"
+          },
+          "default": {
+            "description": "Error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "codepush"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}": {
+      "delete": {
+        "description": "Deletes a CodePush Deployment (e.g. 'Staging') for the given app",
+        "operationId": "deleteDeployment",
+        "parameters": [
+          {
+            "$ref": "#/parameters/path_deployment_name"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "204": {
+            "description": "Success"
+          },
+          "default": {
+            "description": "Error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "codepush"
+        ]
+      },
+      "get": {
+        "description": "Gets a CodePush Deployment (e.g. 'Staging') for the given app",
+        "operationId": "getDeployment",
+        "parameters": [
+          {
+            "$ref": "#/parameters/path_deployment_name"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/Deployment"
             }
-        },
-        "BuildParams": {
-            "properties": {
-                "sourceVersion": {
-                    "type": "string",
-                    "description": "Version to build"
-                },
-                "debug": {
-                    "type": "boolean",
-                    "description": "Run build in debug mode"
-                }
+          },
+          "default": {
+            "description": "Error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "codepush"
+        ]
+      },
+      "patch": {
+        "description": "Modifies a CodePush Deployment (e.g. 'Staging') for the given app",
+        "operationId": "patchDeployment",
+        "parameters": [
+          {
+            "$ref": "#/parameters/path_deployment_name"
+          },
+          {
+            "name": "deployment",
+            "description": "Deployment modification. All fields are optional and only provided fields will get updated.",
+            "in": "body",
+            "required": true,
+            "schema": {
+              "$ref": "#/definitions/DeploymentModification"
+            }
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "204": {
+            "description": "Success"
+          },
+          "default": {
+            "description": "Error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "codepush"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/deployments/by_key/{deployment_key}/report_status/download": {
+      "post": {
+        "description": "Report download of specified release",
+        "operationId": "postDownloadStatusMetric",
+        "parameters": [
+          {
+            "$ref": "#/parameters/path_deployment_key"
+          },
+          {
+            "name": "release_metadata",
+            "description": "Deployment status metric properties",
+            "in": "body",
+            "required": true,
+            "schema": {
+              "$ref": "#/definitions/LiveUpdateStatusMetricMetadata"
+            }
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success"
+          },
+          "default": {
+            "description": "Error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "codepush"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/deployments/by_key/{deployment_key}/report_status/deploy": {
+      "post": {
+        "description": "Report Deployment status metric",
+        "operationId": "postDeployStatusMetric",
+        "parameters": [
+          {
+            "$ref": "#/parameters/path_deployment_key"
+          },
+          {
+            "name": "release_metadata",
+            "description": "Deployment status metric properties",
+            "in": "body",
+            "required": true,
+            "schema": {
+              "$ref": "#/definitions/LiveUpdateStatusMetricMetadata"
+            }
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success"
+          },
+          "default": {
+            "description": "Error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "codepush"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/deployments": {
+      "get": {
+        "description": "Gets a list of CodePush deployments (e.g. 'Staging', 'Production') for the given app",
+        "operationId": "getDeployments",
+        "parameters": [
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "type": "array",
+              "items": {
+                "$ref": "#/definitions/Deployment"
+              }
             }
-        },
-        "Build": {
-            "properties": {
-                "id": {
-                    "description": "The build ID",
-                    "type": "integer",
-                    "minimum": 0,
-                    "exclusiveMinimum": true
-                },
-                "buildNumber": {
-                    "description": "The build number",
-                    "type": "string"
-                },
-                "queueTime": {
-                    "description": "The time the build was queued",
-                    "type": "string",
-                    "format": "dateTime"
-                },
-                "startTime": {
-                    "description": "The time the build was started",
-                    "type": "string",
-                    "format": "dateTime"
-                },
-                "finishTime": {
-                    "description": "The time the build was finished",
-                    "type": "string",
-                    "format": "dateTime"
-                },
-                "lastChangedDate": {
-                    "description": "The time the build status was last changed",
-                    "type": "string",
-                    "format": "dateTime"
-                },
-                "status": {
-                    "description": "The build status",
-                    "type": "string"
-                },
-                "result": {
-                    "description": "The build result",
-                    "type": "string"
-                },
-                "sourceBranch": {
-                    "description": "The source branch name",
-                    "type": "string"
-                },
-                "sourceVersion": {
-                    "description": "The source SHA",
-                    "type": "string"
-                }
-            },
-            "required": [
-                "id",
-                "buildNumber",
-                "queueTime",
-                "status",
-                "result",
-                "sourceBranch",
-                "sourceVersion"
-            ]
-        },
-        "BuildPatch": {
-            "properties": {
-                "status": {
-                    "description": "The build status; used to cancel builds",
-                    "type": "string",
-                    "enum": [
-                        "cancelling"
-                    ]
-                }
+          },
+          "default": {
+            "description": "Error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "codepush"
+        ]
+      },
+      "post": {
+        "description": "Creates a CodePush Deployment (e.g. 'Staging') for the given app",
+        "operationId": "postDeployments",
+        "parameters": [
+          {
+            "name": "deployment",
+            "description": "Deployment to be created",
+            "in": "body",
+            "required": true,
+            "schema": {
+              "$ref": "#/definitions/Deployment"
+            }
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "201": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/Deployment"
             }
-        },
-        "ValidationErrorResponse": {
-            "required": [
-                "id",
-                "code",
-                "message"
-            ],
-            "properties": {
-                "id": {
-                    "type": "string"
-                },
-                "code": {
-                    "type": "string"
-                },
-                "message": {
-                    "type": "string"
-                }
+          },
+          "default": {
+            "description": "Error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "codepush"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/crash_groups/{crash_group_id}/stacktrace": {
+      "get": {
+        "description": "Gets a stacktrace for a specific error",
+        "operationId": "getGroupStacktrace",
+        "parameters": [
+          {
+            "$ref": "#/parameters/path_crash_group_id"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/Stacktrace"
             }
-        },
-        "BasicReleaseDetails": {
-            "description": "Basic information on a release",
-            "properties": {
-                "id": {
-                    "description": "ID identifying this unique release.",
-                    "type": "string"
-                },
-                "version": {
-                    "description": "The release's version.<br>\nFor iOS: CFBundleVersion from info.plist.<br>\nFor Android: android:versionCode from AppManifest.xml.\n",
-                    "type": "string"
-                },
-                "short_version": {
-                    "description": "The release's short version.<br>\nFor iOS: CFBundleShortVersionString from info.plist.<br>\nFor Android: android:versionName from AppManifest.xml.  \n",
-                    "type": "string"
-                },
-                "uploaded_at": {
-                    "description": "UTC time in ISO 8601 format of the uploaded time.",
-                    "type": "string"
-                },
-                "distribution_groups": {
-                    "description": "a list of distribution groups that are associated with this release.",
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/DistributionGroup"
-                    }
-                }
+          },
+          "default": {
+            "description": "Error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "crash"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/crash_groups/{crash_group_id}/crashes/{crash_id}/stacktrace": {
+      "get": {
+        "description": "Gets a stacktrace for a specific error",
+        "operationId": "getErrorStacktrace",
+        "parameters": [
+          {
+            "$ref": "#/parameters/path_crash_group_id"
+          },
+          {
+            "$ref": "#/parameters/path_crash_id"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/Stacktrace"
             }
-        },
-        "ReleaseDetails": {
-            "description": "Details of an uploaded release",
-            "properties": {
-                "id": {
-                    "description": "ID identifying this unique release.",
-                    "type": "string"
-                },
-                "status": {
-                    "description": "OBSOLETE. Will be removed in next version. The availability concept is now replaced with distributed. Any 'available' release will be associated with the default distribution group of an app.</br>   \nThe release state.<br> \n<b>available</b>: The uploaded release has been distributed.<br>\n<b>unavailable</b>: The uploaded release is not visible to the user. <br>\n",
-                    "type": "string",
-                    "enum": [
-                        "available",
-                        "unavailable"
-                    ]
-                },
-                "app_name": {
-                    "description": "The app's name (extracted from the uploaded release).",
-                    "type": "string"
-                },
-                "version": {
-                    "description": "The release's version.<br>\nFor iOS: CFBundleVersion from info.plist.\nFor Android: android:versionCode from AppManifest.xml.\n",
-                    "type": "string"
-                },
-                "short_version": {
-                    "description": "The release's short version.<br>\nFor iOS: CFBundleShortVersionString from info.plist.\nFor Android: android:versionName from AppManifest.xml.  \n",
-                    "type": "string"
-                },
-                "release_notes": {
-                    "description": "The release's release notes.",
-                    "type": "string"
-                },
-                "provisioning_profile_name": {
-                    "description": "The release's release notes.",
-                    "type": "string"
-                },
-                "size": {
-                    "description": "The release's size in bytes.",
-                    "type": "number"
-                },
-                "min_os": {
-                    "description": "The release's minimum required operating system.",
-                    "type": "string"
-                },
-                "fingerprint": {
-                    "description": "MD5 checksum of the release binary.",
-                    "type": "string"
-                },
-                "uploaded_at": {
-                    "description": "UTC time in ISO 8601 format of the uploaded time.",
-                    "type": "string"
-                },
-                "download_url": {
-                    "description": "The URL that hosts the binary for this release.",
-                    "type": "string"
-                },
-                "app_icon_url": {
-                    "description": "A URL to the app's icon.",
-                    "type": "string"
-                },
-                "install_url": {
-                    "description": "The href required to install a release on a mobile device. On iOS devices will be prefixed with `itms-services://?action=download-manifest&url=`",
-                    "type": "string"
-                },
-                "distribution_groups": {
-                    "description": "a list of distribution groups that are associated with this release.",
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/DistributionGroup"
-                    }
-                }
+          },
+          "default": {
+            "description": "Error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "crash"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/crash_groups/{crash_group_id}/crashes/{crash_id}": {
+      "get": {
+        "description": "Gets a specific error for an app",
+        "operationId": "getCrash",
+        "parameters": [
+          {
+            "$ref": "#/parameters/path_crash_group_id"
+          },
+          {
+            "$ref": "#/parameters/path_crash_id"
+          },
+          {
+            "$ref": "#/parameters/include_report"
+          },
+          {
+            "$ref": "#/parameters/include_log"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "201": {
+            "description": "Created",
+            "schema": {
+              "$ref": "#/definitions/Crash"
             }
-        },
-        "ReleaseUploadBeginResponse": {
-            "description": "A response containing information pertaining to starting a release upload process",
-            "properties": {
-                "upload_id": {
-                    "description": "The ID for the current upload",
-                    "type": "string"
-                },
-                "upload_url": {
-                    "description": "The URL where the client needs to upload the release to",
-                    "type": "string"
-                }
-            },
-            "required": [
-                "upload_id",
-                "upload_url"
-            ]
-        },
-        "ReleaseUploadEndRequest": {
-            "description": "A request containing information pertaining to complete a release upload process",
-            "properties": {
-                "status": {
-                    "description": "The desired operation for the upload",
-                    "type": "string",
-                    "enum": [
-                        "committed",
-                        "aborted"
-                    ]
-                }
-            },
-            "required": [
-                "status"
-            ]
-        },
-        "ReleaseUploadEndResponse": {
-            "description": "A response containing information about the uploaded release.",
-            "properties": {
-                "release_url": {
-                    "description": "A URL to the new release. If upload was aborted will be null.",
-                    "type": "string"
-                }
+          },
+          "default": {
+            "description": "Error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "crash"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/crash_groups/{crash_group_id}/crashes": {
+      "get": {
+        "description": "Gets all crashes of the app",
+        "operationId": "getCrashes",
+        "parameters": [
+          {
+            "$ref": "#/parameters/path_crash_group_id"
+          },
+          {
+            "$ref": "#/parameters/include_report"
+          },
+          {
+            "$ref": "#/parameters/include_log"
+          },
+          {
+            "$ref": "#/parameters/date_from"
+          },
+          {
+            "$ref": "#/parameters/date_to"
+          },
+          {
+            "$ref": "#/parameters/app_version"
+          },
+          {
+            "$ref": "#/parameters/error_type"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "type": "array",
+              "items": {
+                "$ref": "#/definitions/Crash"
+              }
             }
-        },
-        "ReleaseUpdateRequest": {
-            "description": "A request containing information for updating a release.",
-            "properties": {
-                "distribution_group_name": {
-                    "description": "Name of a distribution group. The release will be associated with this distribution group. If the distribution group doesn't exist a 400 is returned. If both distribution group name and id are passed, the id is taking precedence.",
-                    "type": "string"
-                },
-                "distribution_group_id": {
-                    "description": "Id of a distribution group. The release will be associated with this distribution group. If the distribution group doesn't exist a 400 is returned. If both distribution group name and id are passed, the id is taking precedence.",
-                    "type": "string"
-                },
-                "release_notes": {
-                    "description": "Release notes for this release.",
-                    "type": "string"
-                }
+          },
+          "default": {
+            "description": "Error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "crash"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/crash_groups/{crash_group_id}": {
+      "get": {
+        "description": "Gets a specific group",
+        "operationId": "getCrashGroup",
+        "parameters": [
+          {
+            "$ref": "#/parameters/path_crash_group_id"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/CrashGroup"
             }
-        },
-        "ReleaseDeleteResponse": {
-            "description": "Release has successfully been deleted."
-        },
-        "PackageUploadBeginResponse": {
-            "description": "A response containing information pertaining to starting a package upload process",
-            "properties": {
-                "upload_id": {
-                    "description": "The ID for the current upload",
-                    "type": "string"
-                },
-                "upload_url": {
-                    "description": "The URL where the client needs to upload the package to",
-                    "type": "string"
-                }
-            },
-            "required": [
-                "upload_id",
-                "upload_url"
-            ]
-        },
-        "PackageUploadEndRequest": {
-            "description": "A request containing information pertaining to completing a package upload process",
-            "properties": {
-                "status": {
-                    "description": "The desired operation for the upload",
-                    "type": "string",
-                    "enum": [
-                        "committed",
-                        "aborted"
-                    ]
-                }
-            },
-            "required": [
-                "status"
-            ]
-        },
-        "PackageUploadEndResponse": {
-            "description": "A response containing information about the uploaded package.",
-            "properties": {
-                "package_url": {
-                    "description": "A URL to the new package. If upload was aborted will be null.",
-                    "type": "string"
-                }
+          },
+          "default": {
+            "description": "Error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "crash"
+        ]
+      },
+      "patch": {
+        "description": "Updates a group",
+        "operationId": "patchCrashGroup",
+        "parameters": [
+          {
+            "$ref": "#/parameters/path_crash_group_id"
+          },
+          {
+            "name": "group",
+            "description": "Group change object. All fields are optional and only provided fields will get updated.",
+            "in": "body",
+            "required": true,
+            "schema": {
+              "$ref": "#/definitions/CrashGroupChange"
+            }
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/CrashGroup"
             }
-        },
-        "PackageUpdateRequest": {
-            "description": "A request containing information for updating a package.",
-            "properties": {
-                "distribution_group_name": {
-                    "description": "Name of a distribution group. The package will be associated with this distribution group. If the distribution group doesn't exist a 400 is returned. If both distribution group name and id are passed, the id is taking precedence.",
-                    "type": "string"
-                },
-                "distribution_group_id": {
-                    "description": "Id of a distribution group. The package will be associated with this distribution group. If the distribution group doesn't exist a 400 is returned. If both distribution group name and id are passed, the id is taking precedence.",
-                    "type": "string"
-                },
-                "release_notes": {
-                    "description": "Release notes for this package.",
-                    "type": "string"
-                }
+          },
+          "default": {
+            "description": "Error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "crash"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/crash_groups": {
+      "get": {
+        "description": "Gets a list of crashes",
+        "summary": "Gets a list of crashes",
+        "operationId": "getCrashGroups",
+        "parameters": [
+          {
+            "$ref": "#/parameters/last_occurrence_from"
+          },
+          {
+            "$ref": "#/parameters/last_occurrence_to"
+          },
+          {
+            "$ref": "#/parameters/app_version"
+          },
+          {
+            "$ref": "#/parameters/group_type"
+          },
+          {
+            "$ref": "#/parameters/group_status"
+          },
+          {
+            "$ref": "#/parameters/group_text_search"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "type": "array",
+              "items": {
+                "$ref": "#/definitions/CrashGroup"
+              }
+            }
+          },
+          "default": {
+            "description": "Error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "crash"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/crash_group_counts": {
+      "get": {
+        "description": "",
+        "summary": "",
+        "operationId": "getCrashGroupCounts",
+        "parameters": [
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/CrashGroupCounts"
+            }
+          },
+          "default": {
+            "description": "Error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "crash"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/commits/batch/{sha_collection}": {
+      "get": {
+        "description": "Returns commit information for a batch of shas",
+        "parameters": [
+          {
+            "name": "sha_collection",
+            "type": "string",
+            "in": "path",
+            "description": "A collection of commit SHAs comma-delimited",
+            "required": true
+          },
+          {
+            "$ref": "#/parameters/form"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/Branches"
+            }
+          }
+        },
+        "operationId": "build_getCommits",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "build"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/builds/{build_id}/logs": {
+      "get": {
+        "description": "Get the build log",
+        "parameters": [
+          {
+            "$ref": "#/parameters/build_id"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/BuildLog"
+            }
+          }
+        },
+        "operationId": "build_getBuildLogs",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "build"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/builds/{build_id}/downloads/{download_type}": {
+      "get": {
+        "description": "Gets the download URI",
+        "parameters": [
+          {
+            "$ref": "#/parameters/build_id"
+          },
+          {
+            "name": "download_type",
+            "type": "string",
+            "enum": [
+              "build",
+              "symbols",
+              "logs"
+            ],
+            "in": "path",
+            "description": "The download type",
+            "required": true
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/DownloadContainer"
+            }
+          }
+        },
+        "operationId": "build_getBuildDownload",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "build"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/builds/{build_id}/distribute": {
+      "post": {
+        "description": "Distribute a build",
+        "parameters": [
+          {
+            "$ref": "#/parameters/build_id"
+          },
+          {
+            "name": "distribute_info",
+            "in": "body",
+            "description": "The distribution details",
+            "required": true,
+            "schema": {
+              "$ref": "#/definitions/DistributionRequest"
+            }
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/DistributionResponse"
+            }
+          }
+        },
+        "operationId": "build_postDistributeRequest",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "build"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/builds/{build_id}": {
+      "get": {
+        "description": "Returns the build detail for the given build ID",
+        "parameters": [
+          {
+            "$ref": "#/parameters/build_id"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/Build"
+            }
+          }
+        },
+        "operationId": "build_getBuild",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "build"
+        ]
+      },
+      "patch": {
+        "description": "Cancels a build",
+        "parameters": [
+          {
+            "$ref": "#/parameters/build_id"
+          },
+          {
+            "name": "properties",
+            "in": "body",
+            "required": true,
+            "schema": {
+              "$ref": "#/definitions/BuildPatch"
+            }
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/Build"
+            }
+          }
+        },
+        "operationId": "build_updateBuildStatus",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "build"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/branches/{branch}/toolset_projects": {
+      "get": {
+        "description": "Returns the projects in the repository for the branch, for all toolsets",
+        "parameters": [
+          {
+            "$ref": "#/parameters/branch"
+          },
+          {
+            "name": "os",
+            "type": "string",
+            "in": "query",
+            "description": "The desired OS for the project scan; normally the same as the app OS",
+            "required": true,
+            "enum": [
+              "iOS",
+              "Android"
+            ]
+          },
+          {
+            "name": "platform",
+            "type": "string",
+            "in": "query",
+            "description": "The desired platform for the project scan",
+            "required": true,
+            "enum": [
+              "Objective-C-Swift",
+              "React-Native",
+              "Xamarin",
+              "Java"
+            ]
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/ToolsetProjects"
+            }
+          }
+        },
+        "operationId": "build_getProjectInformation",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "build"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/branches/{branch}/config": {
+      "get": {
+        "description": "Gets the branch configuration",
+        "parameters": [
+          {
+            "$ref": "#/parameters/branch"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/BranchConfiguration"
             }
-        },
-        "DistributionGroup": {
-            "properties": {
-                "id": {
-                    "description": "ID identifying a unique distribution group.",
-                    "type": "string"
-                },
-                "name": {
-                    "description": "A name identifying a unique distribution group.",
-                    "type": "string"
-                },
-                "is_latest": {
-                    "description": "Is the containing release the latest one in this distribution group.",
-                    "type": "boolean"
-                }
+          },
+          "400": {
+            "description": "Bad Request",
+            "schema": {
+              "$ref": "#/definitions/ValidationErrorResponse"
+            }
+          }
+        },
+        "operationId": "build_getBranchConfiguration",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "build"
+        ]
+      },
+      "post": {
+        "description": "Configures the branch for build",
+        "parameters": [
+          {
+            "$ref": "#/parameters/branch"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/BranchConfiguration"
+            }
+          }
+        },
+        "operationId": "build_createBranchConfiguration",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "build"
+        ]
+      },
+      "put": {
+        "description": "Reconfigures the branch for build",
+        "parameters": [
+          {
+            "$ref": "#/parameters/branch"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/BranchConfiguration"
+            }
+          }
+        },
+        "operationId": "build_updateBranchConfiguration",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "build"
+        ]
+      },
+      "delete": {
+        "description": "Deletes the branch build configuration",
+        "parameters": [
+          {
+            "$ref": "#/parameters/branch"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/SuccessResponse"
+            }
+          }
+        },
+        "operationId": "build_deleteBranchConfiguration",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "build"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/branches/{branch}/builds": {
+      "get": {
+        "description": "Returns the list of builds for the branch",
+        "parameters": [
+          {
+            "$ref": "#/parameters/branch"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/Builds"
+            }
+          }
+        },
+        "operationId": "build_getBranchBuilds",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "build"
+        ]
+      },
+      "post": {
+        "description": "Create a build",
+        "parameters": [
+          {
+            "$ref": "#/parameters/branch"
+          },
+          {
+            "name": "params",
+            "in": "body",
+            "description": "Parameters of the build",
+            "required": false,
+            "schema": {
+              "$ref": "#/definitions/BuildParams"
+            }
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Created build(s)",
+            "schema": {
+              "$ref": "#/definitions/Builds"
+            }
+          }
+        },
+        "operationId": "build_queueBuild",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "build"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/branches": {
+      "get": {
+        "description": "Returns the list of Git branches for this application",
+        "parameters": [
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/BranchStatusCollection"
             }
-        },
-        "BasicPackageDetails": {
-            "description": "Basic information on a pacakge",
-            "properties": {
-                "package_id": {
-                    "description": "ID identifying this unique package.",
-                    "type": "string"
-                },
-                "version": {
-                    "description": "The package's version.<br>\nFor iOS: CFBundleVersion from info.plist.<br>\nFor Android: android:versionCode from AppManifest.xml.\n",
-                    "type": "string"
-                },
-                "short_version": {
-                    "description": "The package's short version.<br>\nFor iOS: CFBundleShortVersionString from info.plist.<br>\nFor Android: android:versionName from AppManifest.xml.  \n",
-                    "type": "string"
-                },
-                "uploaded_at": {
-                    "description": "UTC time in ISO 8601 format of the uploaded time.",
-                    "type": "string"
-                },
-                "distribution_groups": {
-                    "description": "a list of distribution groups that are associated with this package.",
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/DistributionGroup"
-                    }
-                }
+          },
+          "400": {
+            "description": "Bad Request",
+            "schema": {
+              "$ref": "#/definitions/ValidationErrorResponse"
+            }
+          }
+        },
+        "operationId": "build_getBranches",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "build"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/analytics/versions": {
+      "get": {
+        "operationId": "Analytics_Versions",
+        "description": "Count of active versions in the time range ordered by version.",
+        "parameters": [
+          {
+            "$ref": "#/parameters/StartParameter"
+          },
+          {
+            "$ref": "#/parameters/EndParameter"
+          },
+          {
+            "$ref": "#/parameters/CountParameter"
+          },
+          {
+            "$ref": "#/parameters/VersionsParameter"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Count of active versions in the time range ordered by version.",
+            "schema": {
+              "$ref": "#/definitions/Versions"
             }
-        },
-        "PackageDetails": {
-            "description": "Details of an uploaded package",
-            "properties": {
-                "package_id": {
-                    "description": "ID identifying this unique package.",
-                    "type": "string"
-                },
-                "status": {
-                    "description": "OBSOLETE. Will be removed in next version. The availability concept is now replaced with distributed. Any 'available' package will be associated with the default distribution group of an app.</br>   \nThe package state.<br> \n<b>available</b>: The uploaded package has been distributed.<br>\n<b>unavailable</b>: The uploaded package is not visible to the user. <br>\n",
-                    "type": "string",
-                    "enum": [
-                        "available",
-                        "unavailable"
-                    ]
-                },
-                "app_name": {
-                    "description": "The app's name (extracted from the uploaded package).",
-                    "type": "string"
-                },
-                "version": {
-                    "description": "The package's version.<br>\nFor iOS: CFBundleVersion from info.plist.\nFor Android: android:versionCode from AppManifest.xml.\n",
-                    "type": "string"
-                },
-                "short_version": {
-                    "description": "The package's short version.<br>\nFor iOS: CFBundleShortVersionString from info.plist.\nFor Android: android:versionName from AppManifest.xml.  \n",
-                    "type": "string"
-                },
-                "release_notes": {
-                    "description": "The package's release notes.",
-                    "type": "string"
-                },
-                "provisioning_profile_name": {
-                    "description": "The package's release notes.",
-                    "type": "string"
-                },
-                "size": {
-                    "description": "The package's size in bytes.",
-                    "type": "number"
-                },
-                "min_os": {
-                    "description": "The package's minimum required operating system.",
-                    "type": "string"
-                },
-                "fingerprint": {
-                    "description": "MD5 checksum of the package binary.",
-                    "type": "string"
-                },
-                "uploaded_at": {
-                    "description": "UTC time in ISO 8601 format of the uploaded time.",
-                    "type": "string"
-                },
-                "download_url": {
-                    "description": "The URL that hosts the binary for this package.",
-                    "type": "string"
-                },
-                "app_icon_url": {
-                    "description": "A URL to the app's icon.",
-                    "type": "string"
-                },
-                "install_url": {
-                    "description": "The href required to install a package on a mobile device. On iOS devices will be prefixed with `itms-services://?action=download-manifest&url=`",
-                    "type": "string"
-                },
-                "distribution_groups": {
-                    "description": "a list of distribution groups that are associated with this package.",
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/DistributionGroup"
-                    }
-                }
+          },
+          "default": {
+            "description": "Error code with reason",
+            "schema": {
+              "$ref": "#/definitions/Error"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "analytics"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/analytics/sessions_per_device": {
+      "get": {
+        "operationId": "Analytics_PerDeviceCounts",
+        "description": "Count of sessions per device in the time range",
+        "parameters": [
+          {
+            "$ref": "#/parameters/StartParameter"
+          },
+          {
+            "$ref": "#/parameters/EndParameter"
+          },
+          {
+            "$ref": "#/parameters/IntervalParameter"
+          },
+          {
+            "$ref": "#/parameters/VersionsParameter"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Count of sessions per device in the time range",
+            "schema": {
+              "$ref": "#/definitions/SessionsPerDevice"
             }
-        },
-        "Symbol": {
-            "properties": {
-                "symbol_id": {
-                    "description": "The unique id for this symbol (uuid)",
-                    "type": "string"
-                },
-                "type": {
-                    "description": "The type of the symbol for the current symbol upload",
-                    "type": "string",
-                    "enum": [
-                        "Apple",
-                        "JavaScript"
-                    ]
-                },
-                "app_id": {
-                    "description": "The application that this symbol belongs to",
-                    "type": "string"
-                },
-                "platform": {
-                    "description": "The platform that this symbol is for",
-                    "type": "string"
-                },
-                "url": {
-                    "description": "The URL at which the client may download the symbol file",
-                    "type": "string"
-                },
-                "origin": {
-                    "description": "The origin of the symbol file",
-                    "type": "string",
-                    "enum": [
-                        "System",
-                        "User"
-                    ]
-                },
-                "alternate_symbol_ids": {
-                    "description": "The other symbols in the same file",
-                    "type": "array",
-                    "items": {
-                        "type": "string"
-                    }
-                },
-                "status": {
-                    "description": "Whether the symbol is ignored.",
-                    "type": "string",
-                    "enum": [
-                        "available",
-                        "ignored"
-                    ]
-                }
-            },
-            "required": [
-                "symbol_id",
-                "platform",
-                "type",
-                "app_id",
-                "url",
-                "origin",
-                "alternate_symbol_ids",
-                "status"
-            ]
-        },
-        "Symbols": {
-            "description": "A response containing the list of symbols matching the specified filter (if any was provided)",
-            "type": "array",
-            "items": {
-                "$ref": "#/definitions/Symbol"
+          },
+          "default": {
+            "description": "Error code with reason",
+            "schema": {
+              "$ref": "#/definitions/Error"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "analytics"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/analytics/session_durations_distribution": {
+      "get": {
+        "operationId": "Analytics_SessionDurationsDistribution",
+        "description": "Gets session duration .",
+        "parameters": [
+          {
+            "$ref": "#/parameters/StartParameter"
+          },
+          {
+            "$ref": "#/parameters/EndParameter"
+          },
+          {
+            "$ref": "#/parameters/VersionsParameter"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "List of  session durations for requested time range.",
+            "schema": {
+              "$ref": "#/definitions/SessionDurationsDistribution"
             }
-        },
-        "SymbolUpload": {
-            "description": "A single symbol upload entity",
-            "properties": {
-                "symbol_upload_id": {
-                    "description": "The id for the current symbol upload",
-                    "type": "string"
-                },
-                "app_id": {
-                    "description": "The application that this symbol upload belongs to",
-                    "type": "string"
-                },
-                "status": {
-                    "description": "The current status for the symbol upload",
-                    "type": "string",
-                    "enum": [
-                        "created",
-                        "committed",
-                        "aborted",
-                        "processing",
-                        "indexed",
-                        "failed"
-                    ]
-                },
-                "symbol_type": {
-                    "description": "The type of the symbol for the current symbol upload",
-                    "type": "string",
-                    "enum": [
-                        "Apple"
-                    ]
-                },
-                "symbols": {
-                    "description": "The symbol ids",
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/Symbol"
-                    }
-                },
-                "origin": {
-                    "description": "The origin of the symbol upload",
-                    "type": "string",
-                    "enum": [
-                        "User",
-                        "System"
-                    ]
-                }
-            },
-            "required": [
-                "symbol_upload_id",
-                "app_id",
-                "status",
-                "symbol_type"
-            ]
-        },
-        "SymbolUploads": {
-            "description": "A set of symbol upload entities",
-            "type": "array",
-            "items": {
-                "$ref": "#/definitions/SymbolUpload"
+          },
+          "default": {
+            "description": "Error code with reason",
+            "schema": {
+              "$ref": "#/definitions/Error"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "analytics"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/analytics/session_counts": {
+      "get": {
+        "operationId": "Analytics_SessionCounts",
+        "description": "Count of sessions in the time range.",
+        "parameters": [
+          {
+            "$ref": "#/parameters/StartParameter"
+          },
+          {
+            "$ref": "#/parameters/EndParameter"
+          },
+          {
+            "$ref": "#/parameters/IntervalParameter"
+          },
+          {
+            "$ref": "#/parameters/VersionsParameter"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Count of sessions in the time range.",
+            "schema": {
+              "$ref": "#/definitions/SessionCounts"
             }
-        },
-        "SymbolUploadBeginRequest": {
-            "description": "A request containing information pertaining to starting a symbol upload process",
-            "properties": {
-                "symbol_type": {
-                    "description": "The type of the symbol for the current symbol upload",
-                    "type": "string",
-                    "enum": [
-                        "Apple"
-                    ]
-                },
-                "client_callback": {
-                    "description": "The callback URL that the client can optionally provide to get status updates for the current symbol upload",
-                    "type": "string"
-                }
-            },
-            "required": [
-                "symbol_type"
-            ]
-        },
-        "SymbolUploadBeginResponse": {
-            "description": "A response containing information pertaining to starting a symbol upload process",
-            "properties": {
-                "symbol_upload_id": {
-                    "description": "The id for the current upload",
-                    "type": "string"
-                },
-                "upload_url": {
-                    "description": "The URL where the client needs to upload the symbol blob to",
-                    "type": "string"
-                },
-                "expiration_date": {
-                    "description": "Describes how long the upload_url is valid",
-                    "type": "string",
-                    "format": "date-time"
-                }
-            },
-            "required": [
-                "symbol_upload_id",
-                "upload_url",
-                "expiration_date"
-            ]
-        },
-        "SymbolUploadEndRequest": {
-            "description": "A request containing information pertaining to completing a symbol upload process",
-            "properties": {
-                "status": {
-                    "description": "The desired operation for the symbol upload",
-                    "type": "string",
-                    "enum": [
-                        "committed",
-                        "aborted"
-                    ]
-                }
-            },
-            "required": [
-                "status"
-            ]
-        },
-        "AppVersion": {
-            "required": [
-                "app_version_id",
-                "app_id",
-                "display_name",
-                "app_version"
-            ],
-            "type": "object",
-            "properties": {
-                "app_version_id": {
-                    "type": "string"
-                },
-                "app_id": {
-                    "type": "string"
-                },
-                "display_name": {
-                    "type": "string"
-                },
-                "app_version": {
-                    "type": "string"
-                },
-                "build_number": {
-                    "type": "string"
-                }
+          },
+          "default": {
+            "description": "Error code with reason",
+            "schema": {
+              "$ref": "#/definitions/Error"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "analytics"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/analytics/places": {
+      "get": {
+        "operationId": "Analytics_PlaceCounts",
+        "description": "Places in the time range",
+        "parameters": [
+          {
+            "$ref": "#/parameters/StartParameter"
+          },
+          {
+            "$ref": "#/parameters/EndParameter"
+          },
+          {
+            "$ref": "#/parameters/CountParameter"
+          },
+          {
+            "$ref": "#/parameters/VersionsParameter"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Places with count during the time range in descending order",
+            "schema": {
+              "$ref": "#/definitions/Places"
             }
-        },
-        "Stacktrace": {
-            "description": "a stacktrace in a processed and prettyfied way",
-            "properties": {
-                "title": {
-                    "type": "string"
-                },
-                "reason": {
-                    "type": "string"
-                },
-                "threads": {
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/Thread"
-                    }
-                },
-                "exception": {
-                    "$ref": "#/definitions/Exception"
-                }
+          },
+          "default": {
+            "description": "Error code with reason",
+            "schema": {
+              "$ref": "#/definitions/Error"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "analytics"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/analytics/oses": {
+      "get": {
+        "operationId": "Analytics_OperatingSystemCounts",
+        "description": "OSes in the time range",
+        "parameters": [
+          {
+            "$ref": "#/parameters/StartParameter"
+          },
+          {
+            "$ref": "#/parameters/EndParameter"
+          },
+          {
+            "$ref": "#/parameters/CountParameter"
+          },
+          {
+            "$ref": "#/parameters/VersionsParameter"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OSes with count during the time range in descending order",
+            "schema": {
+              "$ref": "#/definitions/OSes"
             }
-        },
-        "Thread": {
-            "description": "a thread representation",
-            "properties": {
-                "title": {
-                    "description": "name of the thread",
-                    "type": "string"
-                },
-                "frames": {
-                    "description": "frames of that thread",
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/StackFrame"
-                    }
-                },
-                "exception": {
-                    "description": "potential additional exception happened in that thread (Last Exception Backtrace)",
-                    "$ref": "#/definitions/Exception"
-                },
-                "relevant": {
-                    "description": "Shows if a thread is relevant or not. Is false if all frames are non relevant, otherwise true",
-                    "type": "boolean"
-                },
-                "platform": {
-                    "description": "SDK/Platform this thread is beeing generated from",
-                    "type": "string",
-                    "enum": [
-                        "ios",
-                        "android",
-                        "xamarin",
-                        "react-native",
-                        "other"
-                    ]
-                }
-            },
-            "required": [
-                "title",
-                "frames"
-            ]
-        },
-        "Exception": {
-            "description": "a exception",
-            "properties": {
-                "reason": {
-                    "type": "string",
-                    "description": "Reason of the exception"
-                },
-                "type": {
-                    "type": "string",
-                    "description": "Type of the exception (NSSomethingException, NullPointerException)"
-                },
-                "frames": {
-                    "description": "frames of the excetpion",
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/StackFrame"
-                    }
-                },
-                "relevant": {
-                    "description": "relevant exception (crashed)",
-                    "type": "boolean"
-                },
-                "inner_exceptions": {
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/Exception"
-                    }
-                },
-                "platform": {
-                    "description": "SDK/Platform this thread is beeing generated from",
-                    "type": "string",
-                    "enum": [
-                        "ios",
-                        "android",
-                        "xamarin",
-                        "react-native",
-                        "other"
-                    ]
-                }
-            },
-            "required": [
-                "frames"
-            ]
-        },
-        "StackFrame": {
-            "description": "a single frame of a stack trace",
-            "properties": {
-                "address": {
-                    "description": "address of the frame",
-                    "type": "string"
-                },
-                "class_name": {
-                    "description": "name of the class",
-                    "type": "string"
-                },
-                "method": {
-                    "description": "name of the method",
-                    "type": "string"
-                },
-                "class_method": {
-                    "description": "is a class method",
-                    "type": "boolean"
-                },
-                "file": {
-                    "description": "name of the file",
-                    "type": "string"
-                },
-                "line": {
-                    "description": "line number",
-                    "type": "integer"
-                },
-                "app_code": {
-                    "description": "this line isn't from any framework",
-                    "type": "boolean"
-                },
-                "framework_name": {
-                    "description": "Name of the framework",
-                    "type": "string"
-                },
-                "code_raw": {
-                    "description": "Raw frame string",
-                    "type": "string"
-                },
-                "code_formatted": {
-                    "description": "Formatted frame string",
-                    "type": "string"
-                },
-                "language": {
-                    "description": "programming language of the frame",
-                    "type": "string",
-                    "enum": [
-                        "JavaScript",
-                        "CSharp",
-                        "Objective-C",
-                        "Objective-Cpp",
-                        "Cpp",
-                        "C",
-                        "Swift",
-                        "Java",
-                        "Unknown"
-                    ]
-                },
-                "relevant": {
-                    "description": "frame should be shown always",
-                    "type": "boolean"
-                },
-                "method_params": {
-                    "description": "parameters of the frames method",
-                    "type": "string"
-                }
-            },
-            "required": [
-                "code_raw",
-                "code_formatted",
-                "app_code"
-            ]
-        },
-        "ReasonStackFrame": {
-            "description": "frame belonging to the reason of the crash",
-            "properties": {
-                "class_name": {
-                    "description": "name of the class",
-                    "type": "string"
-                },
-                "method": {
-                    "description": "name of the method",
-                    "type": "string"
-                },
-                "class_method": {
-                    "description": "is a class method",
-                    "type": "boolean"
-                },
-                "file": {
-                    "description": "name of the file",
-                    "type": "string"
-                },
-                "line": {
-                    "description": "line number",
-                    "type": "integer"
-                },
-                "app_code": {
-                    "description": "this line isn't from any framework",
-                    "type": "boolean"
-                },
-                "framework_name": {
-                    "description": "Name of the framework",
-                    "type": "string"
-                },
-                "code_formatted": {
-                    "description": "Formatted frame string",
-                    "type": "string"
-                },
-                "language": {
-                    "description": "programming language of the frame",
-                    "type": "string",
-                    "enum": [
-                        "JavaScript",
-                        "CSharp",
-                        "Objective-C",
-                        "Objective-Cpp",
-                        "Cpp",
-                        "C",
-                        "Swift",
-                        "Java",
-                        "Unknown"
-                    ]
-                },
-                "method_params": {
-                    "description": "parameters of the frames method",
-                    "type": "string"
-                }
+          },
+          "default": {
+            "description": "Error code with reason",
+            "schema": {
+              "$ref": "#/definitions/Error"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "analytics"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/analytics/models": {
+      "get": {
+        "operationId": "Analytics_ModelCounts",
+        "description": "models in the time range",
+        "parameters": [
+          {
+            "$ref": "#/parameters/StartParameter"
+          },
+          {
+            "$ref": "#/parameters/EndParameter"
+          },
+          {
+            "$ref": "#/parameters/CountParameter"
+          },
+          {
+            "$ref": "#/parameters/VersionsParameter"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Models with count during the time range in descending order",
+            "schema": {
+              "$ref": "#/definitions/AnalyticsModels"
             }
-        },
-        "RawCrashLog": {
-            "type": "object"
-        },
-        "CrashGroup": {
-            "required": [
-                "crash_group_id",
-                "display_id",
-                "app_version",
-                "build",
-                "status",
-                "count",
-                "first_occurrence",
-                "last_occurrence",
-                "error_reason",
-                "fatal"
-            ],
-            "type": "object",
-            "properties": {
-                "crash_group_id": {
-                    "type": "string"
-                },
-                "display_id": {
-                    "type": "string"
-                },
-                "app_version": {
-                    "type": "string"
-                },
-                "build": {
-                    "type": "string"
-                },
-                "status": {
-                    "type": "string",
-                    "enum": [
-                        "open",
-                        "closed",
-                        "ignored"
-                    ]
-                },
-                "count": {
-                    "type": "integer"
-                },
-                "impacted_users": {
-                    "type": "integer"
-                },
-                "first_occurrence": {
-                    "type": "string",
-                    "format": "date-time"
-                },
-                "last_occurrence": {
-                    "type": "string",
-                    "format": "date-time"
-                },
-                "exception": {
-                    "type": "string"
-                },
-                "error_reason": {
-                    "type": "string"
-                },
-                "reason_frame": {
-                    "$ref": "#/definitions/ReasonStackFrame"
-                },
-                "fatal": {
-                    "type": "boolean",
-                    "description": "Crash or handled exception"
-                }
+          },
+          "default": {
+            "description": "Error code with reason",
+            "schema": {
+              "$ref": "#/definitions/Error"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "analytics"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/analytics/log_flow": {
+      "get": {
+        "operationId": "Analytics_LogFlow",
+        "description": "Logs received between the specified start time and the current time. The API will return a maximum of 100 logs per call.",
+        "parameters": [
+          {
+            "$ref": "#/parameters/LogFlowStartTimeParameter"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "List of logs for the requested time range.",
+            "schema": {
+              "$ref": "#/definitions/LogContainer"
             }
-        },
-        "CrashGroupChange": {
-            "type": "object",
-            "properties": {
-                "status": {
-                    "enum": [
-                        "open",
-                        "closed",
-                        "ignored"
-                    ]
-                }
+          },
+          "default": {
+            "description": "Error code with reason",
+            "schema": {
+              "$ref": "#/definitions/Error"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "analytics"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/analytics/languages": {
+      "get": {
+        "operationId": "Analytics_LanguageCounts",
+        "description": "languages in the time range",
+        "parameters": [
+          {
+            "$ref": "#/parameters/StartParameter"
+          },
+          {
+            "$ref": "#/parameters/EndParameter"
+          },
+          {
+            "$ref": "#/parameters/CountParameter"
+          },
+          {
+            "$ref": "#/parameters/VersionsParameter"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Languages with count during the time range in descending order",
+            "schema": {
+              "$ref": "#/definitions/Languages"
             }
-        },
-        "CrashGroupCounts": {
-            "type": "object",
-            "properties": {
-                "crash_group_count": {
-                    "type": "number"
-                }
+          },
+          "default": {
+            "description": "Error code with reason",
+            "schema": {
+              "$ref": "#/definitions/Error"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "analytics"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/analytics/events/{event_name}/properties/{event_property_name}/counts": {
+      "get": {
+        "operationId": "Analytics_EventPropertyCounts",
+        "description": "Event properties value counts during the time range in descending order.  Limited up to 5 values.",
+        "parameters": [
+          {
+            "$ref": "#/parameters/EventParameter"
+          },
+          {
+            "$ref": "#/parameters/EventPropertyParameter"
+          },
+          {
+            "$ref": "#/parameters/StartParameter"
+          },
+          {
+            "$ref": "#/parameters/EndParameter"
+          },
+          {
+            "$ref": "#/parameters/VersionsParameter"
+          },
+          {
+            "$ref": "#/parameters/PropertyCountParameter"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Event properties value counts during the time range in descending order.  Limited up to 5 values.",
+            "schema": {
+              "$ref": "#/definitions/EventPropertyValues"
             }
-        },
-        "Crash": {
-            "required": [
-                "crash_id",
-                "timestamp",
-                "version",
-                "build",
-                "device",
-                "os_version",
-                "user_name"
-            ],
-            "type": "object",
-            "properties": {
-                "crash_id": {
-                    "type": "string",
-                    "description": ""
-                },
-                "display_id": {
-                    "type": "string"
-                },
-                "timestamp": {
-                    "type": "string",
-                    "format": "date-time"
-                },
-                "version": {
-                    "type": "string",
-                    "description": ""
-                },
-                "build": {
-                    "type": "string",
-                    "description": ""
-                },
-                "device": {
-                    "type": "string",
-                    "description": ""
-                },
-                "os_version": {
-                    "type": "string",
-                    "description": ""
-                },
-                "os_type": {
-                    "type": "string",
-                    "description": ""
-                },
-                "user_name": {
-                    "type": "string",
-                    "description": ""
-                },
-                "user_email": {
-                    "type": "string",
-                    "description": ""
-                }
+          },
+          "default": {
+            "description": "Error code with reason",
+            "schema": {
+              "$ref": "#/definitions/Error"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "analytics"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/analytics/events/{event_name}/properties": {
+      "get": {
+        "operationId": "Analytics_EventProperties",
+        "description": "Event properties.  Up to the first 5 received properties.",
+        "parameters": [
+          {
+            "$ref": "#/parameters/EventParameter"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Event properties.  Up to the first 5 received properties.",
+            "schema": {
+              "$ref": "#/definitions/EventProperties"
             }
-        },
-        "CrashCounts": {
-            "type": "object",
-            "properties": {
-                "count": {
-                    "description": "total crash count",
-                    "type": "integer",
-                    "format": "int64"
-                },
-                "crashes": {
-                    "description": "the total crash count for day",
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/DateTimeCounts"
-                    }
-                }
+          },
+          "default": {
+            "description": "Error code with reason",
+            "schema": {
+              "$ref": "#/definitions/Error"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "analytics"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/analytics/events/{event_name}/event_count": {
+      "get": {
+        "operationId": "Analytics_EventCount",
+        "description": "Count of events by interval in the time range.",
+        "parameters": [
+          {
+            "$ref": "#/parameters/EventParameter"
+          },
+          {
+            "$ref": "#/parameters/StartParameter"
+          },
+          {
+            "$ref": "#/parameters/EndParameter"
+          },
+          {
+            "$ref": "#/parameters/VersionsParameter"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Count of events by interval in the time range.",
+            "schema": {
+              "$ref": "#/definitions/EventCount"
             }
-        },
-        "ActiveDeviceCounts": {
-            "properties": {
-                "daily": {
-                    "description": "the active device count for each interval",
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/DateTimeCounts"
-                    }
-                },
-                "weekly": {
-                    "description": "the active device count for each interval with a week's retention",
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/DateTimeCounts"
-                    }
-                },
-                "monthly": {
-                    "description": "the active device count for each interval with a month's retention",
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/DateTimeCounts"
-                    }
-                }
+          },
+          "default": {
+            "description": "Error code with reason",
+            "schema": {
+              "$ref": "#/definitions/Error"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "analytics"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/analytics/events/{event_name}/device_count": {
+      "get": {
+        "operationId": "Analytics_EventDeviceCount",
+        "description": "Count of devices for an event by interval in the time range.",
+        "parameters": [
+          {
+            "$ref": "#/parameters/EventParameter"
+          },
+          {
+            "$ref": "#/parameters/StartParameter"
+          },
+          {
+            "$ref": "#/parameters/EndParameter"
+          },
+          {
+            "$ref": "#/parameters/VersionsParameter"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Count of devices for an event by interval in the time range.",
+            "schema": {
+              "$ref": "#/definitions/EventDeviceCount"
             }
-        },
-        "Places": {
-            "description": "Places and count during the time range in descending order",
-            "properties": {
-                "total": {
-                    "type": "integer",
-                    "format": "int64"
-                },
-                "places": {
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/Place"
-                    }
-                }
+          },
+          "default": {
+            "description": "Error code with reason",
+            "schema": {
+              "$ref": "#/definitions/Error"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "analytics"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/analytics/events/{event_name}/count_per_session": {
+      "get": {
+        "operationId": "Analytics_EventPerSessionCount",
+        "description": "Count of events per session by interval in the time range.",
+        "parameters": [
+          {
+            "$ref": "#/parameters/EventParameter"
+          },
+          {
+            "$ref": "#/parameters/StartParameter"
+          },
+          {
+            "$ref": "#/parameters/EndParameter"
+          },
+          {
+            "$ref": "#/parameters/VersionsParameter"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Count of events per session by interval in the time range.",
+            "schema": {
+              "$ref": "#/definitions/EventCountPerSession"
             }
-        },
-        "Place": {
-            "description": "The place code and the count",
-            "type": "object",
-            "properties": {
-                "code": {
-                    "description": "the place code",
-                    "type": "string"
-                },
-                "count": {
-                    "description": "the count of the this place",
-                    "type": "integer",
-                    "format": "int64"
-                },
-                "previous_count": {
-                    "description": "the count of previous time range of the place",
-                    "type": "integer",
-                    "format": "int64"
-                }
+          },
+          "default": {
+            "description": "Error code with reason",
+            "schema": {
+              "$ref": "#/definitions/Error"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "analytics"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/analytics/events/{event_name}/count_per_device": {
+      "get": {
+        "operationId": "Analytics_EventPerDeviceCount",
+        "description": "Count of events per device by interval in the time range.",
+        "parameters": [
+          {
+            "$ref": "#/parameters/EventParameter"
+          },
+          {
+            "$ref": "#/parameters/StartParameter"
+          },
+          {
+            "$ref": "#/parameters/EndParameter"
+          },
+          {
+            "$ref": "#/parameters/VersionsParameter"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Count of events per device by interval in the time range.",
+            "schema": {
+              "$ref": "#/definitions/EventCountPerDevice"
             }
-        },
-        "Error": {
-            "description": "Error",
-            "type": "object",
-            "properties": {
-                "error": {
-                    "type": "object",
-                    "properties": {
-                        "code": {
-                            "description": "The status code return by the API. It can be 400 or 403 or 500.",
-                            "type": "integer",
-                            "enum": [
-                                400,
-                                403,
-                                500
-                            ]
-                        },
-                        "message": {
-                            "description": "The reason for the request failed",
-                            "type": "string"
-                        }
-                    }
-                }
+          },
+          "default": {
+            "description": "Error code with reason",
+            "schema": {
+              "$ref": "#/definitions/Error"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "analytics"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/analytics/events/{event_name}": {
+      "delete": {
+        "operationId": "Analytics_EventsDelete",
+        "description": "Delete the set of Events with the specified event names",
+        "parameters": [
+          {
+            "$ref": "#/parameters/EventParameter"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Event successfully deleted"
+          },
+          "default": {
+            "description": "Error code with reason",
+            "schema": {
+              "$ref": "#/definitions/Error"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "analytics"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/analytics/events": {
+      "get": {
+        "operationId": "Analytics_Events",
+        "description": "Count of active events in the time range ordered by event.",
+        "parameters": [
+          {
+            "$ref": "#/parameters/StartParameter"
+          },
+          {
+            "$ref": "#/parameters/EndParameter"
+          },
+          {
+            "$ref": "#/parameters/VersionsParameter"
+          },
+          {
+            "$ref": "#/parameters/EventNameParameter"
+          },
+          {
+            "$ref": "#/parameters/TopParameter"
+          },
+          {
+            "$ref": "#/parameters/SkipParameter"
+          },
+          {
+            "$ref": "#/parameters/InlineCountParameter"
+          },
+          {
+            "$ref": "#/parameters/OrderByParameter"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Count of active events in the time range ordered by event.",
+            "schema": {
+              "$ref": "#/definitions/Events"
             }
-        },
-        "SessionDurationsDistribution": {
-            "type": "object",
-            "properties": {
-                "distribution": {
-                    "description": "the count of sessions in these buckets",
-                    "type": "array",
-                    "items": {
-                        "type": "object",
-                        "properties": {
-                            "bucket": {
-                                "description": "the bucket name",
-                                "type": "string"
-                            },
-                            "count": {
-                                "description": "the count of sessions in current bucket",
-                                "type": "integer",
-                                "format": "int32"
-                            }
-                        }
-                    }
-                },
-                "previous_average_duration": {
-                    "description": "the previous average session duration for previous time range",
-                    "type": "string"
-                },
-                "average_duration": {
-                    "description": "the average session duration for current time range",
-                    "type": "string"
-                }
+          },
+          "default": {
+            "description": "Error code with reason",
+            "schema": {
+              "$ref": "#/definitions/Error"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "analytics"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/analytics/event_logs/{event_name}": {
+      "delete": {
+        "operationId": "Analytics_EventsDeleteLogs",
+        "description": "Delete the set of Events with the specified event names",
+        "parameters": [
+          {
+            "$ref": "#/parameters/EventParameter"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Event successfully deleted"
+          },
+          "default": {
+            "description": "Error code with reason",
+            "schema": {
+              "$ref": "#/definitions/Error"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "analytics"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/analytics/crashfree_device_percentages": {
+      "get": {
+        "operationId": "Analytics_CrashFreeDevicePercentages",
+        "description": "Percentage of crash-free device by day in the time range based on the selected versions. Api will return -1 if crash devices is greater than active devices",
+        "parameters": [
+          {
+            "$ref": "#/parameters/StartParameter"
+          },
+          {
+            "$ref": "#/parameters/EndParameter"
+          },
+          {
+            "$ref": "#/parameters/VersionsParameter"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Percentage of crash-free devices by day in the time range and overall percentage of the time range.",
+            "schema": {
+              "$ref": "#/definitions/CrashFreeDevicePercentages"
             }
-        },
-        "Versions": {
-            "properties": {
-                "versions": {
-                    "description": "list of version count",
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/Version"
-                    }
-                },
-                "total": {
-                    "description": "the total count of versions",
-                    "type": "integer",
-                    "format": "int64"
-                }
+          },
+          "default": {
+            "description": "Error code with reason",
+            "schema": {
+              "$ref": "#/definitions/Error"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "analytics"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/analytics/crash_groups/{crash_group_id}/overall": {
+      "get": {
+        "operationId": "Analytics_CrashGroupTotals",
+        "description": "Overall crashes and affected users count of the selected crash group with selected version",
+        "parameters": [
+          {
+            "$ref": "#/parameters/CrashGroupParameter"
+          },
+          {
+            "$ref": "#/parameters/VersionParameter"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Overall crashes and affected users count",
+            "schema": {
+              "$ref": "#/definitions/CrashOverall"
             }
-        },
-        "Version": {
-            "type": "object",
-            "properties": {
-                "version": {
-                    "description": "version",
-                    "type": "string"
-                },
-                "count": {
-                    "description": "version count",
-                    "type": "integer",
-                    "format": "int64"
-                },
-                "previous_count": {
-                    "description": "the count of previous time range of the version",
-                    "type": "integer",
-                    "format": "int64"
-                }
+          },
+          "default": {
+            "description": "Error code with reason",
+            "schema": {
+              "$ref": "#/definitions/Error"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "analytics"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/analytics/crash_groups/{crash_group_id}/operating_systems": {
+      "get": {
+        "operationId": "Analytics_CrashGroupOperatingSystemCounts",
+        "description": "top OSes of the selected crash group with selected version",
+        "parameters": [
+          {
+            "$ref": "#/parameters/CrashGroupParameter"
+          },
+          {
+            "$ref": "#/parameters/VersionParameter"
+          },
+          {
+            "$ref": "#/parameters/TopParameter"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Top OSes with percentage in descending order",
+            "schema": {
+              "$ref": "#/definitions/CrashGroupOperatingSystems"
             }
-        },
-        "SessionCounts": {
-            "type": "object",
-            "properties": {
-                "total_count": {
-                    "description": "total session count",
-                    "type": "integer",
-                    "format": "int64"
-                },
-                "previous_total_count": {
-                    "description": "previous total session count",
-                    "type": "integer",
-                    "format": "int64"
-                },
-                "sessions": {
-                    "description": "the total session count for each interval",
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/DateTimeCounts"
-                    }
-                }
+          },
+          "default": {
+            "description": "Error code with reason",
+            "schema": {
+              "$ref": "#/definitions/Error"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "analytics"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/analytics/crash_groups/{crash_group_id}/models": {
+      "get": {
+        "operationId": "Analytics_CrashGroupModelCounts",
+        "description": "top models of the selected crash group with selected version",
+        "parameters": [
+          {
+            "$ref": "#/parameters/CrashGroupParameter"
+          },
+          {
+            "$ref": "#/parameters/VersionParameter"
+          },
+          {
+            "$ref": "#/parameters/TopParameter"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Top Models with percentage in descending order",
+            "schema": {
+              "$ref": "#/definitions/CrashGroupModels"
             }
-        },
-        "SessionsPerDevice": {
-            "type": "object",
-            "properties": {
-                "average_sessions_per_user": {
-                    "description": "average seesion per user",
-                    "type": "number",
-                    "format": "double"
-                },
-                "previous_average_sessions_per_user": {
-                    "description": "previous average session per user",
-                    "type": "number",
-                    "format": "double"
-                },
-                "total_count": {
-                    "description": "total session per device count",
-                    "type": "integer",
-                    "format": "int64"
-                },
-                "previous_total_count": {
-                    "description": "previous total count",
-                    "type": "integer",
-                    "format": "int64"
-                },
-                "sessions_per_user": {
-                    "type": "array",
-                    "description": "the session count for each interval per device",
-                    "items": {
-                        "type": "object",
-                        "properties": {
-                            "datetime": {
-                                "description": "the ISO 8601 datetime",
-                                "type": "string"
-                            },
-                            "count": {
-                                "description": "count",
-                                "type": "number",
-                                "format": "double"
-                            }
-                        }
-                    }
-                }
+          },
+          "default": {
+            "description": "Error code with reason",
+            "schema": {
+              "$ref": "#/definitions/Error"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "analytics"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/analytics/crash_groups/{crash_group_id}/crash_counts": {
+      "get": {
+        "operationId": "Analytics_CrashGroupCounts",
+        "description": "Count of crashes by day in the time range of the selected crash group with selected version",
+        "parameters": [
+          {
+            "$ref": "#/parameters/CrashGroupParameter"
+          },
+          {
+            "$ref": "#/parameters/VersionParameter"
+          },
+          {
+            "$ref": "#/parameters/StartParameter"
+          },
+          {
+            "$ref": "#/parameters/EndParameter"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Count of crashes by day in the time range and total crashes over the time range.",
+            "schema": {
+              "$ref": "#/definitions/CrashCounts"
             }
-        },
-        "AnalyticsModels": {
-            "type": "object",
-            "properties": {
-                "total": {
-                    "type": "integer",
-                    "format": "int64"
-                },
-                "models": {
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/Model"
-                    }
-                }
+          },
+          "default": {
+            "description": "Error code with reason",
+            "schema": {
+              "$ref": "#/definitions/Error"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "analytics"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/analytics/crash_groups": {
+      "post": {
+        "operationId": "Analytics_CrashGroupsTotals",
+        "description": "Overall crashes and affected users count of the selected crash groups with selected versions",
+        "parameters": [
+          {
+            "$ref": "#/parameters/CrashGroupsParameter"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Overall crashes and affected users count for all selected crash groups",
+            "schema": {
+              "$ref": "#/definitions/CrashesOverall"
             }
-        },
-        "Model": {
-            "properties": {
-                "model_name": {
-                    "type": "string",
-                    "description": "model's name"
-                },
-                "count": {
-                    "description": "count current of model",
-                    "type": "integer",
-                    "format": "int64"
-                },
-                "previous_count": {
-                    "description": "count of previous model",
-                    "type": "integer",
-                    "format": "int64"
-                }
+          },
+          "default": {
+            "description": "Error code with reason",
+            "schema": {
+              "$ref": "#/definitions/Error"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "analytics"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/analytics/crash_counts": {
+      "get": {
+        "operationId": "Analytics_CrashCounts",
+        "description": "Count of crashes by day in the time range based the selected versions.",
+        "parameters": [
+          {
+            "$ref": "#/parameters/StartParameter"
+          },
+          {
+            "$ref": "#/parameters/EndParameter"
+          },
+          {
+            "$ref": "#/parameters/VersionsParameter"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Count of crashes by day in the time range and total crashes over the time range.",
+            "schema": {
+              "$ref": "#/definitions/CrashCounts"
             }
-        },
-        "Languages": {
-            "type": "object",
-            "properties": {
-                "total": {
-                    "type": "integer",
-                    "format": "int64"
-                },
-                "languages": {
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/Language"
-                    }
-                }
+          },
+          "default": {
+            "description": "Error code with reason",
+            "schema": {
+              "$ref": "#/definitions/Error"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "analytics"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/analytics/active_device_counts": {
+      "get": {
+        "operationId": "Analytics_DeviceCounts",
+        "description": "Count of active devices by interval in the time range.",
+        "parameters": [
+          {
+            "$ref": "#/parameters/StartParameter"
+          },
+          {
+            "$ref": "#/parameters/EndParameter"
+          },
+          {
+            "$ref": "#/parameters/VersionsParameter"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Count of active devices by interval in the time range.",
+            "schema": {
+              "$ref": "#/definitions/ActiveDeviceCounts"
             }
-        },
-        "Language": {
-            "properties": {
-                "language_name": {
-                    "type": "string",
-                    "description": "language's name"
-                },
-                "count": {
-                    "description": "count current of language",
-                    "type": "integer",
-                    "format": "int64"
-                },
-                "previous_count": {
-                    "description": "count of previous lanugage",
-                    "type": "integer",
-                    "format": "int64"
-                }
+          },
+          "default": {
+            "description": "Error code with reason",
+            "schema": {
+              "$ref": "#/definitions/Error"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "analytics"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}": {
+      "get": {
+        "description": "Return a specific app with the given app name which belongs to the given owner.",
+        "parameters": [
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/AppResponse"
             }
-        },
-        "OSes": {
-            "type": "object",
-            "properties": {
-                "total": {
-                    "type": "integer",
-                    "format": "int64"
-                },
-                "oses": {
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/OS"
-                    }
-                }
+          },
+          "400": {
+            "description": "BadRequest",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
             }
-        },
-        "OS": {
-            "properties": {
-                "os_name": {
-                    "type": "string",
-                    "description": "OS name"
-                },
-                "count": {
-                    "description": "count current of OS",
-                    "type": "integer",
-                    "format": "int64"
-                },
-                "previous_count": {
-                    "description": "count of previous OS",
-                    "type": "integer",
-                    "format": "int64"
-                }
+          },
+          "404": {
+            "description": "NotFound",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          }
+        },
+        "operationId": "getApp",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "account"
+        ]
+      },
+      "patch": {
+        "description": "Partially updates a single app",
+        "parameters": [
+          {
+            "$ref": "#/parameters/app_name"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "name": "app",
+            "in": "body",
+            "description": "The partial data for the app",
+            "schema": {
+              "$ref": "#/definitions/AppPatchRequest"
             }
-        },
-        "DateTimeCounts": {
-            "properties": {
-                "datetime": {
-                    "description": "the ISO 8601 datetime",
-                    "type": "string"
-                },
-                "count": {
-                    "description": "count of the object",
-                    "type": "integer",
-                    "format": "int64"
-                }
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/AppResponse"
             }
-        },
-        "DateTimeDecimalCounts": {
-            "properties": {
-                "datetime": {
-                    "description": "the ISO 8601 datetime",
-                    "type": "string"
-                },
-                "count": {
-                    "description": "decimal count of the object",
-                    "type": "number",
-                    "format": "double"
-                }
+          },
+          "400": {
+            "description": "BadRequest",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
             }
-        },
-        "AvailableVersions": {
-            "type": "object",
-            "properties": {
-                "versions": {
-                    "description": "List of available versions.",
-                    "type": "array",
-                    "items": {
-                        "description": "Version name.",
-                        "type": "string",
-                        "format": "string"
-                    }
-                },
-                "total_count": {
-                    "description": "The full number of versions accross all pages.",
-                    "type": "integer",
-                    "format": "int64"
-                }
+          },
+          "403": {
+            "description": "Forbidden",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
             }
-        },
-        "CrashFreeDevicePercentages": {
-            "type": "object",
-            "properties": {
-                "average_percentage": {
-                    "description": "Average percentage",
-                    "type": "integer",
-                    "format": "int64"
-                },
-                "daily_percentages": {
-                    "description": "The crash-free percentage per day.",
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/DateTimePercentages"
-                    }
-                }
+          },
+          "404": {
+            "description": "NotFound",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
             }
-        },
-        "DateTimePercentages": {
-            "properties": {
-                "datetime": {
-                    "description": "the ISO 8601 datetime",
-                    "type": "string"
-                },
-                "percentage": {
-                    "description": "percentage of the object",
-                    "type": "number",
-                    "format": "double"
-                }
+          },
+          "409": {
+            "description": "Conflict",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          }
+        },
+        "operationId": "updateApp",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "account"
+        ]
+      },
+      "delete": {
+        "description": "Delete an app",
+        "parameters": [
+          {
+            "$ref": "#/parameters/app_name"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          }
+        ],
+        "responses": {
+          "204": {
+            "description": "Success"
+          },
+          "403": {
+            "description": "Forbidden",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
             }
-        },
-        "CrashesOverall": {
-            "description": "list of crash groups with overall crashes count and affected users",
-            "type": "array",
-            "items": {
-                "type": "object",
-                "properties": {
-                    "crash_group_id": {
-                        "type": "string",
-                        "format": "string"
-                    },
-                    "app_version": {
-                        "type": "string",
-                        "format": "string"
-                    },
-                    "overall": {
-                        "$ref": "#/definitions/CrashOverall"
-                    }
-                }
+          },
+          "404": {
+            "description": "NotFound",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          }
+        },
+        "operationId": "deleteApp",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "account"
+        ]
+      }
+    },
+    "/v0.1/apps": {
+      "post": {
+        "description": "Creates a new app and returns it to the caller",
+        "parameters": [
+          {
+            "$ref": "#/parameters/app"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/AppResponse"
             }
-        },
-        "CrashOverall": {
-            "type": "object",
-            "properties": {
-                "crash_count": {
-                    "type": "integer",
-                    "format": "int64"
-                },
-                "device_count": {
-                    "type": "integer",
-                    "format": "int64"
-                }
+          },
+          "201": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/AppResponse"
             }
-        },
-        "CrashGroupModels": {
-            "type": "object",
-            "properties": {
-                "crash_count": {
-                    "type": "integer",
-                    "format": "int64"
-                },
-                "models": {
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/CrashGroupModel"
-                    }
-                }
+          },
+          "400": {
+            "description": "BadRequest",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
             }
-        },
-        "CrashGroupModel": {
-            "type": "object",
-            "properties": {
-                "model_name": {
-                    "type": "string",
-                    "description": "model's name"
-                },
-                "crash_count": {
-                    "description": "count of model",
-                    "type": "integer",
-                    "format": "int64"
-                }
+          },
+          "404": {
+            "description": "NotFound",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
             }
-        },
-        "CrashGroupOperatingSystems": {
-            "type": "object",
-            "properties": {
-                "crash_count": {
-                    "type": "integer",
-                    "format": "int64"
-                },
-                "operating_systems": {
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/CrashGroupOperatingSystem"
-                    }
-                }
+          },
+          "409": {
+            "description": "Conflict",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          }
+        },
+        "operationId": "createApp",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "account"
+        ]
+      },
+      "get": {
+        "description": "Returns a list of apps",
+        "parameters": [],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "type": "array",
+              "items": {
+                "$ref": "#/definitions/AppResponse"
+              }
+            }
+          },
+          "400": {
+            "description": "BadRequest",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
             }
-        },
-        "CrashGroupOperatingSystem": {
-            "type": "object",
-            "properties": {
-                "operating_system_name": {
-                    "type": "string",
-                    "description": "OS name"
-                },
-                "crash_count": {
-                    "type": "integer",
-                    "format": "int64",
-                    "description": "count of OS"
-                }
+          },
+          "404": {
+            "description": "NotFound",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          }
+        },
+        "operationId": "getMemberApps",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "account"
+        ]
+      }
+    },
+    "/v0.1/api_tokens/{api_token_id}": {
+      "delete": {
+        "operationId": "deleteApiToken",
+        "description": "Delete the api_token object with the specific id",
+        "parameters": [
+          {
+            "name": "api_token_id",
+            "type": "string",
+            "in": "path",
+            "description": "The unique ID (UUID) of the api token",
+            "required": true
+          }
+        ],
+        "responses": {
+          "204": {
+            "description": "Success"
+          },
+          "400": {
+            "description": "Error",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
             }
-        },
-        "CrashGroupContainer": {
-            "type": "object",
-            "required": [
-                "crash_groups"
-            ],
-            "properties": {
-                "crash_groups": {
-                    "type": "array",
-                    "minItems": 1,
-                    "items": {
-                        "$ref": "#/definitions/CrashGroupAndVersion"
-                    }
-                }
+          },
+          "401": {
+            "description": "Unauthorized",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
             }
-        },
-        "CrashGroupAndVersion": {
-            "type": "object",
-            "properties": {
-                "crash_group_id": {
-                    "type": "string",
-                    "format": "string"
-                },
-                "app_version": {
-                    "type": "string",
-                    "format": "string"
-                }
+          },
+          "404": {
+            "description": "NotFound",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          }
+        },
+        "security": [
+          {
+            "Basic": []
+          }
+        ],
+        "tags": [
+          "account"
+        ]
+      }
+    },
+    "/v0.1/api_tokens": {
+      "get": {
+        "operationId": "getApiTokens",
+        "description": "Returns api tokens for the authenticated user",
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "type": "array",
+              "items": {
+                "$ref": "#/definitions/ApiTokensGetResponse"
+              }
             }
-        },
-        "Events": {
-            "properties": {
-                "events": {
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/Event"
-                    }
-                },
-                "total": {
-                    "description": "the total count of events",
-                    "type": "integer",
-                    "format": "int64"
-                },
-                "total_devices": {
-                    "description": "the active device over this period",
-                    "type": "integer",
-                    "format": "int64"
-                }
+          },
+          "400": {
+            "description": "Error",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
             }
-        },
-        "Event": {
-            "type": "object",
-            "properties": {
-                "id": {
-                    "type": "string",
-                    "format": "string"
-                },
-                "name": {
-                    "type": "string",
-                    "format": "string"
-                },
-                "deviceCount": {
-                    "type": "integer",
-                    "format": "int64"
-                },
-                "previous_device_count": {
-                    "description": "the device count of previous time range of the event",
-                    "type": "integer",
-                    "format": "int64"
-                },
-                "count": {
-                    "type": "integer",
-                    "format": "int64"
-                },
-                "previous_count": {
-                    "description": "the event count of previous time range of the event",
-                    "type": "integer",
-                    "format": "int64"
-                },
-                "count_per_device": {
-                    "type": "integer",
-                    "format": "int64"
-                },
-                "count_per_session": {
-                    "type": "integer",
-                    "format": "int64"
-                }
+          },
+          "401": {
+            "description": "Unauthorized",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          }
+        },
+        "security": [
+          {
+            "Basic": []
+          }
+        ],
+        "tags": [
+          "account"
+        ]
+      },
+      "post": {
+        "operationId": "createApiToken",
+        "description": "Creates a new API token",
+        "parameters": [
+          {
+            "name": "description",
+            "in": "body",
+            "description": "Description of the token",
+            "schema": {
+              "$ref": "#/definitions/ApiTokensCreateRequest"
             }
-        },
-        "EventCount": {
-            "type": "object",
-            "properties": {
-                "total_count": {
-                    "type": "integer",
-                    "format": "int64"
-                },
-                "previous_total_count": {
-                    "type": "integer",
-                    "format": "int64"
-                },
-                "count": {
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/DateTimeCounts"
-                    }
-                }
+          }
+        ],
+        "responses": {
+          "201": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/ApiTokensCreateResponse"
             }
-        },
-        "EventDeviceCount": {
-            "type": "object",
-            "properties": {
-                "total_devices": {
-                    "type": "integer",
-                    "format": "int64"
-                },
-                "total_devices_with_event": {
-                    "type": "integer",
-                    "format": "int64"
-                },
-                "previous_total_devices_with_event": {
-                    "type": "integer",
-                    "format": "int64"
-                },
-                "devices_count": {
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/DateTimeCounts"
-                    }
-                }
+          },
+          "400": {
+            "description": "Error",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
             }
+          },
+          "401": {
+            "description": "Unauthorized",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          }
+        },
+        "security": [
+          {
+            "Basic": []
+          }
+        ],
+        "tags": [
+          "account"
+        ]
+      }
+    }
+  },
+  "definitions": {
+    "GetInAppUpdateTokenResponse": {
+      "properties": {
+        "api_token": {
+          "type": "string",
+          "description": "The api token generated will not be accessible again"
+        }
+      },
+      "required": [
+        "api_token"
+      ]
+    },
+    "ApiTokensCreateResponse": {
+      "properties": {
+        "id": {
+          "type": "string",
+          "description": "The unique id (UUID) of the api token"
+        },
+        "api_token": {
+          "type": "string",
+          "description": "The api token generated will not be accessible again"
+        },
+        "description": {
+          "type": "string",
+          "description": "The description of the token"
+        },
+        "created_at": {
+          "type": "string",
+          "description": "The creation time"
+        }
+      },
+      "required": [
+        "id",
+        "created_at",
+        "api_token"
+      ]
+    },
+    "ApiTokensCreateRequest": {
+      "properties": {
+        "description": {
+          "type": "string",
+          "description": "The description of the token"
+        }
+      }
+    },
+    "ApiTokensGetResponse": {
+      "properties": {
+        "id": {
+          "type": "string",
+          "description": "The unique id (UUID) of the api token"
+        },
+        "description": {
+          "type": "string",
+          "description": "The description of the token"
+        },
+        "created_at": {
+          "type": "string",
+          "description": "The creation time"
+        }
+      },
+      "required": [
+        "id",
+        "created_at"
+      ]
+    },
+    "Status": {
+      "required": [
+        "status"
+      ],
+      "properties": {
+        "status": {
+          "type": "string"
+        }
+      }
+    },
+    "Failure": {
+      "required": [
+        "message"
+      ],
+      "properties": {
+        "message": {
+          "type": "string"
+        }
+      }
+    },
+    "ErrorResponse": {
+      "type": "object",
+      "properties": {
+        "error": {
+          "$ref": "#/definitions/ErrorDetails"
+        }
+      },
+      "required": [
+        "error"
+      ]
+    },
+    "ErrorDetails": {
+      "properties": {
+        "code": {
+          "type": "string",
+          "enum": [
+            "BadRequest",
+            "Conflict",
+            "NotAcceptable",
+            "NotFound",
+            "InternalServerError",
+            "Unauthorized"
+          ]
+        },
+        "message": {
+          "type": "string"
+        }
+      },
+      "required": [
+        "code",
+        "message"
+      ]
+    },
+    "SuccessResponse": {
+      "required": [
+        "message"
+      ],
+      "properties": {
+        "message": {
+          "type": "string"
+        }
+      }
+    },
+    "AppPatchRequest": {
+      "properties": {
+        "description": {
+          "description": "A short text describing the app",
+          "type": "string"
+        },
+        "display_name": {
+          "description": "The display name of the app",
+          "type": "string"
+        },
+        "name": {
+          "description": "The name of the app used in URLs",
+          "type": "string"
+        }
+      }
+    },
+    "AppRequest": {
+      "properties": {
+        "description": {
+          "description": "A short text describing the app",
+          "type": "string"
+        },
+        "display_name": {
+          "description": "The descriptive name of the app. This can contain any characters",
+          "type": "string"
+        },
+        "name": {
+          "description": "The name of the app used in URLs",
+          "type": "string"
+        },
+        "os": {
+          "description": "The OS the app will be running on",
+          "type": "string",
+          "enum": [
+            "iOS",
+            "Android",
+            "Windows"
+          ]
+        },
+        "platform": {
+          "description": "The platform of the app",
+          "type": "string",
+          "enum": [
+            "Java",
+            "Objective-C-Swift",
+            "React-Native",
+            "UWP",
+            "Xamarin"
+          ]
+        }
+      },
+      "required": [
+        "display_name",
+        "os",
+        "platform"
+      ]
+    },
+    "DistributionGroupPatchRequest": {
+      "properties": {
+        "name": {
+          "description": "The name of the distribution group",
+          "type": "string"
+        }
+      }
+    },
+    "DistributionGroupRequest": {
+      "properties": {
+        "name": {
+          "description": "The name of the distribution group",
+          "type": "string"
+        }
+      },
+      "required": [
+        "name"
+      ]
+    },
+    "DistributionGroupUserRequest": {
+      "properties": {
+        "user_emails": {
+          "description": "The list of emails of the users",
+          "type": "array",
+          "items": {
+            "type": "string"
+          }
+        }
+      }
+    },
+    "FeaturePatchRequest": {
+      "properties": {
+        "description": {
+          "description": "The friendly name of the feature",
+          "type": "string"
+        },
+        "display_name": {
+          "description": "The full (friendly) name of the feature.",
+          "type": "string"
+        },
+        "state": {
+          "description": "The state of the feature",
+          "type": "integer"
+        }
+      }
+    },
+    "FeatureCreateRequest": {
+      "properties": {
+        "name": {
+          "type": "string",
+          "description": "The unique name of the feature"
+        },
+        "display_name": {
+          "type": "string",
+          "description": "The full (friendly) name of the feature."
+        },
+        "state": {
+          "type": "integer",
+          "description": "The state of the feature"
+        },
+        "description": {
+          "type": "string",
+          "description": "The friendly name of the feature"
+        }
+      },
+      "required": [
+        "name",
+        "display_name"
+      ]
+    },
+    "GrantAdminRoleRequest": {
+      "properties": {
+        "admin_role": {
+          "description": "The new admin_role",
+          "type": "string",
+          "enum": [
+            "superAdmin",
+            "admin",
+            "devOps",
+            "notAdmin"
+          ]
+        }
+      },
+      "required": [
+        "admin_role"
+      ]
+    },
+    "OrganizationPatchRequest": {
+      "properties": {
+        "display_name": {
+          "description": "The full (friendly) name of the organization.",
+          "type": "string"
+        },
+        "name": {
+          "description": "The name of the organization used in URLs",
+          "type": "string"
+        }
+      }
+    },
+    "OrganizationRequest": {
+      "properties": {
+        "display_name": {
+          "description": "The display name of the organization",
+          "type": "string"
+        },
+        "email": {
+          "type": "string",
+          "description": "The billing email address of the organization"
+        },
+        "name": {
+          "description": "The name of the organization used in URLs",
+          "type": "string"
+        }
+      },
+      "required": [
+        "name"
+      ]
+    },
+    "OrganizationUserPatchRequest": {
+      "properties": {
+        "role": {
+          "description": "The user's role in the organizatiion",
+          "type": "string",
+          "enum": [
+            "admin",
+            "collaborator"
+          ]
+        }
+      }
+    },
+    "UserInvitationPermissionsUpdateRequest": {
+      "properties": {
+        "permissions": {
+          "description": "The permissions the user has for the app in the invitation",
+          "type": "array",
+          "items": {
+            "type": "string",
+            "enum": [
+              "manager",
+              "developer",
+              "viewer"
+            ]
+          }
+        }
+      },
+      "required": [
+        "permissions"
+      ]
+    },
+    "UserEmailRequest": {
+      "properties": {
+        "user_email": {
+          "description": "The user's email address'",
+          "type": "string"
+        }
+      },
+      "required": [
+        "user_email"
+      ]
+    },
+    "UserUpdateRequest": {
+      "properties": {
+        "display_name": {
+          "description": "The full name of the user. Might for example be first and last name",
+          "type": "string"
+        }
+      }
+    },
+    "UserUpdateRequestInternal": {
+      "properties": {
+        "display_name": {
+          "description": "The full name of the user. Might for example be first and last name",
+          "type": "string"
+        },
+        "name": {
+          "description": "The new, unique name that is used to identify.",
+          "type": "string"
+        },
+        "next_nps_survey_date": {
+          "description": "The date in the future when the user should be checked again for NPS eligibility",
+          "type": "string"
+        }
+      }
+    },
+    "AppInvitationDetailResponse": {
+      "properties": {
+        "id": {
+          "description": "The unique ID (UUID) of the invitation",
+          "type": "string"
         },
-        "EventCountPerDevice": {
-            "type": "object",
-            "properties": {
-                "avg_count_per_device": {
-                    "type": "number",
-                    "format": "double"
-                },
-                "previous_avg_count_per_device": {
-                    "type": "number",
-                    "format": "double"
-                },
-                "count_per_device": {
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/DateTimeDecimalCounts"
-                    }
-                }
-            }
+        "app": {
+          "$ref": "#/definitions/AppResponse"
+        },
+        "email": {
+          "description": "The email address of the invited user",
+          "type": "string"
+        },
+        "invite_type": {
+          "description": "The invitation type",
+          "type": "string",
+          "enum": [
+            "developer",
+            "tester"
+          ]
+        },
+        "invited_by": {
+          "$ref": "#/definitions/UserProfileResponse"
+        },
+        "is_existing_user": {
+          "description": "Indicates whether the invited user already exists",
+          "type": "boolean"
+        }
+      },
+      "required": [
+        "id",
+        "email",
+        "is_existing_user",
+        "invited_by",
+        "invite_type",
+        "app"
+      ]
+    },
+    "AppResponse": {
+      "properties": {
+        "id": {
+          "description": "The unique ID (UUID) of the app",
+          "type": "string"
+        },
+        "app_secret": {
+          "description": "A unique and secret key used to identify the app in communication with the ingestion endpoint for crash reporting and analytics",
+          "type": "string"
+        },
+        "azure_subscription_id": {
+          "description": "The unique ID (UUID) of the Azure subscription associate with the app",
+          "type": "string"
+        },
+        "description": {
+          "description": "The description of the app",
+          "type": "string"
+        },
+        "display_name": {
+          "description": "The display name of the app",
+          "type": "string"
+        },
+        "icon_url": {
+          "description": "The string representation of the URL pointing to the app's icon",
+          "type": "string"
+        },
+        "name": {
+          "description": "The name of the app used in URLs",
+          "type": "string"
+        },
+        "os": {
+          "description": "The OS the app will be running on",
+          "type": "string",
+          "enum": [
+            "iOS",
+            "Android",
+            "Windows"
+          ]
+        },
+        "owner": {
+          "$ref": "#/definitions/Owner"
+        },
+        "platform": {
+          "description": "The platform of the app",
+          "type": "string",
+          "enum": [
+            "Java",
+            "Objective-C-Swift",
+            "React-Native",
+            "UWP",
+            "Xamarin"
+          ]
+        },
+        "origin": {
+          "description": "The origin of this app can only be mobile-center or hockeyapp for now",
+          "type": "string",
+          "enum": [
+            "mobile-center",
+            "hockeyapp"
+          ]
+        }
+      },
+      "required": [
+        "id",
+        "app_secret",
+        "display_name",
+        "name",
+        "os",
+        "owner",
+        "platform",
+        "origin"
+      ]
+    },
+    "DistributionGroupResponse": {
+      "properties": {
+        "id": {
+          "description": "The unique ID of the distribution group",
+          "type": "string"
+        },
+        "name": {
+          "description": "The name of the distribution group used in URLs",
+          "type": "string"
+        },
+        "origin": {
+          "description": "Indicates the origin source of the distribution group, it can be mobile-center or hockeyapp for now.",
+          "type": "string",
+          "enum": [
+            "mobile-center",
+            "hockeyapp"
+          ]
+        }
+      },
+      "required": [
+        "id",
+        "name",
+        "origin"
+      ]
+    },
+    "DistributionGroupUserDeleteResponse": {
+      "properties": {
+        "code": {
+          "description": "The code of the result",
+          "type": "string"
+        },
+        "message": {
+          "description": "The message of the result",
+          "type": "integer"
+        },
+        "status": {
+          "description": "The status code of the result",
+          "type": "integer"
+        },
+        "user_email": {
+          "description": "The email of the user",
+          "type": "string"
+        }
+      },
+      "required": [
+        "status"
+      ]
+    },
+    "DistributionGroupUserGetResponse": {
+      "properties": {
+        "id": {
+          "description": "The unique id (UUID) of the user",
+          "type": "string"
+        },
+        "avatar_url": {
+          "description": "The avatar URL of the user",
+          "type": "string"
+        },
+        "can_change_password": {
+          "description": "User is required to send an old password in order to change the password.",
+          "type": "boolean"
+        },
+        "display_name": {
+          "description": "The full name of the user. Might for example be first and last name",
+          "type": "string"
+        },
+        "email": {
+          "description": "The email address of the user",
+          "type": "string"
+        },
+        "invite_pending": {
+          "description": "Whether the has accepted the invite. Available when an invite is pending, and the value will be \"true\".",
+          "type": "boolean"
+        },
+        "name": {
+          "description": "The unique name that is used to identify the user.",
+          "type": "string"
+        }
+      },
+      "required": [
+        "email"
+      ]
+    },
+    "DistributionGroupUserPostResponse": {
+      "properties": {
+        "code": {
+          "description": "The code of the result",
+          "type": "string"
+        },
+        "invite_pending": {
+          "description": "Whether the has accepted the invite. Available when an invite is pending, and the value will be \"true\".",
+          "type": "boolean"
+        },
+        "message": {
+          "description": "The message of the result",
+          "type": "integer"
+        },
+        "status": {
+          "description": "The status code of the result",
+          "type": "integer"
+        },
+        "user_email": {
+          "description": "The email of the user",
+          "type": "string"
+        }
+      },
+      "required": [
+        "status"
+      ]
+    },
+    "DistributionGroupWithUsersResponse": {
+      "properties": {
+        "id": {
+          "description": "The unique ID of the distribution group",
+          "type": "string"
+        },
+        "name": {
+          "description": "The name of the distribution group used in URLs",
+          "type": "string"
+        },
+        "total_user_count": {
+          "description": "The count of users in the distribution group",
+          "type": "number"
+        },
+        "users": {
+          "description": "The distribution group users",
+          "items": {
+            "$ref": "#/definitions/DistributionGroupUserGetResponse"
+          },
+          "type": "array"
+        }
+      },
+      "required": [
+        "id",
+        "name",
+        "users",
+        "total_user_count"
+      ]
+    },
+    "FeatureNameResponse": {
+      "properties": {
+        "name": {
+          "description": "The unique name of the feature",
+          "type": "string"
+        }
+      },
+      "required": [
+        "name"
+      ]
+    },
+    "FeatureResponse": {
+      "properties": {
+        "description": {
+          "description": "The description of the feature",
+          "type": "string"
+        },
+        "display_name": {
+          "description": "The friendly name of the feature",
+          "type": "string"
+        },
+        "name": {
+          "description": "The unique name of the feature",
+          "type": "string"
+        },
+        "state": {
+          "description": "The state (unset, enabled, disabled) of the feature",
+          "type": "integer"
+        }
+      },
+      "required": [
+        "name",
+        "display_name",
+        "state"
+      ]
+    },
+    "OrgNameAvailabilityResponse": {
+      "properties": {
+        "available": {
+          "description": "The availability status of the requested org name",
+          "type": "boolean"
+        },
+        "name": {
+          "description": "The generated org name",
+          "type": "string"
+        }
+      },
+      "required": [
+        "available",
+        "name"
+      ]
+    },
+    "OrganizationResponse": {
+      "properties": {
+        "collaborator_role": {
+          "description": "The role the current user has within the organization",
+          "type": "string"
+        },
+        "display_name": {
+          "description": "The display name of the organization",
+          "type": "string"
+        },
+        "name": {
+          "description": "The slug name of the organization",
+          "type": "string"
+        }
+      },
+      "required": [
+        "collaborator_role",
+        "display_name",
+        "name"
+      ]
+    },
+    "OrganizationUserResponse": {
+      "properties": {
+        "email": {
+          "description": "The email address of the user",
+          "type": "string"
+        },
+        "display_name": {
+          "description": "The full name of the user. Might for example be first and last name",
+          "type": "string"
+        },
+        "joined_at": {
+          "description": "The date when the user joined the organization",
+          "type": "string"
+        },
+        "name": {
+          "description": "The unique name that is used to identify the user.",
+          "type": "string"
+        },
+        "role": {
+          "description": "The role the user has within the organization",
+          "type": "string"
+        }
+      },
+      "required": [
+        "display_name",
+        "email",
+        "joined_at",
+        "name",
+        "role"
+      ]
+    },
+    "UserNameAvailabilityResponse": {
+      "properties": {
+        "available": {
+          "description": "The availability status of the requested user name",
+          "type": "boolean"
+        },
+        "name": {
+          "description": "The requested user name",
+          "type": "string"
+        }
+      },
+      "required": [
+        "available",
+        "name"
+      ]
+    },
+    "UserProfileResponse": {
+      "properties": {
+        "id": {
+          "description": "The unique id (UUID) of the user",
+          "type": "string"
+        },
+        "avatar_url": {
+          "description": "The avatar URL of the user",
+          "type": "string"
+        },
+        "can_change_password": {
+          "description": "User is required to send an old password in order to change the password.",
+          "type": "boolean"
+        },
+        "display_name": {
+          "description": "The full name of the user. Might for example be first and last name",
+          "type": "string"
+        },
+        "email": {
+          "description": "The email address of the user",
+          "type": "string"
+        },
+        "name": {
+          "description": "The unique name that is used to identify the user.",
+          "type": "string"
+        }
+      },
+      "required": [
+        "id",
+        "display_name",
+        "email",
+        "name"
+      ]
+    },
+    "Owner": {
+      "description": "The information about the app's owner",
+      "properties": {
+        "id": {
+          "description": "The unique id (UUID) of the owner",
+          "type": "string"
+        },
+        "avatar_url": {
+          "description": "The avatar URL of the owner",
+          "type": "string"
+        },
+        "display_name": {
+          "description": "The owner's display name",
+          "type": "string"
+        },
+        "email": {
+          "description": "The owner's email address",
+          "type": "string"
+        },
+        "name": {
+          "description": "The unique name that used to identify the owner",
+          "type": "string"
+        },
+        "type": {
+          "description": "The owner type. Can either be 'org' or 'user'",
+          "type": "string",
+          "enum": [
+            "org",
+            "user"
+          ]
+        }
+      },
+      "required": [
+        "id",
+        "display_name",
+        "email",
+        "name",
+        "type"
+      ]
+    },
+    "SourceRepository": {
+      "description": "The source repository",
+      "properties": {
+        "name": {
+          "description": "The repository name",
+          "type": "string"
+        },
+        "clone_url": {
+          "description": "URL used to clone the repository"
+        }
+      }
+    },
+    "SourceRepositories": {
+      "description": "A list of source repositories",
+      "type": "array",
+      "items": {
+        "$ref": "#/definitions/SourceRepository"
+      }
+    },
+    "DownloadContainer": {
+      "description": "A download reference",
+      "properties": {
+        "uri": {
+          "type": "string",
+          "description": "Download URI"
+        }
+      },
+      "required": [
+        "uri"
+      ]
+    },
+    "WebSocketContainer": {
+      "description": "A websocket reference",
+      "properties": {
+        "url": {
+          "type": "string",
+          "description": "WebSocket URL"
+        }
+      },
+      "required": [
+        "url"
+      ]
+    },
+    "XcodeScheme": {
+      "properties": {
+        "name": {
+          "description": "Scheme name",
+          "type": "string"
+        },
+        "hasTestAction": {
+          "description": "Does scheme have a test action?",
+          "type": "boolean"
+        }
+      },
+      "required": [
+        "name",
+        "hasTestAction"
+      ]
+    },
+    "XcodeSchemeContainer": {
+      "properties": {
+        "path": {
+          "description": "Path to project",
+          "type": "string"
+        },
+        "sharedSchemes": {
+          "description": "Project schemes",
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/XcodeScheme"
+          }
+        },
+        "podfilePath": {
+          "description": "Path to CococaPods file, if present",
+          "type": "string"
+        }
+      },
+      "required": [
+        "path",
+        "sharedSchemes"
+      ]
+    },
+    "XamarinSolution": {
+      "properties": {
+        "path": {
+          "description": "Path to solution",
+          "type": "string"
+        },
+        "configurations": {
+          "description": "Solution configurations",
+          "type": "array",
+          "items": {
+            "type": "string"
+          }
+        }
+      },
+      "required": [
+        "path",
+        "configurations"
+      ]
+    },
+    "AndroidProject": {
+      "properties": {
+        "androidModules": {
+          "description": "Android Gradle modules",
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/AndroidModule"
+          }
+        },
+        "gradleWrapperPath": {
+          "description": "The path of the Gradle wrapper",
+          "type": "string"
+        }
+      },
+      "required": [
+        "androidModules"
+      ]
+    },
+    "AndroidModule": {
+      "properties": {
+        "name": {
+          "description": "Name of the Android module",
+          "type": "string"
+        },
+        "productFlavors": {
+          "description": "The product flavors of the Android module",
+          "type": "array",
+          "items": {
+            "type": "string"
+          }
+        },
+        "buildVariants": {
+          "description": "The build variants of the Android module (matrix of product flavor + build type (debug|release))",
+          "type": "array",
+          "items": {
+            "type": "string"
+          }
+        }
+      },
+      "required": [
+        "name"
+      ]
+    },
+    "ToolsetProjects": {
+      "description": "A collection of projects for each type of toolset",
+      "properties": {
+        "xcode": {
+          "description": "Xcode projects, with their schemes",
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/XcodeSchemeContainer"
+          }
+        },
+        "javascript": {
+          "description": "package.json filess",
+          "type": "array",
+          "items": {
+            "type": "string"
+          }
+        },
+        "xamarin": {
+          "description": "Xamarin solutions",
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/XamarinSolution"
+          }
+        },
+        "android": {
+          "$ref": "#/definitions/AndroidProject"
+        }
+      }
+    },
+    "BranchStatusCollection": {
+      "description": "A collection of branch status",
+      "type": "array",
+      "items": {
+        "$ref": "#/definitions/BranchStatus"
+      }
+    },
+    "BranchStatus": {
+      "description": "The branch build status",
+      "properties": {
+        "configured": {
+          "type": "boolean"
+        },
+        "lastBuild": {
+          "$ref": "#/definitions/Build"
+        }
+      },
+      "additionalProperties": {
+        "$ref": "#/definitions/BranchProperties"
+      },
+      "required": [
+        "configured"
+      ]
+    },
+    "BranchProperties": {
+      "description": "The branch build core properties",
+      "properties": {
+        "branch": {
+          "$ref": "#/definitions/Branch"
         },
-        "EventCountPerSession": {
-            "type": "object",
-            "properties": {
-                "avg_count_per_session": {
-                    "type": "number",
-                    "format": "double"
-                },
-                "previous_avg_count_per_session": {
-                    "type": "number",
-                    "format": "double"
-                },
-                "count_per_session": {
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/DateTimeDecimalCounts"
-                    }
-                }
-            }
+        "enabled": {
+          "type": "boolean"
+        }
+      }
+    },
+    "BranchConfiguration": {
+      "description": "The branch build configuration",
+      "properties": {
+        "id": {
+          "type": "integer"
+        },
+        "trigger": {
+          "type": "string",
+          "enum": [
+            "continous",
+            "continuous",
+            "manual"
+          ]
+        },
+        "testsEnabled": {
+          "type": "boolean"
+        },
+        "signed": {
+          "type": "boolean"
+        },
+        "toolsets": {
+          "$ref": "#/definitions/BranchConfigurationToolsets"
+        }
+      },
+      "additionalProperties": {
+        "$ref": "#/definitions/BranchProperties"
+      },
+      "required": [
+        "id"
+      ]
+    },
+    "BranchConfigurationToolsets": {
+      "description": "The branch build configuration for each toolset",
+      "properties": {
+        "xcode": {
+          "$ref": "#/definitions/XcodeBranchConfigurationProperties"
         },
-        "LogContainer": {
-            "type": "object",
-            "properties": {
-                "exceeded_max_limit": {
-                    "description": "indicates if the number of available logs are more than the max allowed return limit(100).",
-                    "type": "boolean"
-                },
-                "last_received_log_timestamp": {
-                    "description": "the timestamp of the last log received. This value can be used as the start time parameter in the consecutive API call.",
-                    "type": "string",
-                    "format": "date-time"
-                },
-                "logs": {
-                    "minItems": 0,
-                    "description": "the list of logs",
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/Log"
-                    }
-                }
-            },
-            "required": [
-                "logs"
-            ]
+        "javascript": {
+          "$ref": "#/definitions/JavaScriptBranchConfigurationProperties"
+        },
+        "xamarin": {
+          "$ref": "#/definitions/XamarinBranchConfigurationProperties"
         },
-        "Log": {
-            "type": "object",
-            "discriminator": "type",
-            "properties": {
-                "type": {
-                    "type": "string",
-                    "enum": [
-                        "event",
-                        "page",
-                        "start_session",
-                        "error",
-                        "push_installation"
-                    ],
-                    "description": "Log type.\n"
-                },
-                "timestamp": {
-                    "type": "string",
-                    "format": "date-time",
-                    "description": "Log creation timestamp.\n"
-                },
-                "install_id": {
-                    "type": "string",
-                    "format": "uuid",
-                    "description": "Install ID.\n"
-                },
-                "device": {
-                    "$ref": "#/definitions/Device"
-                }
-            },
-            "required": [
-                "type",
-                "timestamp",
-                "install_id",
-                "device"
-            ]
+        "android": {
+          "$ref": "#/definitions/AndroidBranchConfigurationProperties"
+        }
+      }
+    },
+    "XcodeBranchConfigurationProperties": {
+      "description": "Build configuration when Xcode is part of the build steps",
+      "properties": {
+        "projectOrWorkspacePath": {
+          "description": "Xcode project/workspace path",
+          "type": "string"
         },
-        "Device": {
-            "type": "object",
-            "description": "Device characteristics.",
-            "properties": {
-                "sdk_name": {
-                    "type": "string",
-                    "description": "Name of the SDK. Consists of the name of the SDK and the platform, e.g. \"avalanchesdk.ios\", \"hockeysdk.android\".\n"
-                },
-                "sdk_version": {
-                    "type": "string",
-                    "description": "Version of the SDK in semver format, e.g. \"1.2.0\" or \"0.12.3-alpha.1\".\n"
-                },
-                "wrapper_sdk_version": {
-                    "type": "string",
-                    "description": "Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.\n"
-                },
-                "wrapper_sdk_name": {
-                    "type": "string",
-                    "description": "Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. \"avalanchesdk.xamarin\", \"hockeysdk.cordova\".\n"
-                },
-                "model": {
-                    "type": "string",
-                    "description": "Device model (example: iPad2,3).\n"
-                },
-                "oem_name": {
-                    "type": "string",
-                    "description": "Device manufacturer (example: HTC).\n"
-                },
-                "os_name": {
-                    "type": "string",
-                    "description": "OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.\n"
-                },
-                "os_version": {
-                    "type": "string",
-                    "description": "OS version (example: 9.3.0).\n"
-                },
-                "os_build": {
-                    "type": "string",
-                    "description": "OS build code (example: LMY47X).\n"
-                },
-                "os_api_level": {
-                    "type": "integer",
-                    "description": "API level when applicable like in Android (example: 15).\n"
-                },
-                "locale": {
-                    "type": "string",
-                    "description": "Language code (example: en_US).\n"
-                },
-                "time_zone_offset": {
-                    "type": "integer",
-                    "description": "The offset in minutes from UTC for the device time zone, including daylight savings time.\n"
-                },
-                "screen_size": {
-                    "type": "string",
-                    "description": "Screen size of the device in pixels (example: 640x480).\n"
-                },
-                "app_version": {
-                    "type": "string",
-                    "description": "Application version name, e.g. 1.1.0\n"
-                },
-                "carrier_name": {
-                    "type": "string",
-                    "description": "Carrier name (for mobile devices).\n"
-                },
-                "carrier_code": {
-                    "type": "string",
-                    "description": "Carrier country code (for mobile devices).\n"
-                },
-                "carrier_country": {
-                    "type": "string",
-                    "description": "Carrier country.\n"
-                },
-                "app_build": {
-                    "type": "string",
-                    "description": "The app's build number, e.g. 42.\n"
-                },
-                "app_namespace": {
-                    "type": "string",
-                    "description": "The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.\n"
-                }
-            },
-            "required": [
-                "sdk_name",
-                "sdk_version",
-                "model",
-                "oem_name",
-                "os_name",
-                "os_version",
-                "locale",
-                "time_zone_offset",
-                "screen_size",
-                "app_version",
-                "app_build"
-            ]
+        "podfilePath": {
+          "description": "Path to CococaPods file, if present",
+          "type": "string"
         },
-        "EventProperties": {
-            "description": "Event properties during the time range",
-            "type": "object",
-            "properties": {
-                "event_properties": {
-                    "type": "array",
-                    "items": {
-                        "description": "The event property",
-                        "type": "string",
-                        "format": "string"
-                    }
-                }
-            }
+        "provisioningProfileEncoded": {
+          "type": "string"
         },
-        "EventPropertyValues": {
-            "description": "Event property value counts during the time range in descending order",
-            "type": "object",
-            "properties": {
-                "total": {
-                    "description": "The total property value counts",
-                    "type": "integer",
-                    "format": "int64"
-                },
-                "values": {
-                    "description": "The event property values",
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/EventPropertyValue"
-                    }
-                }
-            }
+        "certificateEncoded": {
+          "type": "string"
         },
-        "EventPropertyValue": {
-            "description": "An event property value with counts",
-            "type": "object",
-            "properties": {
-                "name": {
-                    "description": "The event property value name",
-                    "type": "string"
-                },
-                "count": {
-                    "description": "The count of the the event property value",
-                    "type": "integer",
-                    "format": "int64"
-                },
-                "previous_count": {
-                    "description": "The count of previous time range of the event property value",
-                    "type": "integer",
-                    "format": "int64"
-                }
-            }
+        "certificatePassword": {
+          "type": "string"
         },
-        "DeviceConfiguration": {
-            "properties": {
-                "name": {
-                    "description": "The name of the device model and OS version",
-                    "type": "string"
-                },
-                "id": {
-                    "type": "string",
-                    "format": "uuid",
-                    "description": "The unique id of the device configuration"
-                },
-                "tier": {
-                    "description": "The tier",
-                    "type": "number"
-                },
-                "image": {
-                    "properties": {
-                        "full": {
-                            "type": "string"
-                        },
-                        "thumb": {
-                            "type": "string"
-                        }
-                    }
-                },
-                "model": {
-                    "$ref": "#/definitions/DeviceModel"
-                },
-                "os": {
-                    "type": "string"
-                },
-                "osName": {
-                    "type": "string"
-                },
-                "marketShare": {
-                    "type": "number"
-                }
-            }
+        "scheme": {
+          "type": "string"
         },
-        "DeviceModel": {
-            "properties": {
-                "name": {
-                    "type": "string"
-                },
-                "manufacturer": {
-                    "type": "string"
-                },
-                "model": {
-                    "type": "string"
-                },
-                "platform": {
-                    "type": "string"
-                },
-                "dimensions": {
-                    "$ref": "#/definitions/DeviceDimensions"
-                },
-                "resolution": {
-                    "$ref": "#/definitions/DeviceResolution"
-                },
-                "releaseDate": {
-                    "type": "string"
-                },
-                "formFactor": {
-                    "type": "string"
-                },
-                "screenSize": {
-                    "$ref": "#/definitions/DeviceScreenSize"
-                },
-                "cpu": {
-                    "$ref": "#/definitions/DeviceCpu"
-                },
-                "memory": {
-                    "$ref": "#/definitions/DeviceMemory"
-                },
-                "screenRotation": {
-                    "type": "number"
-                },
-                "deviceFrame": {
-                    "$ref": "#/definitions/DeviceFrame"
-                },
-                "availabilityCount": {
-                    "type": "number"
-                }
-            }
+        "xcodeVersion": {
+          "type": "string"
         },
-        "DeviceScreenSize": {
-            "description": "Physical device screen dimensions",
-            "properties": {
-                "cm": {
-                    "type": "string"
-                },
-                "in": {
-                    "type": "string"
-                }
-            }
+        "provisioningProfileFilename": {
+          "type": "string"
         },
-        "DeviceResolution": {
-            "description": "Device screen resolution",
-            "properties": {
-                "height": {
-                    "type": "string"
-                },
-                "width": {
-                    "type": "string"
-                },
-                "ppi": {
-                    "type": "string"
-                }
-            }
+        "certificateFilename": {
+          "type": "string"
         },
-        "DeviceDimensions": {
-            "description": "Physical device dimensions",
-            "properties": {
-                "depth": {
-                    "type": "object"
-                },
-                "height": {
-                    "type": "object"
-                },
-                "width": {
-                    "type": "object"
-                }
-            }
+        "teamId": {
+          "type": "string"
         },
-        "DeviceCpu": {
-            "description": "CPU data for device",
-            "properties": {
-                "frequency": {
-                    "type": "string"
-                },
-                "core": {
-                    "type": "string"
-                }
-            }
+        "automaticSigning": {
+          "type": "boolean"
+        }
+      },
+      "required": [
+        "projectOrWorkspacePath",
+        "scheme",
+        "xcodeVersion"
+      ]
+    },
+    "AndroidBranchConfigurationProperties": {
+      "description": "Build configuration for Android projects",
+      "properties": {
+        "gradleWrapperPath": {
+          "description": "Path to the Gradle wrapper script",
+          "type": "string"
+        },
+        "module": {
+          "description": "The Gradle module to build",
+          "type": "string"
+        },
+        "variant": {
+          "description": "The Android build variant to build",
+          "type": "string"
+        },
+        "runTests": {
+          "description": "Whether to run unit tests during the build (default)",
+          "type": "boolean",
+          "default": true
+        },
+        "runLint": {
+          "description": "Whether to run lint checks during the build (default)",
+          "type": "boolean",
+          "default": true
+        }
+      },
+      "required": [
+        "module",
+        "variant"
+      ]
+    },
+    "JavaScriptBranchConfigurationProperties": {
+      "description": "Build configuration when React Native, or other JavaScript tech, is part of the build steps",
+      "properties": {
+        "packageJsonPath": {
+          "description": "Path to package.json file for the main project, e.g. \"package.json\" or \"myapp/package.json\"",
+          "type": "string"
+        },
+        "runTests": {
+          "description": "Whether to run Jest unit tests, via npm test, during the build",
+          "type": "boolean",
+          "default": true
+        }
+      },
+      "required": [
+        "packageJsonPath"
+      ]
+    },
+    "XamarinBranchConfigurationProperties": {
+      "description": "Build configuration for Xamarin projects",
+      "properties": {
+        "slnPath": {
+          "type": "string"
         },
-        "DeviceMemory": {
-            "description": "Memory data for device",
-            "properties": {
-                "formattedSize": {
-                    "type": "string"
-                }
-            }
+        "isSimBuild": {
+          "type": "string"
         },
-        "DeviceFrame": {
-            "properties": {
-                "grid": {
-                    "$ref": "#/definitions/DeviceFrameDefinition"
-                },
-                "full": {
-                    "$ref": "#/definitions/DeviceFrameDefinition"
-                }
-            }
+        "args": {
+          "type": "string"
         },
-        "DeviceFrameDefinition": {
-            "properties": {
-                "width": {
-                    "type": "number"
-                },
-                "height": {
-                    "type": "number"
-                },
-                "frameUrl": {
-                    "type": "string"
-                },
-                "screen": {
-                    "type": "array",
-                    "items": {
-                        "type": "number"
-                    }
-                }
-            }
+        "configuration": {
+          "type": "string"
         },
-        "TestRun": {
-            "title": "Test Run",
-            "description": "Summary single test run on Xamarin Test Cloud",
-            "type": "object",
-            "properties": {
-                "id": {
-                    "type": "string",
-                    "format": "uuid",
-                    "description": "The unique id of the test upload"
-                },
-                "date": {
-                    "description": "The date and time the test was uploaded",
-                    "type": "string"
-                },
-                "appVersion": {
-                    "description": "The compiled version of the app binary",
-                    "type": "string"
-                },
-                "testSeries": {
-                    "description": "The name of the test series with which this test upload is associated",
-                    "type": "string"
-                },
-                "platform": {
-                    "description": "The device platform targeted by the test. Possible values are 'ios' or 'android'",
-                    "type": "string"
-                },
-                "runStatus": {
-                    "description": "The current status of the test run, in relation to the various phases",
-                    "type": "string"
-                },
-                "resultStatus": {
-                    "description": "The passed/failed state",
-                    "type": "string"
-                },
-                "state": {
-                    "description": "Deprecated. Use runStatus instead.",
-                    "type": "string"
-                },
-                "status": {
-                    "description": "Deprecated. Use resultStatus instead.",
-                    "type": "string"
-                },
-                "description": {
-                    "description": "Human readable explanation of the current test status",
-                    "type": "string"
-                },
-                "stats": {
-                    "$ref": "#/definitions/TestRunStatistics"
-                },
-                "testType": {
-                    "description": "The name of the test framework used to run this test",
-                    "type": "string"
-                },
-                "uploadedBy": {
-                    "type": "string",
-                    "description": "The name of the user who uploaded the test"
-                }
-            }
+        "p12File": {
+          "type": "string"
         },
-        "TestRunStatistics": {
-            "title": "Test Run Statistics",
-            "description": "Summary single test run on Xamarin Test Cloud",
-            "type": "object",
-            "properties": {
-                "devices": {
-                    "description": "Number of devices running the test",
-                    "type": "number"
-                },
-                "devicesFinished": {
-                    "description": "Number of finished devices",
-                    "type": "number"
-                },
-                "devicesFailed": {
-                    "description": "Number of failed devices",
-                    "type": "number"
-                },
-                "total": {
-                    "description": "Number of tests in total",
-                    "type": "number"
-                },
-                "passed": {
-                    "description": "Number of passed tests",
-                    "type": "number"
-                },
-                "failed": {
-                    "description": "Number of failed tests",
-                    "type": "number"
-                },
-                "skipped": {
-                    "description": "Number of skipped tests",
-                    "type": "number"
-                },
-                "peakMemory": {
-                    "description": "The max amount of MB used during the test run",
-                    "type": "number"
-                },
-                "totalDeviceMinutes": {
-                    "description": "The number of minutes of device time the test has been runnign",
-                    "type": "number"
-                }
-            }
+        "p12Pwd": {
+          "type": "string"
         },
-        "TestSeries": {
-            "title": "Test Series",
-            "description": "Summary of a single test series",
-            "type": "object",
-            "properties": {
-                "slug": {
-                    "description": "Unique, human-readable identifier of the test series",
-                    "type": "string"
-                },
-                "name": {
-                    "description": "Name of the test series",
-                    "type": "string"
-                },
-                "mostRecentActivity": {
-                    "description": "Date of the latest test run that used this test series",
-                    "type": "string",
-                    "format": "dateTime"
-                },
-                "testRuns": {
-                    "description": "Most recent test runs",
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/TestRunSummary"
-                    }
-                }
-            },
-            "required": [
-                "slug",
-                "name"
-            ]
+        "provProfile": {
+          "type": "string"
+        }
+      },
+      "required": [
+        "slnPath",
+        "isSimBuild",
+        "args",
+        "configuration",
+        "p12File",
+        "p12Pwd",
+        "provProfile"
+      ]
+    },
+    "Branch": {
+      "properties": {
+        "name": {
+          "description": "The branch name",
+          "type": "string"
+        },
+        "commit": {
+          "$ref": "#/definitions/Commit"
+        }
+      },
+      "required": [
+        "name",
+        "commit"
+      ]
+    },
+    "Commit": {
+      "properties": {
+        "sha": {
+          "description": "The commit SHA",
+          "type": "string"
         },
-        "TestRunSummary": {
-            "title": "Test Run Summary",
-            "description": "Most important information about a test run.",
-            "type": "object",
-            "properties": {
-                "date": {
-                    "description": "Date of the test run.",
-                    "type": "string",
-                    "format": "dateTime"
-                },
-                "statusDescription": {
-                    "description": "Human-readable status of the test run.",
-                    "type": "string"
-                },
-                "failed": {
-                    "description": "Number of failed tests",
-                    "type": "number"
-                },
-                "passed": {
-                    "description": "Number of passed tests",
-                    "type": "number"
-                },
-                "completed": {
-                    "description": "Tells whether the test run has completed",
-                    "type": "boolean"
-                }
-            }
+        "url": {
+          "description": "The URL to the commit",
+          "type": "string"
+        }
+      }
+    },
+    "RepoConfig": {
+      "properties": {
+        "type": {
+          "description": "Type of repository",
+          "type": "string"
+        },
+        "state": {
+          "type": "string",
+          "enum": [
+            "unauthorized",
+            "inactive",
+            "active"
+          ],
+          "description": "State of the configuration"
+        },
+        "repo_url": {
+          "type": "string",
+          "description": "URL of the repository"
+        },
+        "id": {
+          "type": "string",
+          "description": "Repository identifier"
+        }
+      },
+      "required": [
+        "type",
+        "state"
+      ]
+    },
+    "RepoConfigs": {
+      "description": "A list of repo configurations",
+      "type": "array",
+      "items": {
+        "$ref": "#/definitions/RepoConfig"
+      }
+    },
+    "RepoInfo": {
+      "properties": {
+        "repo_url": {
+          "type": "string",
+          "description": "The repository url"
+        }
+      },
+      "required": [
+        "repo_url"
+      ]
+    },
+    "Branches": {
+      "description": "A list of branches",
+      "type": "array",
+      "items": {
+        "$ref": "#/definitions/Branch"
+      }
+    },
+    "XcodeVersions": {
+      "description": "A list of Xcode versions",
+      "type": "array",
+      "items": {
+        "$ref": "#/definitions/XcodeVersion"
+      }
+    },
+    "XcodeVersion": {
+      "description": "The Xcode version",
+      "properties": {
+        "name": {
+          "description": "The version name",
+          "type": "string"
+        },
+        "current": {
+          "description": "If the version is current",
+          "type": "boolean"
+        }
+      }
+    },
+    "Builds": {
+      "description": "A list of builds",
+      "type": "array",
+      "items": {
+        "$ref": "#/definitions/Build"
+      }
+    },
+    "BuildParams": {
+      "properties": {
+        "sourceVersion": {
+          "type": "string",
+          "description": "Version to build"
+        },
+        "debug": {
+          "type": "boolean",
+          "description": "Run build in debug mode"
+        }
+      }
+    },
+    "Build": {
+      "properties": {
+        "id": {
+          "description": "The build ID",
+          "type": "integer",
+          "minimum": 0,
+          "exclusiveMinimum": true
+        },
+        "buildNumber": {
+          "description": "The build number",
+          "type": "string"
+        },
+        "queueTime": {
+          "description": "The time the build was queued",
+          "type": "string",
+          "format": "dateTime"
+        },
+        "startTime": {
+          "description": "The time the build was started",
+          "type": "string",
+          "format": "dateTime"
+        },
+        "finishTime": {
+          "description": "The time the build was finished",
+          "type": "string",
+          "format": "dateTime"
+        },
+        "lastChangedDate": {
+          "description": "The time the build status was last changed",
+          "type": "string",
+          "format": "dateTime"
+        },
+        "status": {
+          "description": "The build status",
+          "type": "string"
+        },
+        "result": {
+          "description": "The build result",
+          "type": "string"
+        },
+        "sourceBranch": {
+          "description": "The source branch name",
+          "type": "string"
+        },
+        "sourceVersion": {
+          "description": "The source SHA",
+          "type": "string"
+        }
+      },
+      "required": [
+        "id",
+        "buildNumber",
+        "queueTime",
+        "status",
+        "result",
+        "sourceBranch",
+        "sourceVersion"
+      ]
+    },
+    "BuildPatch": {
+      "properties": {
+        "status": {
+          "description": "The build status; used to cancel builds",
+          "type": "string",
+          "enum": [
+            "cancelling"
+          ]
+        }
+      }
+    },
+    "BuildLog": {
+      "properties": {
+        "value": {
+          "type": "array",
+          "items": {
+            "type": "string"
+          }
+        }
+      }
+    },
+    "DistributionRequest": {
+      "properties": {
+        "distributionGroupId": {
+          "type": "string",
+          "description": "The distribution group ID"
+        },
+        "releaseNotes": {
+          "type": "string",
+          "description": "The release notes"
+        }
+      },
+      "required": [
+        "distributionGroupId"
+      ]
+    },
+    "DistributionResponse": {
+      "properties": {
+        "status": {
+          "type": "string",
+          "description": "Status of the Request"
+        },
+        "upload_id": {
+          "type": "string",
+          "description": "A unique ID of the upload"
+        }
+      }
+    },
+    "ValidationErrorResponse": {
+      "required": [
+        "id",
+        "code",
+        "message"
+      ],
+      "properties": {
+        "id": {
+          "type": "string"
+        },
+        "code": {
+          "type": "string"
+        },
+        "message": {
+          "type": "string"
+        }
+      }
+    },
+    "BasicReleaseDetails": {
+      "description": "Basic information on a release",
+      "properties": {
+        "id": {
+          "description": "ID identifying this unique release.",
+          "type": "number"
+        },
+        "version": {
+          "description": "The release's version.<br>\nFor iOS: CFBundleVersion from info.plist.<br>\nFor Android: android:versionCode from AppManifest.xml.\n",
+          "type": "string"
+        },
+        "short_version": {
+          "description": "The release's short version.<br>\nFor iOS: CFBundleShortVersionString from info.plist.<br>\nFor Android: android:versionName from AppManifest.xml.  \n",
+          "type": "string"
+        },
+        "uploaded_at": {
+          "description": "UTC time in ISO 8601 format of the uploaded time.",
+          "type": "string"
+        },
+        "distribution_groups": {
+          "description": "a list of distribution groups that are associated with this release.",
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/DistributionGroup"
+          }
+        }
+      }
+    },
+    "ReleaseDetails": {
+      "description": "Details of an uploaded release",
+      "properties": {
+        "id": {
+          "description": "ID identifying this unique release.",
+          "type": "number"
+        },
+        "status": {
+          "description": "OBSOLETE. Will be removed in next version. The availability concept is now replaced with distributed. Any 'available' release will be associated with the default distribution group of an app.</br>   \nThe release state.<br> \n<b>available</b>: The uploaded release has been distributed.<br>\n<b>unavailable</b>: The uploaded release is not visible to the user. <br>\n",
+          "type": "string",
+          "enum": [
+            "available",
+            "unavailable"
+          ]
         },
-        "DeviceSelection": {
-            "title": "Device Selection",
-            "description": "Short ID for a list of device IDs",
-            "type": "object",
-            "properties": {
-                "shortId": {
-                    "description": "Identifier of the device selection",
-                    "type": "string"
-                }
-            },
-            "required": [
-                "shortId"
-            ]
+        "app_name": {
+          "description": "The app's name (extracted from the uploaded release).",
+          "type": "string"
+        },
+        "version": {
+          "description": "The release's version.<br>\nFor iOS: CFBundleVersion from info.plist.\nFor Android: android:versionCode from AppManifest.xml.\n",
+          "type": "string"
+        },
+        "short_version": {
+          "description": "The release's short version.<br>\nFor iOS: CFBundleShortVersionString from info.plist.\nFor Android: android:versionName from AppManifest.xml.  \n",
+          "type": "string"
+        },
+        "release_notes": {
+          "description": "The release's release notes.",
+          "type": "string"
+        },
+        "provisioning_profile_name": {
+          "description": "The release's release notes.",
+          "type": "string"
+        },
+        "size": {
+          "description": "The release's size in bytes.",
+          "type": "number"
+        },
+        "min_os": {
+          "description": "The release's minimum required operating system.",
+          "type": "string"
+        },
+        "android_min_api_level": {
+          "description": "The release's minimum required Android API level.",
+          "type": "string"
+        },
+        "fingerprint": {
+          "description": "MD5 checksum of the release binary.",
+          "type": "string"
+        },
+        "uploaded_at": {
+          "description": "UTC time in ISO 8601 format of the uploaded time.",
+          "type": "string"
+        },
+        "download_url": {
+          "description": "The URL that hosts the binary for this release.",
+          "type": "string"
+        },
+        "app_icon_url": {
+          "description": "A URL to the app's icon.",
+          "type": "string"
+        },
+        "install_url": {
+          "description": "The href required to install a release on a mobile device. On iOS devices will be prefixed with `itms-services://?action=download-manifest&url=`",
+          "type": "string"
+        },
+        "distribution_groups": {
+          "description": "a list of distribution groups that are associated with this release.",
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/DistributionGroup"
+          }
+        }
+      }
+    },
+    "ReleaseUploadBeginResponse": {
+      "description": "A response containing information pertaining to starting a release upload process",
+      "properties": {
+        "upload_id": {
+          "description": "The ID for the current upload",
+          "type": "string"
+        },
+        "upload_url": {
+          "description": "The URL where the client needs to upload the release to",
+          "type": "string"
+        }
+      },
+      "required": [
+        "upload_id",
+        "upload_url"
+      ]
+    },
+    "ReleaseUploadEndRequest": {
+      "description": "A request containing information pertaining to complete a release upload process",
+      "properties": {
+        "status": {
+          "description": "The desired operation for the upload",
+          "type": "string",
+          "enum": [
+            "committed",
+            "aborted"
+          ]
+        }
+      },
+      "required": [
+        "status"
+      ]
+    },
+    "ReleaseUploadEndResponse": {
+      "description": "A response containing information about the uploaded release.",
+      "properties": {
+        "release_url": {
+          "description": "A URL to the new release. If upload was aborted will be null.",
+          "type": "string"
+        }
+      }
+    },
+    "ReleaseUpdateRequest": {
+      "description": "A request containing information for updating a release.",
+      "properties": {
+        "distribution_group_name": {
+          "description": "Name of a distribution group. The release will be associated with this distribution group. If the distribution group doesn't exist a 400 is returned. If both distribution group name and id are passed, the id is taking precedence.",
+          "type": "string"
+        },
+        "distribution_group_id": {
+          "description": "Id of a distribution group. The release will be associated with this distribution group. If the distribution group doesn't exist a 400 is returned. If both distribution group name and id are passed, the id is taking precedence.",
+          "type": "string"
+        },
+        "release_notes": {
+          "description": "Release notes for this release.",
+          "type": "string"
+        }
+      }
+    },
+    "ReleaseDeleteResponse": {
+      "description": "Release has successfully been deleted."
+    },
+    "PackageUploadBeginResponse": {
+      "description": "A response containing information pertaining to starting a package upload process",
+      "properties": {
+        "upload_id": {
+          "description": "The ID for the current upload",
+          "type": "string"
+        },
+        "upload_url": {
+          "description": "The URL where the client needs to upload the package to",
+          "type": "string"
+        }
+      },
+      "required": [
+        "upload_id",
+        "upload_url"
+      ]
+    },
+    "PackageUploadEndRequest": {
+      "description": "A request containing information pertaining to completing a package upload process",
+      "properties": {
+        "status": {
+          "description": "The desired operation for the upload",
+          "type": "string",
+          "enum": [
+            "committed",
+            "aborted"
+          ]
+        }
+      },
+      "required": [
+        "status"
+      ]
+    },
+    "PackageUploadEndResponse": {
+      "description": "A response containing information about the uploaded package.",
+      "properties": {
+        "package_url": {
+          "description": "A URL to the new package. If upload was aborted will be null.",
+          "type": "string"
+        }
+      }
+    },
+    "PackageUpdateRequest": {
+      "description": "A request containing information for updating a package.",
+      "properties": {
+        "distribution_group_name": {
+          "description": "Name of a distribution group. The package will be associated with this distribution group. If the distribution group doesn't exist a 400 is returned. If both distribution group name and id are passed, the id is taking precedence.",
+          "type": "string"
+        },
+        "distribution_group_id": {
+          "description": "Id of a distribution group. The package will be associated with this distribution group. If the distribution group doesn't exist a 400 is returned. If both distribution group name and id are passed, the id is taking precedence.",
+          "type": "string"
+        },
+        "release_notes": {
+          "description": "Release notes for this package.",
+          "type": "string"
+        }
+      }
+    },
+    "DistributionGroup": {
+      "properties": {
+        "id": {
+          "description": "ID identifying a unique distribution group.",
+          "type": "string"
+        },
+        "name": {
+          "description": "A name identifying a unique distribution group.",
+          "type": "string"
+        },
+        "is_latest": {
+          "description": "Is the containing release the latest one in this distribution group.",
+          "type": "boolean"
+        }
+      }
+    },
+    "BasicPackageDetails": {
+      "description": "Basic information on a pacakge",
+      "properties": {
+        "package_id": {
+          "description": "ID identifying this unique package.",
+          "type": "string"
+        },
+        "version": {
+          "description": "The package's version.<br>\nFor iOS: CFBundleVersion from info.plist.<br>\nFor Android: android:versionCode from AppManifest.xml.\n",
+          "type": "string"
+        },
+        "short_version": {
+          "description": "The package's short version.<br>\nFor iOS: CFBundleShortVersionString from info.plist.<br>\nFor Android: android:versionName from AppManifest.xml.  \n",
+          "type": "string"
+        },
+        "uploaded_at": {
+          "description": "UTC time in ISO 8601 format of the uploaded time.",
+          "type": "string"
+        },
+        "distribution_groups": {
+          "description": "a list of distribution groups that are associated with this package.",
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/DistributionGroup"
+          }
+        }
+      }
+    },
+    "PackageDetails": {
+      "description": "Details of an uploaded package",
+      "properties": {
+        "package_id": {
+          "description": "ID identifying this unique package.",
+          "type": "string"
+        },
+        "status": {
+          "description": "OBSOLETE. Will be removed in next version. The availability concept is now replaced with distributed. Any 'available' package will be associated with the default distribution group of an app.</br>   \nThe package state.<br> \n<b>available</b>: The uploaded package has been distributed.<br>\n<b>unavailable</b>: The uploaded package is not visible to the user. <br>\n",
+          "type": "string",
+          "enum": [
+            "available",
+            "unavailable"
+          ]
         },
-        "Subscription": {
-            "title": "Subscription",
-            "description": "Subscription information",
-            "type": "object",
-            "properties": {
-                "startsAt": {
-                    "description": "The date the subscription began",
-                    "type": "string",
-                    "format": "dateTime"
-                },
-                "endsAt": {
-                    "description": "The date the subscription will end or ended",
-                    "type": "string",
-                    "format": "dateTime"
-                },
-                "daysLeft": {
-                    "description": "The number of days left in the subscription",
-                    "type": "number"
-                },
-                "tier": {
-                    "$ref": "#/definitions/Tier"
-                },
-                "active": {
-                    "description": "Is the subscription currently active?",
-                    "type": "boolean"
-                },
-                "id": {
-                    "description": "Id of the subscription",
-                    "type": "string",
-                    "format": "uuid"
-                }
-            }
+        "app_name": {
+          "description": "The app's name (extracted from the uploaded package).",
+          "type": "string"
+        },
+        "version": {
+          "description": "The package's version.<br>\nFor iOS: CFBundleVersion from info.plist.\nFor Android: android:versionCode from AppManifest.xml.\n",
+          "type": "string"
+        },
+        "short_version": {
+          "description": "The package's short version.<br>\nFor iOS: CFBundleShortVersionString from info.plist.\nFor Android: android:versionName from AppManifest.xml.  \n",
+          "type": "string"
+        },
+        "release_notes": {
+          "description": "The package's release notes.",
+          "type": "string"
+        },
+        "provisioning_profile_name": {
+          "description": "The package's release notes.",
+          "type": "string"
+        },
+        "size": {
+          "description": "The package's size in bytes.",
+          "type": "number"
+        },
+        "min_os": {
+          "description": "The package's minimum required operating system.",
+          "type": "string"
+        },
+        "fingerprint": {
+          "description": "MD5 checksum of the package binary.",
+          "type": "string"
+        },
+        "uploaded_at": {
+          "description": "UTC time in ISO 8601 format of the uploaded time.",
+          "type": "string"
+        },
+        "download_url": {
+          "description": "The URL that hosts the binary for this package.",
+          "type": "string"
+        },
+        "app_icon_url": {
+          "description": "A URL to the app's icon.",
+          "type": "string"
+        },
+        "install_url": {
+          "description": "The href required to install a package on a mobile device. On iOS devices will be prefixed with `itms-services://?action=download-manifest&url=`",
+          "type": "string"
+        },
+        "distribution_groups": {
+          "description": "a list of distribution groups that are associated with this package.",
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/DistributionGroup"
+          }
+        }
+      }
+    },
+    "Symbol": {
+      "properties": {
+        "symbol_id": {
+          "description": "The unique id for this symbol (uuid)",
+          "type": "string"
+        },
+        "type": {
+          "description": "The type of the symbol for the current symbol upload",
+          "type": "string",
+          "enum": [
+            "Apple",
+            "JavaScript"
+          ]
         },
-        "Tier": {
-            "title": "Subscription Tier",
-            "type": "object",
-            "properties": {
-                "name": {
-                    "description": "The name of the tier",
-                    "type": "string"
-                }
-            }
+        "app_id": {
+          "description": "The application that this symbol belongs to",
+          "type": "string"
+        },
+        "platform": {
+          "description": "The platform that this symbol is for",
+          "type": "string"
+        },
+        "url": {
+          "description": "The URL at which the client may download the symbol file",
+          "type": "string"
+        },
+        "origin": {
+          "description": "The origin of the symbol file",
+          "type": "string",
+          "enum": [
+            "System",
+            "User"
+          ]
+        },
+        "alternate_symbol_ids": {
+          "description": "The other symbols in the same file",
+          "type": "array",
+          "items": {
+            "type": "string"
+          }
+        },
+        "status": {
+          "description": "Whether the symbol is ignored.",
+          "type": "string",
+          "enum": [
+            "available",
+            "ignored"
+          ]
+        }
+      },
+      "required": [
+        "symbol_id",
+        "platform",
+        "type",
+        "app_id",
+        "url",
+        "origin",
+        "alternate_symbol_ids",
+        "status"
+      ]
+    },
+    "Symbols": {
+      "description": "A response containing the list of symbols matching the specified filter (if any was provided)",
+      "type": "array",
+      "items": {
+        "$ref": "#/definitions/Symbol"
+      }
+    },
+    "SymbolUpload": {
+      "description": "A single symbol upload entity",
+      "properties": {
+        "symbol_upload_id": {
+          "description": "The id for the current symbol upload",
+          "type": "string"
         },
-        "TestReport": {
-            "required": [
-                "app_upload_id",
-                "date",
-                "testType",
-                "platform",
-                "stats",
-                "id",
-                "schema_version",
-                "revision",
-                "features",
-                "finished_device_snapshots",
-                "device_logs",
-                "date_finished"
-            ],
-            "properties": {
-                "app_upload_id": {
-                    "type": "string"
-                },
-                "date": {
-                    "type": "string"
-                },
-                "testType": {
-                    "type": "string"
-                },
-                "platform": {
-                    "type": "string"
-                },
-                "stats": {
-                    "required": [
-                        "os",
-                        "devices",
-                        "filesize",
-                        "totalDeviceMinutes",
-                        "devices_not_runned",
-                        "failed",
-                        "skipped",
-                        "passed",
-                        "total",
-                        "devices_finished",
-                        "devices_failed",
-                        "devices_skipped",
-                        "step_count"
-                    ],
-                    "properties": {
-                        "os": {
-                            "type": "number"
-                        },
-                        "devices": {
-                            "type": "number"
-                        },
-                        "filesize": {
-                            "type": "number"
-                        },
-                        "totalDeviceMinutes": {
-                            "type": "number"
-                        },
-                        "devices_not_runned": {
-                            "type": "number"
-                        },
-                        "failed": {
-                            "type": "number"
-                        },
-                        "skipped": {
-                            "type": "number"
-                        },
-                        "passed": {
-                            "type": "number"
-                        },
-                        "total": {
-                            "type": "number"
-                        },
-                        "devices_finished": {
-                            "type": "number"
-                        },
-                        "devices_failed": {
-                            "type": "number"
-                        },
-                        "devices_skipped": {
-                            "type": "number"
-                        },
-                        "step_count": {
-                            "type": "number"
-                        }
-                    },
-                    "type": "object"
-                },
-                "id": {
-                    "type": "string"
-                },
-                "schema_version": {
-                    "type": "number"
-                },
-                "revision": {
-                    "type": "number"
-                },
-                "features": {
-                    "type": "array",
-                    "items": {
-                        "type": "object",
-                        "properties": {
-                            "name": {
-                                "type": "string"
-                            },
-                            "tests": {
-                                "type": "array",
-                                "items": {
-                                    "type": "object",
-                                    "properties": {
-                                        "testName": {
-                                            "type": "string"
-                                        },
-                                        "runs": {
-                                            "type": "array",
-                                            "items": {
-                                                "type": "object",
-                                                "properties": {
-                                                    "number": {
-                                                        "type": "number"
-                                                    },
-                                                    "steps": {
-                                                        "type": "array",
-                                                        "items": {
-                                                            "type": "object",
-                                                            "properties": {
-                                                                "stepName": {
-                                                                    "type": "string"
-                                                                },
-                                                                "id": {
-                                                                    "type": "string"
-                                                                },
-                                                                "stepExecutions": {
-                                                                    "type": "array",
-                                                                    "items": {
-                                                                        "type": "object",
-                                                                        "properties": {
-                                                                            "device_snapshot_id": {
-                                                                                "type": "string"
-                                                                            },
-                                                                            "status": {
-                                                                                "type": "string"
-                                                                            },
-                                                                            "timestamp": {
-                                                                                "type": "number"
-                                                                            }
-                                                                        }
-                                                                    }
-                                                                },
-                                                                "failed": {
-                                                                    "type": "number"
-                                                                },
-                                                                "skipped": {
-                                                                    "type": "number"
-                                                                },
-                                                                "step_report_url": {
-                                                                    "type": "string"
-                                                                }
-                                                            }
-                                                        }
-                                                    },
-                                                    "failed": {
-                                                        "type": "number"
-                                                    },
-                                                    "skipped": {
-                                                        "type": "number"
-                                                    },
-                                                    "report_url": {
-                                                        "type": "string"
-                                                    },
-                                                    "id": {
-                                                        "type": "string"
-                                                    }
-                                                }
-                                            }
-                                        },
-                                        "peakMemory": {
-                                            "type": "number"
-                                        },
-                                        "peakDuration": {
-                                            "type": "number"
-                                        }
-                                    }
-                                }
-                            },
-                            "failed": {
-                                "type": "number"
-                            },
-                            "skipped": {
-                                "type": "number"
-                            },
-                            "peakMemory": {
-                                "type": "number"
-                            },
-                            "peakDuration": {
-                                "type": "number"
-                            }
-                        }
-                    }
-                },
-                "finished_device_snapshots": {
-                    "type": "array",
-                    "items": {
-                        "type": "string"
-                    }
-                },
-                "device_logs": {
-                    "type": "array",
-                    "items": {
-                        "type": "object",
-                        "properties": {
-                            "device_snapshot_id": {
-                                "type": "string"
-                            },
-                            "device_log": {
-                                "type": "string"
-                            },
-                            "test_log": {
-                                "type": "string"
-                            },
-                            "appium_log": {
-                                "type": "string"
-                            }
-                        }
-                    }
-                },
-                "date_finished": {
-                    "type": "string"
-                },
-                "errorMessage": {
-                    "type": "string"
-                }
-            }
+        "app_id": {
+          "description": "The application that this symbol upload belongs to",
+          "type": "string"
+        },
+        "status": {
+          "description": "The current status for the symbol upload",
+          "type": "string",
+          "enum": [
+            "created",
+            "committed",
+            "aborted",
+            "processing",
+            "indexed",
+            "failed"
+          ]
+        },
+        "symbol_type": {
+          "description": "The type of the symbol for the current symbol upload",
+          "type": "string",
+          "enum": [
+            "Apple"
+          ]
+        },
+        "symbols": {
+          "description": "The symbol ids",
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/Symbol"
+          }
+        },
+        "origin": {
+          "description": "The origin of the symbol upload",
+          "type": "string",
+          "enum": [
+            "User",
+            "System"
+          ]
+        }
+      },
+      "required": [
+        "symbol_upload_id",
+        "app_id",
+        "status",
+        "symbol_type"
+      ]
+    },
+    "SymbolUploads": {
+      "description": "A set of symbol upload entities",
+      "type": "array",
+      "items": {
+        "$ref": "#/definitions/SymbolUpload"
+      }
+    },
+    "SymbolUploadBeginRequest": {
+      "description": "A request containing information pertaining to starting a symbol upload process",
+      "properties": {
+        "symbol_type": {
+          "description": "The type of the symbol for the current symbol upload",
+          "type": "string",
+          "enum": [
+            "Apple"
+          ]
+        },
+        "client_callback": {
+          "description": "The callback URL that the client can optionally provide to get status updates for the current symbol upload",
+          "type": "string"
+        }
+      },
+      "required": [
+        "symbol_type"
+      ]
+    },
+    "SymbolUploadBeginResponse": {
+      "description": "A response containing information pertaining to starting a symbol upload process",
+      "properties": {
+        "symbol_upload_id": {
+          "description": "The id for the current upload",
+          "type": "string"
+        },
+        "upload_url": {
+          "description": "The URL where the client needs to upload the symbol blob to",
+          "type": "string"
+        },
+        "expiration_date": {
+          "description": "Describes how long the upload_url is valid",
+          "type": "string",
+          "format": "date-time"
+        }
+      },
+      "required": [
+        "symbol_upload_id",
+        "upload_url",
+        "expiration_date"
+      ]
+    },
+    "SymbolUploadEndRequest": {
+      "description": "A request containing information pertaining to completing a symbol upload process",
+      "properties": {
+        "status": {
+          "description": "The desired operation for the symbol upload",
+          "type": "string",
+          "enum": [
+            "committed",
+            "aborted"
+          ]
+        }
+      },
+      "required": [
+        "status"
+      ]
+    },
+    "AppVersion": {
+      "required": [
+        "app_version_id",
+        "app_id",
+        "display_name",
+        "app_version"
+      ],
+      "type": "object",
+      "properties": {
+        "app_version_id": {
+          "type": "string"
         },
-        "TestCloudErrorDetails": {
-            "title": "Test Cloud Error Details",
-            "description": "Details of a failed operation",
-            "type": "object",
-            "properties": {
-                "status": {
-                    "description": "Status of the operation",
-                    "type": "string"
-                },
-                "message": {
-                    "description": "Human-readable message that describes the error",
-                    "type": "string"
-                }
-            },
-            "required": [
-                "status",
-                "message"
-            ]
+        "app_id": {
+          "type": "string"
         },
-        "TestCloudFileHashDeprecated": {
-            "title": "Test Cloud File Hash",
-            "description": "Hash, type, path and byte range of a file that is required in test run",
-            "type": "object",
-            "properties": {
-                "file_type": {
-                    "type": "string",
-                    "description": "Type of the file",
-                    "enum": [
-                        "dsym-file",
-                        "app-file",
-                        "test-file"
-                    ]
-                },
-                "checksum": {
-                    "type": "string",
-                    "description": "SHA256 hash of the file"
-                },
-                "relative_path": {
-                    "type": "string",
-                    "description": "Relative path of the file"
-                },
-                "byte_range": {
-                    "type": "string",
-                    "description": "Range of bytes required to verify ownership of the file"
-                }
-            },
-            "required": [
-                "file_type",
-                "checksum",
-                "relative_path"
-            ]
+        "display_name": {
+          "type": "string"
         },
-        "TestCloudFileHash": {
-            "title": "Test Cloud File Hash",
-            "description": "Hash, type, path and byte range of a file that is required in test run",
-            "type": "object",
-            "properties": {
-                "fileType": {
-                    "type": "string",
-                    "description": "Type of the file",
-                    "enum": [
-                        "dsym-file",
-                        "app-file",
-                        "test-file"
-                    ]
-                },
-                "checksum": {
-                    "type": "string",
-                    "description": "SHA256 hash of the file"
-                },
-                "relativePath": {
-                    "type": "string",
-                    "description": "Relative path of the file"
-                }
-            },
-            "required": [
-                "fileType",
-                "checksum",
-                "relativePath"
-            ]
+        "app_version": {
+          "type": "string"
         },
-        "TestCloudFileHashResponse": {
-            "title": "Test Cloud File Hash Response",
-            "description": "Response message for single uploaded file hash",
-            "type": "object",
-            "properties": {
-                "fileType": {
-                    "type": "string",
-                    "description": "Type of the file",
-                    "enum": [
-                        "dsym-file",
-                        "app-file",
-                        "test-file"
-                    ]
-                },
-                "checksum": {
-                    "type": "string",
-                    "description": "SHA256 hash of the file"
-                },
-                "relativePath": {
-                    "type": "string",
-                    "description": "Relative path of the file"
-                },
-                "uploadStatus": {
-                    "$ref": "#/definitions/TestCloudHashUploadStatus",
-                    "description": "Status of the upload"
-                }
-            },
-            "required": [
-                "fileType",
-                "checksum",
-                "uploadStatus"
-            ]
+        "build_number": {
+          "type": "string"
+        }
+      }
+    },
+    "Exception": {
+      "description": "a exception",
+      "properties": {
+        "reason": {
+          "type": "string",
+          "description": "Reason of the exception"
+        },
+        "type": {
+          "type": "string",
+          "description": "Type of the exception (NSSomethingException, NullPointerException)"
+        },
+        "frames": {
+          "description": "frames of the excetpion",
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/StackFrame"
+          }
+        },
+        "relevant": {
+          "description": "relevant exception (crashed)",
+          "type": "boolean"
+        },
+        "inner_exceptions": {
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/Exception"
+          }
+        },
+        "platform": {
+          "description": "SDK/Platform this thread is beeing generated from",
+          "type": "string",
+          "enum": [
+            "ios",
+            "android",
+            "xamarin",
+            "react-native",
+            "other"
+          ]
+        }
+      },
+      "required": [
+        "frames"
+      ]
+    },
+    "Stacktrace": {
+      "description": "a stacktrace in a processed and prettyfied way",
+      "properties": {
+        "title": {
+          "type": "string"
+        },
+        "reason": {
+          "type": "string"
+        },
+        "threads": {
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/Thread"
+          }
+        },
+        "exception": {
+          "$ref": "#/definitions/Exception"
+        }
+      }
+    },
+    "Thread": {
+      "description": "a thread representation",
+      "properties": {
+        "title": {
+          "description": "name of the thread",
+          "type": "string"
+        },
+        "frames": {
+          "description": "frames of that thread",
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/StackFrame"
+          }
+        },
+        "exception": {
+          "description": "potential additional exception happened in that thread (Last Exception Backtrace)",
+          "$ref": "#/definitions/Exception"
+        },
+        "relevant": {
+          "description": "Shows if a thread is relevant or not. Is false if all frames are non relevant, otherwise true",
+          "type": "boolean"
+        },
+        "platform": {
+          "description": "SDK/Platform this thread is beeing generated from",
+          "type": "string",
+          "enum": [
+            "ios",
+            "android",
+            "xamarin",
+            "react-native",
+            "other"
+          ]
+        }
+      },
+      "required": [
+        "title",
+        "frames"
+      ]
+    },
+    "StackFrame": {
+      "description": "a single frame of a stack trace",
+      "properties": {
+        "address": {
+          "description": "address of the frame",
+          "type": "string"
+        },
+        "class_name": {
+          "description": "name of the class",
+          "type": "string"
+        },
+        "method": {
+          "description": "name of the method",
+          "type": "string"
+        },
+        "class_method": {
+          "description": "is a class method",
+          "type": "boolean"
+        },
+        "file": {
+          "description": "name of the file",
+          "type": "string"
+        },
+        "line": {
+          "description": "line number",
+          "type": "integer"
+        },
+        "app_code": {
+          "description": "this line isn't from any framework",
+          "type": "boolean"
+        },
+        "framework_name": {
+          "description": "Name of the framework",
+          "type": "string"
+        },
+        "code_raw": {
+          "description": "Raw frame string",
+          "type": "string"
+        },
+        "code_formatted": {
+          "description": "Formatted frame string",
+          "type": "string"
+        },
+        "language": {
+          "description": "programming language of the frame",
+          "type": "string",
+          "enum": [
+            "JavaScript",
+            "CSharp",
+            "Objective-C",
+            "Objective-Cpp",
+            "Cpp",
+            "C",
+            "Swift",
+            "Java",
+            "Unknown"
+          ]
+        },
+        "relevant": {
+          "description": "frame should be shown always",
+          "type": "boolean"
+        },
+        "method_params": {
+          "description": "parameters of the frames method",
+          "type": "string"
+        }
+      },
+      "required": [
+        "code_raw",
+        "code_formatted",
+        "app_code"
+      ]
+    },
+    "ReasonStackFrame": {
+      "description": "frame belonging to the reason of the crash",
+      "properties": {
+        "class_name": {
+          "description": "name of the class",
+          "type": "string"
+        },
+        "method": {
+          "description": "name of the method",
+          "type": "string"
+        },
+        "class_method": {
+          "description": "is a class method",
+          "type": "boolean"
+        },
+        "file": {
+          "description": "name of the file",
+          "type": "string"
+        },
+        "line": {
+          "description": "line number",
+          "type": "integer"
+        },
+        "app_code": {
+          "description": "this line isn't from any framework",
+          "type": "boolean"
+        },
+        "framework_name": {
+          "description": "Name of the framework",
+          "type": "string"
+        },
+        "code_formatted": {
+          "description": "Formatted frame string",
+          "type": "string"
+        },
+        "language": {
+          "description": "programming language of the frame",
+          "type": "string",
+          "enum": [
+            "JavaScript",
+            "CSharp",
+            "Objective-C",
+            "Objective-Cpp",
+            "Cpp",
+            "C",
+            "Swift",
+            "Java",
+            "Unknown"
+          ]
+        },
+        "method_params": {
+          "description": "parameters of the frames method",
+          "type": "string"
+        },
+        "exception_type": {
+          "type": "string",
+          "description": "Exception type."
+        },
+        "os_exception_type": {
+          "type": "string",
+          "description": "OS exception type. (aka. SIGNAL)"
+        }
+      }
+    },
+    "RawCrashLog": {
+      "type": "object"
+    },
+    "CrashGroup": {
+      "required": [
+        "crash_group_id",
+        "display_id",
+        "app_version",
+        "build",
+        "status",
+        "count",
+        "first_occurrence",
+        "last_occurrence",
+        "error_reason",
+        "fatal"
+      ],
+      "type": "object",
+      "properties": {
+        "crash_group_id": {
+          "type": "string"
+        },
+        "display_id": {
+          "type": "string"
         },
-        "TestCloudHashUploadStatus": {
-            "title": "Test Cloud Hash Upload Status",
-            "description": "Result of uploading a single file hash",
-            "type": "object",
-            "properties": {
-                "statusCode": {
-                    "type": "number",
-                    "description": "HTTP status code that represent result of upload"
-                },
-                "location": {
-                    "type": "string",
-                    "description": "URI that should be used to make POST request if file with given hash doesn't exist. This is set when status_code is equal to 412"
-                }
-            },
-            "required": [
-                "statusCode"
-            ]
+        "app_version": {
+          "type": "string"
         },
-        "TestCloudStartTestRunOptions": {
-            "title": "Test Cloud Start Test Run Options",
-            "description": "Options required to start the test run",
-            "type": "object",
-            "properties": {
-                "test_framework": {
-                    "type": "string",
-                    "description": "Test framework used by tests."
-                },
-                "device_selection": {
-                    "type": "string",
-                    "description": "Device selection string."
-                },
-                "locale": {
-                    "type": "string",
-                    "description": "Locale that should be used to run tests."
-                },
-                "test_series": {
-                    "type": "string",
-                    "description": "Name of the test series."
-                },
-                "test_parameters": {
-                    "type": "object",
-                    "description": "A JSON dictionary with additional test parameters"
-                }
-            },
-            "required": [
-                "test_framework",
-                "device_selection"
-            ]
+        "build": {
+          "type": "string"
         },
-        "TestCloudStartTestRunResult": {
-            "title": "Test Cloud Test Run Start Result",
-            "description": "Result of starting a test run",
-            "type": "object",
-            "properties": {
-                "accepted_devices": {
-                    "description": "List with names of accepted devices",
-                    "type": "array",
-                    "items": {
-                        "type": "string"
-                    }
-                },
-                "rejected_devices": {
-                    "description": "List with names and descriptions of rejected devices",
-                    "type": "array",
-                    "items": {
-                        "type": "string"
-                    }
-                }
-            }
+        "status": {
+          "type": "string",
+          "enum": [
+            "open",
+            "closed",
+            "ignored"
+          ]
+        },
+        "count": {
+          "type": "integer"
         },
-        "TestRunState": {
-            "title": "Test Run State",
-            "description": "Current status of a test run",
-            "type": "object",
-            "properties": {
-                "message": {
-                    "description": "Multi-line message that describes the status",
-                    "type": "array",
-                    "items": {
-                        "type": "string"
-                    }
-                },
-                "wait_time": {
-                    "description": "Time (in seconds) that the client should wait for before checking the status again",
-                    "type": "integer"
-                },
-                "exit_code": {
-                    "description": "Exit code for the client",
-                    "type": "integer"
-                }
-            }
+        "impacted_users": {
+          "type": "integer"
         },
-        "Permission": {
-            "type": "object",
-            "properties": {
-                "Name": {
-                    "type": "string"
-                },
-                "Level": {
-                    "type": "string"
-                }
-            }
+        "first_occurrence": {
+          "type": "string",
+          "format": "date-time"
         },
-        "Table": {
-            "type": "object",
-            "properties": {
-                "name": {
-                    "type": "string"
-                },
-                "permissions": {
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/Permission"
-                    }
-                },
-                "extendedSettings": {
-                    "type": "object",
-                    "additionalProperties": {
-                        "type": "string"
-                    }
-                },
-                "columns": {
-                    "type": "array",
-                    "items": {
-                        "$ref": "#/definitions/TableColumn"
-                    }
-                }
-            }
+        "last_occurrence": {
+          "type": "string",
+          "format": "date-time"
         },
-        "TableColumn": {
-            "type": "object",
-            "properties": {
-                "Name": {
-                    "type": "string"
-                },
-                "IsIndexed": {
-                    "type": "boolean"
-                },
-                "Type": {
-                    "enum": [
-                        "String",
-                        "Boolean",
-                        "Number",
-                        "Date",
-                        "Version",
-                        "Custom"
-                    ],
-                    "type": "string"
-                },
-                "CanDelete": {
-                    "type": "boolean"
-                },
-                "CanUpdateIndex": {
-                    "type": "boolean"
-                }
-            }
+        "exception": {
+          "type": "string"
+        },
+        "error_reason": {
+          "type": "string"
+        },
+        "reason_frame": {
+          "$ref": "#/definitions/ReasonStackFrame"
+        },
+        "fatal": {
+          "type": "boolean",
+          "description": "Crash or handled exception"
+        }
+      }
+    },
+    "CrashGroupChange": {
+      "type": "object",
+      "properties": {
+        "status": {
+          "enum": [
+            "open",
+            "closed",
+            "ignored"
+          ]
+        }
+      }
+    },
+    "CrashGroupCounts": {
+      "type": "object",
+      "properties": {
+        "crash_group_count": {
+          "type": "number"
+        }
+      }
+    },
+    "Crash": {
+      "required": [
+        "crash_id",
+        "timestamp",
+        "version",
+        "build",
+        "device",
+        "os_version",
+        "user_name"
+      ],
+      "type": "object",
+      "properties": {
+        "crash_id": {
+          "type": "string",
+          "description": ""
+        },
+        "display_id": {
+          "type": "string"
+        },
+        "timestamp": {
+          "type": "string",
+          "format": "date-time"
+        },
+        "version": {
+          "type": "string",
+          "description": ""
+        },
+        "build": {
+          "type": "string",
+          "description": ""
+        },
+        "device": {
+          "type": "string",
+          "description": ""
+        },
+        "os_version": {
+          "type": "string",
+          "description": ""
+        },
+        "os_type": {
+          "type": "string",
+          "description": ""
+        },
+        "user_name": {
+          "type": "string",
+          "description": ""
+        },
+        "user_email": {
+          "type": "string",
+          "description": ""
+        }
+      }
+    },
+    "MissingSymbol": {
+      "description": "missing symbol",
+      "required": [
+        "symbol_id",
+        "name",
+        "status"
+      ],
+      "properties": {
+        "symbol_id": {
+          "type": "string",
+          "description": "symbol id"
+        },
+        "name": {
+          "type": "string",
+          "description": "symbol name"
+        },
+        "platform": {
+          "type": "string",
+          "description": "symbol plarform"
+        },
+        "status": {
+          "type": "string",
+          "enum": [
+            "missing",
+            "ignored",
+            "available"
+          ],
+          "description": "symbol status"
+        }
+      }
+    },
+    "MissingSymbols": {
+      "description": "A list of missing symbols",
+      "type": "array",
+      "items": {
+        "$ref": "#/definitions/MissingSymbol"
+      }
+    },
+    "MissingSymbolCrashGroup": {
+      "description": "missing symbol crash group object",
+      "required": [
+        "symbol_group_id",
+        "app_id",
+        "app_ver",
+        "app_build",
+        "last_modified",
+        "missing_symbols",
+        "status"
+      ],
+      "properties": {
+        "symbol_group_id": {
+          "type": "string",
+          "description": "id of the symbol group"
+        },
+        "crash_count": {
+          "type": "integer",
+          "description": "number of crashes that belong to this group"
         },
-        "ImportDataContainer": {
+        "app_id": {
+          "type": "string",
+          "description": "application id"
+        },
+        "app_ver": {
+          "type": "string",
+          "description": "application version"
+        },
+        "app_build": {
+          "type": "string",
+          "description": "application build"
+        },
+        "last_modified": {
+          "type": "string",
+          "format": "date-time",
+          "description": "last update date for the group"
+        },
+        "missing_symbols": {
+          "$ref": "#/definitions/MissingSymbols"
+        },
+        "status": {
+          "type": "string",
+          "enum": [
+            "active",
+            "pending",
+            "closed"
+          ],
+          "description": "group status"
+        }
+      }
+    },
+    "MissingSymbolCrashGroups": {
+      "description": "A list of crash groups formed by missing symbols combination",
+      "type": "array",
+      "items": {
+        "$ref": "#/definitions/MissingSymbolCrashGroup"
+      }
+    },
+    "MissingSymbolCrashGroupsResponse": {
+      "description": "grouped by missing symbols crashes response object",
+      "required": [
+        "total_crash_count",
+        "groups"
+      ],
+      "properties": {
+        "total_crash_count": {
+          "description": "total number of cashes for all the groups",
+          "type": "integer"
+        },
+        "groups": {
+          "$ref": "#/definitions/MissingSymbolCrashGroups"
+        }
+      }
+    },
+    "FailureResponse": {
+      "description": "failure response object",
+      "required": [
+        "code",
+        "message"
+      ],
+      "properties": {
+        "code": {
+          "type": "string"
+        },
+        "message": {
+          "type": "string"
+        }
+      }
+    },
+    "CrashCounts": {
+      "type": "object",
+      "properties": {
+        "count": {
+          "description": "total crash count",
+          "type": "integer",
+          "format": "int64"
+        },
+        "crashes": {
+          "description": "the total crash count for day",
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/DateTimeCounts"
+          }
+        }
+      }
+    },
+    "ActiveDeviceCounts": {
+      "properties": {
+        "daily": {
+          "description": "the active device count for each interval",
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/DateTimeCounts"
+          }
+        },
+        "weekly": {
+          "description": "the active device count for each interval with a week's retention",
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/DateTimeCounts"
+          }
+        },
+        "monthly": {
+          "description": "the active device count for each interval with a month's retention",
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/DateTimeCounts"
+          }
+        }
+      }
+    },
+    "Places": {
+      "description": "Places and count during the time range in descending order",
+      "properties": {
+        "total": {
+          "type": "integer",
+          "format": "int64"
+        },
+        "places": {
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/Place"
+          }
+        }
+      }
+    },
+    "Place": {
+      "description": "The place code and the count",
+      "type": "object",
+      "properties": {
+        "code": {
+          "description": "the place code",
+          "type": "string"
+        },
+        "count": {
+          "description": "the count of the this place",
+          "type": "integer",
+          "format": "int64"
+        },
+        "previous_count": {
+          "description": "the count of previous time range of the place",
+          "type": "integer",
+          "format": "int64"
+        }
+      }
+    },
+    "Error": {
+      "description": "Error",
+      "type": "object",
+      "properties": {
+        "error": {
+          "type": "object",
+          "properties": {
+            "code": {
+              "description": "The status code return by the API. It can be 400 or 403 or 500.",
+              "type": "integer",
+              "enum": [
+                400,
+                403,
+                500
+              ]
+            },
+            "message": {
+              "description": "The reason for the request failed",
+              "type": "string"
+            }
+          }
+        }
+      }
+    },
+    "SessionDurationsDistribution": {
+      "type": "object",
+      "properties": {
+        "distribution": {
+          "description": "the count of sessions in these buckets",
+          "type": "array",
+          "items": {
             "type": "object",
             "properties": {
-                "csvData": {
-                    "type": "string"
-                }
-            }
-        },
-        "PushConfig": {
+              "bucket": {
+                "description": "the bucket name",
+                "type": "string"
+              },
+              "count": {
+                "description": "the count of sessions in current bucket",
+                "type": "integer",
+                "format": "int32"
+              }
+            }
+          }
+        },
+        "previous_average_duration": {
+          "description": "the previous average session duration for previous time range",
+          "type": "string"
+        },
+        "average_duration": {
+          "description": "the average session duration for current time range",
+          "type": "string"
+        }
+      }
+    },
+    "Versions": {
+      "properties": {
+        "versions": {
+          "description": "list of version count",
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/Version"
+          }
+        },
+        "total": {
+          "description": "the total count of versions",
+          "type": "integer",
+          "format": "int64"
+        }
+      }
+    },
+    "Version": {
+      "type": "object",
+      "properties": {
+        "version": {
+          "description": "version",
+          "type": "string"
+        },
+        "count": {
+          "description": "version count",
+          "type": "integer",
+          "format": "int64"
+        },
+        "previous_count": {
+          "description": "the count of previous time range of the version",
+          "type": "integer",
+          "format": "int64"
+        }
+      }
+    },
+    "SessionCounts": {
+      "type": "object",
+      "properties": {
+        "total_count": {
+          "description": "total session count",
+          "type": "integer",
+          "format": "int64"
+        },
+        "previous_total_count": {
+          "description": "previous total session count",
+          "type": "integer",
+          "format": "int64"
+        },
+        "sessions": {
+          "description": "the total session count for each interval",
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/DateTimeCounts"
+          }
+        }
+      }
+    },
+    "SessionsPerDevice": {
+      "type": "object",
+      "properties": {
+        "average_sessions_per_user": {
+          "description": "average seesion per user",
+          "type": "number",
+          "format": "double"
+        },
+        "previous_average_sessions_per_user": {
+          "description": "previous average session per user",
+          "type": "number",
+          "format": "double"
+        },
+        "total_count": {
+          "description": "total session per device count",
+          "type": "integer",
+          "format": "int64"
+        },
+        "previous_total_count": {
+          "description": "previous total count",
+          "type": "integer",
+          "format": "int64"
+        },
+        "sessions_per_user": {
+          "type": "array",
+          "description": "the session count for each interval per device",
+          "items": {
             "type": "object",
             "properties": {
-                "apnsCredential": {
-                    "type": "object",
-                    "properties": {
-                        "endpoint": {
-                            "type": "string"
-                        },
-                        "apnsCertificate": {
-                            "type": "string"
-                        }
-                    }
-                },
-                "gcmCredential": {
-                    "type": "object",
-                    "properties": {
-                        "googleApiKey": {
-                            "type": "string"
-                        }
-                    }
-                }
-            }
+              "datetime": {
+                "description": "the ISO 8601 datetime",
+                "type": "string"
+              },
+              "count": {
+                "description": "count",
+                "type": "number",
+                "format": "double"
+              }
+            }
+          }
         }
+      }
     },
-    "parameters": {
-        "app_name": {
-            "name": "app_name",
-            "type": "string",
-            "in": "path",
-            "description": "The name of the application",
-            "required": true,
-            "x-ms-parameter-location": "method"
-        },
-        "owner_name": {
-            "name": "owner_name",
-            "type": "string",
-            "in": "path",
-            "description": "The name of the owner",
-            "required": true,
-            "x-ms-parameter-location": "method"
-        },
-        "app": {
-            "name": "app",
-            "in": "body",
-            "description": "The data for the app",
-            "required": true,
-            "schema": {
-                "$ref": "#/definitions/AppRequest"
-            },
-            "x-ms-parameter-location": "method"
-        },
-        "app_id": {
-            "name": "app_id",
-            "type": "string",
-            "in": "path",
-            "description": "The unique ID (UUID) of the app",
-            "required": true,
-            "x-ms-parameter-location": "method"
-        },
-        "feature_name": {
-            "name": "feature_name",
+    "AnalyticsModels": {
+      "type": "object",
+      "properties": {
+        "total": {
+          "type": "integer",
+          "format": "int64"
+        },
+        "models": {
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/Model"
+          }
+        }
+      }
+    },
+    "Model": {
+      "properties": {
+        "model_name": {
+          "type": "string",
+          "description": "model's name"
+        },
+        "count": {
+          "description": "count current of model",
+          "type": "integer",
+          "format": "int64"
+        },
+        "previous_count": {
+          "description": "count of previous model",
+          "type": "integer",
+          "format": "int64"
+        }
+      }
+    },
+    "Languages": {
+      "type": "object",
+      "properties": {
+        "total": {
+          "type": "integer",
+          "format": "int64"
+        },
+        "languages": {
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/Language"
+          }
+        }
+      }
+    },
+    "Language": {
+      "properties": {
+        "language_name": {
+          "type": "string",
+          "description": "language's name"
+        },
+        "count": {
+          "description": "count current of language",
+          "type": "integer",
+          "format": "int64"
+        },
+        "previous_count": {
+          "description": "count of previous lanugage",
+          "type": "integer",
+          "format": "int64"
+        }
+      }
+    },
+    "OSes": {
+      "type": "object",
+      "properties": {
+        "total": {
+          "type": "integer",
+          "format": "int64"
+        },
+        "oses": {
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/OS"
+          }
+        }
+      }
+    },
+    "OS": {
+      "properties": {
+        "os_name": {
+          "type": "string",
+          "description": "OS name"
+        },
+        "count": {
+          "description": "count current of OS",
+          "type": "integer",
+          "format": "int64"
+        },
+        "previous_count": {
+          "description": "count of previous OS",
+          "type": "integer",
+          "format": "int64"
+        }
+      }
+    },
+    "DateTimeCounts": {
+      "properties": {
+        "datetime": {
+          "description": "the ISO 8601 datetime",
+          "type": "string"
+        },
+        "count": {
+          "description": "count of the object",
+          "type": "integer",
+          "format": "int64"
+        }
+      }
+    },
+    "DateTimeDecimalCounts": {
+      "properties": {
+        "datetime": {
+          "description": "the ISO 8601 datetime",
+          "type": "string"
+        },
+        "count": {
+          "description": "decimal count of the object",
+          "type": "number",
+          "format": "double"
+        }
+      }
+    },
+    "AvailableVersions": {
+      "type": "object",
+      "properties": {
+        "versions": {
+          "description": "List of available versions.",
+          "type": "array",
+          "items": {
+            "description": "Version name.",
             "type": "string",
-            "in": "path",
-            "description": "The name of the feature.",
-            "required": true,
-            "x-ms-parameter-location": "method"
+            "format": "string"
+          }
         },
-        "invitation_token": {
-            "name": "invitation_token",
+        "total_count": {
+          "description": "The full number of versions accross all pages.",
+          "type": "integer",
+          "format": "int64"
+        }
+      }
+    },
+    "CrashFreeDevicePercentages": {
+      "type": "object",
+      "properties": {
+        "average_percentage": {
+          "description": "Average percentage",
+          "type": "integer",
+          "format": "int64"
+        },
+        "daily_percentages": {
+          "description": "The crash-free percentage per day.",
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/DateTimePercentages"
+          }
+        }
+      }
+    },
+    "DateTimePercentages": {
+      "properties": {
+        "datetime": {
+          "description": "the ISO 8601 datetime",
+          "type": "string"
+        },
+        "percentage": {
+          "description": "percentage of the object",
+          "type": "number",
+          "format": "double"
+        }
+      }
+    },
+    "CrashesOverall": {
+      "description": "list of crash groups with overall crashes count and affected users",
+      "type": "array",
+      "items": {
+        "type": "object",
+        "properties": {
+          "crash_group_id": {
             "type": "string",
-            "in": "path",
-            "description": "The app invitation token that was sent to the user",
-            "required": true,
-            "x-ms-parameter-location": "method"
-        },
-        "organization_name": {
-            "name": "org_name",
+            "format": "string"
+          },
+          "app_version": {
             "type": "string",
-            "in": "path",
-            "description": "The organization's name",
-            "required": true,
-            "x-ms-parameter-location": "method"
+            "format": "string"
+          },
+          "overall": {
+            "$ref": "#/definitions/CrashOverall"
+          }
+        }
+      }
+    },
+    "CrashOverall": {
+      "type": "object",
+      "properties": {
+        "crash_count": {
+          "type": "integer",
+          "format": "int64"
+        },
+        "device_count": {
+          "type": "integer",
+          "format": "int64"
+        }
+      }
+    },
+    "CrashGroupModels": {
+      "type": "object",
+      "properties": {
+        "crash_count": {
+          "type": "integer",
+          "format": "int64"
+        },
+        "models": {
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/CrashGroupModel"
+          }
+        }
+      }
+    },
+    "CrashGroupModel": {
+      "type": "object",
+      "properties": {
+        "model_name": {
+          "type": "string",
+          "description": "model's name"
+        },
+        "crash_count": {
+          "description": "count of model",
+          "type": "integer",
+          "format": "int64"
+        }
+      }
+    },
+    "CrashGroupOperatingSystems": {
+      "type": "object",
+      "properties": {
+        "crash_count": {
+          "type": "integer",
+          "format": "int64"
+        },
+        "operating_systems": {
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/CrashGroupOperatingSystem"
+          }
+        }
+      }
+    },
+    "CrashGroupOperatingSystem": {
+      "type": "object",
+      "properties": {
+        "operating_system_name": {
+          "type": "string",
+          "description": "OS name"
+        },
+        "crash_count": {
+          "type": "integer",
+          "format": "int64",
+          "description": "count of OS"
+        }
+      }
+    },
+    "CrashGroupContainer": {
+      "type": "object",
+      "required": [
+        "crash_groups"
+      ],
+      "properties": {
+        "crash_groups": {
+          "type": "array",
+          "minItems": 1,
+          "items": {
+            "$ref": "#/definitions/CrashGroupAndVersion"
+          }
+        }
+      }
+    },
+    "CrashGroupAndVersion": {
+      "type": "object",
+      "properties": {
+        "crash_group_id": {
+          "type": "string",
+          "format": "string"
         },
-        "user_id": {
-            "name": "user_id",
-            "type": "string",
-            "in": "path",
-            "description": "The ID of the user",
-            "required": true,
-            "x-ms-parameter-location": "method"
+        "app_version": {
+          "type": "string",
+          "format": "string"
+        }
+      }
+    },
+    "Events": {
+      "properties": {
+        "events": {
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/Event"
+          }
+        },
+        "total": {
+          "description": "the total count of events",
+          "type": "integer",
+          "format": "int64"
+        },
+        "total_devices": {
+          "description": "the active device over this period",
+          "type": "integer",
+          "format": "int64"
+        }
+      }
+    },
+    "Event": {
+      "type": "object",
+      "properties": {
+        "id": {
+          "type": "string",
+          "format": "string"
+        },
+        "name": {
+          "type": "string",
+          "format": "string"
+        },
+        "deviceCount": {
+          "type": "integer",
+          "format": "int64"
+        },
+        "previous_device_count": {
+          "description": "the device count of previous time range of the event",
+          "type": "integer",
+          "format": "int64"
+        },
+        "count": {
+          "type": "integer",
+          "format": "int64"
+        },
+        "previous_count": {
+          "description": "the event count of previous time range of the event",
+          "type": "integer",
+          "format": "int64"
+        },
+        "count_per_device": {
+          "type": "integer",
+          "format": "int64"
+        },
+        "count_per_session": {
+          "type": "integer",
+          "format": "int64"
+        }
+      }
+    },
+    "EventCount": {
+      "type": "object",
+      "properties": {
+        "total_count": {
+          "type": "integer",
+          "format": "int64"
+        },
+        "previous_total_count": {
+          "type": "integer",
+          "format": "int64"
+        },
+        "count": {
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/DateTimeCounts"
+          }
+        }
+      }
+    },
+    "EventDeviceCount": {
+      "type": "object",
+      "properties": {
+        "total_devices": {
+          "type": "integer",
+          "format": "int64"
+        },
+        "total_devices_with_event": {
+          "type": "integer",
+          "format": "int64"
+        },
+        "previous_total_devices_with_event": {
+          "type": "integer",
+          "format": "int64"
+        },
+        "devices_count": {
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/DateTimeCounts"
+          }
+        }
+      }
+    },
+    "EventCountPerDevice": {
+      "type": "object",
+      "properties": {
+        "avg_count_per_device": {
+          "type": "number",
+          "format": "double"
+        },
+        "previous_avg_count_per_device": {
+          "type": "number",
+          "format": "double"
+        },
+        "count_per_device": {
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/DateTimeDecimalCounts"
+          }
+        }
+      }
+    },
+    "EventCountPerSession": {
+      "type": "object",
+      "properties": {
+        "avg_count_per_session": {
+          "type": "number",
+          "format": "double"
+        },
+        "previous_avg_count_per_session": {
+          "type": "number",
+          "format": "double"
+        },
+        "count_per_session": {
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/DateTimeDecimalCounts"
+          }
+        }
+      }
+    },
+    "LogContainer": {
+      "type": "object",
+      "properties": {
+        "exceeded_max_limit": {
+          "description": "indicates if the number of available logs are more than the max allowed return limit(100).",
+          "type": "boolean"
+        },
+        "last_received_log_timestamp": {
+          "description": "the timestamp of the last log received. This value can be used as the start time parameter in the consecutive API call.",
+          "type": "string",
+          "format": "date-time"
+        },
+        "logs": {
+          "minItems": 0,
+          "description": "the list of logs",
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/Log"
+          }
+        }
+      },
+      "required": [
+        "logs"
+      ]
+    },
+    "Log": {
+      "type": "object",
+      "discriminator": "type",
+      "properties": {
+        "type": {
+          "type": "string",
+          "enum": [
+            "event",
+            "page",
+            "start_session",
+            "error",
+            "push_installation"
+          ],
+          "description": "Log type.\n"
+        },
+        "timestamp": {
+          "type": "string",
+          "format": "date-time",
+          "description": "Log creation timestamp.\n"
+        },
+        "install_id": {
+          "type": "string",
+          "format": "uuid",
+          "description": "Install ID.\n"
+        },
+        "device": {
+          "$ref": "#/definitions/Device"
+        }
+      },
+      "required": [
+        "type",
+        "timestamp",
+        "install_id",
+        "device"
+      ]
+    },
+    "Device": {
+      "type": "object",
+      "description": "Device characteristics.",
+      "properties": {
+        "sdk_name": {
+          "type": "string",
+          "description": "Name of the SDK. Consists of the name of the SDK and the platform, e.g. \"avalanchesdk.ios\", \"hockeysdk.android\".\n"
+        },
+        "sdk_version": {
+          "type": "string",
+          "description": "Version of the SDK in semver format, e.g. \"1.2.0\" or \"0.12.3-alpha.1\".\n"
+        },
+        "wrapper_sdk_version": {
+          "type": "string",
+          "description": "Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.\n"
+        },
+        "wrapper_sdk_name": {
+          "type": "string",
+          "description": "Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. \"avalanchesdk.xamarin\", \"hockeysdk.cordova\".\n"
+        },
+        "model": {
+          "type": "string",
+          "description": "Device model (example: iPad2,3).\n"
+        },
+        "oem_name": {
+          "type": "string",
+          "description": "Device manufacturer (example: HTC).\n"
+        },
+        "os_name": {
+          "type": "string",
+          "description": "OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.\n"
+        },
+        "os_version": {
+          "type": "string",
+          "description": "OS version (example: 9.3.0).\n"
+        },
+        "os_build": {
+          "type": "string",
+          "description": "OS build code (example: LMY47X).\n"
+        },
+        "os_api_level": {
+          "type": "integer",
+          "description": "API level when applicable like in Android (example: 15).\n"
+        },
+        "locale": {
+          "type": "string",
+          "description": "Language code (example: en_US).\n"
+        },
+        "time_zone_offset": {
+          "type": "integer",
+          "description": "The offset in minutes from UTC for the device time zone, including daylight savings time.\n"
+        },
+        "screen_size": {
+          "type": "string",
+          "description": "Screen size of the device in pixels (example: 640x480).\n"
         },
-        "build_id": {
-            "name": "build_id",
-            "in": "path",
-            "description": "The build ID",
-            "required": true,
-            "type": "integer",
-            "minimum": 0,
-            "exclusiveMinimum": true,
-            "x-ms-parameter-location": "method"
+        "app_version": {
+          "type": "string",
+          "description": "Application version name, e.g. 1.1.0\n"
         },
-        "branch": {
-            "name": "branch",
-            "in": "path",
-            "description": "The branch name",
-            "required": true,
-            "type": "string",
-            "x-ms-parameter-location": "method"
+        "carrier_name": {
+          "type": "string",
+          "description": "Carrier name (for mobile devices).\n"
         },
-        "sha": {
-            "name": "sha",
-            "in": "path",
-            "description": "The SHA hash",
-            "required": true,
-            "type": "string",
-            "pattern": "^[0-9a-f]{5,40}$",
-            "x-ms-parameter-location": "method"
+        "carrier_code": {
+          "type": "string",
+          "description": "Carrier country code (for mobile devices).\n"
         },
-        "form": {
-            "name": "form",
-            "in": "query",
-            "description": "The selected form of the object",
-            "required": false,
-            "type": "string",
-            "enum": [
-                "lite",
-                "full"
-            ],
-            "x-ms-parameter-location": "method"
+        "carrier_country": {
+          "type": "string",
+          "description": "Carrier country.\n"
         },
-        "token": {
-            "name": "token",
-            "in": "query",
-            "description": "An auth token",
-            "required": true,
-            "type": "string",
-            "x-ms-parameter-location": "method"
+        "app_build": {
+          "type": "string",
+          "description": "The app's build number, e.g. 42.\n"
         },
-        "path_symbol_upload_id": {
-            "name": "symbol_upload_id",
+        "app_namespace": {
+          "type": "string",
+          "description": "The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.\n"
+        }
+      },
+      "required": [
+        "sdk_name",
+        "sdk_version",
+        "model",
+        "oem_name",
+        "os_name",
+        "os_version",
+        "locale",
+        "time_zone_offset",
+        "screen_size",
+        "app_version",
+        "app_build"
+      ]
+    },
+    "EventProperties": {
+      "description": "Event properties during the time range",
+      "type": "object",
+      "properties": {
+        "event_properties": {
+          "type": "array",
+          "items": {
+            "description": "The event property",
             "type": "string",
-            "in": "path",
-            "description": "The ID of the symbol upload",
-            "required": true,
-            "x-ms-parameter-location": "method"
+            "format": "string"
+          }
+        }
+      }
+    },
+    "EventPropertyValues": {
+      "description": "Event property value counts during the time range in descending order",
+      "type": "object",
+      "properties": {
+        "total": {
+          "description": "The total property value counts",
+          "type": "integer",
+          "format": "int64"
+        },
+        "values": {
+          "description": "The event property values",
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/EventPropertyValue"
+          }
+        }
+      }
+    },
+    "EventPropertyValue": {
+      "description": "An event property value with counts",
+      "type": "object",
+      "properties": {
+        "name": {
+          "description": "The event property value name",
+          "type": "string"
+        },
+        "count": {
+          "description": "The count of the the event property value",
+          "type": "integer",
+          "format": "int64"
+        },
+        "previous_count": {
+          "description": "The count of previous time range of the event property value",
+          "type": "integer",
+          "format": "int64"
+        }
+      }
+    },
+    "NotificationsListResult": {
+      "description": "List of notifications",
+      "type": "object",
+      "properties": {
+        "values": {
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/NotificationDetailsResult"
+          }
+        },
+        "total": {
+          "description": "the total count of notifications",
+          "type": "integer",
+          "format": "int64"
+        },
+        "nextLink": {
+          "type": "string"
+        }
+      }
+    },
+    "NotificationDetailsResult": {
+      "description": "Notification statistics",
+      "type": "object",
+      "properties": {
+        "notification_id": {
+          "description": "Notification id.",
+          "type": "string"
+        },
+        "pns_send_failure": {
+          "description": "Number of the notifications failed to send to the push provider.",
+          "type": "integer",
+          "format": "long"
+        },
+        "pns_send_success": {
+          "description": "Number of the notifications successfully sent to push the provider.",
+          "type": "integer",
+          "format": "long"
+        },
+        "state": {
+          "type": "string",
+          "description": "State of the notification.",
+          "enum": [
+            "Cancelled",
+            "Completed",
+            "Enqueued",
+            "Processing",
+            "Unknown"
+          ]
+        }
+      },
+      "allOf": [
+        {
+          "$ref": "#/definitions/NotificationResult"
+        }
+      ]
+    },
+    "NotificationResult": {
+      "description": "Notification result",
+      "properties": {
+        "send_time": {
+          "description": "Notification send time",
+          "type": "string",
+          "format": "date-time"
+        }
+      },
+      "allOf": [
+        {
+          "$ref": "#/definitions/NotificationDefinition"
+        }
+      ]
+    },
+    "NotificationDefinition": {
+      "description": "Notification definition object",
+      "type": "object",
+      "properties": {
+        "name": {
+          "description": "Notification name",
+          "type": "string",
+          "maxLength": 64
+        },
+        "title": {
+          "description": "Notification title",
+          "type": "string",
+          "maxLength": 128
+        },
+        "body": {
+          "description": "Notification body",
+          "type": "string",
+          "maxLength": 4000
+        },
+        "platform_type": {
+          "description": "Notification platform type",
+          "type": "string",
+          "enum": [
+            "apns",
+            "gcm"
+          ]
+        },
+        "notification_target": {
+          "$ref": "#/definitions/NotificationTarget"
+        },
+        "custom_data": {
+          "description": "Notification custom data(priority, expiration, etc.)",
+          "type": "object",
+          "additionalProperties": {
+            "type": "string"
+          }
+        }
+      },
+      "required": [
+        "name",
+        "body",
+        "platform_type"
+      ]
+    },
+    "NotificationSendSucceededResult": {
+      "description": "Notification send succeeded.",
+      "properties": {
+        "notification_id": {
+          "type": "string",
+          "description": "The unique notification identifier."
+        }
+      }
+    },
+    "NotificationTarget": {
+      "description": "Generic notification target.",
+      "type": "object",
+      "discriminator": "type",
+      "properties": {
+        "type": {
+          "type": "string"
+        }
+      },
+      "required": [
+        "type"
+      ]
+    },
+    "NotificationConfig": {
+      "description": "Generic notification configuration.",
+      "type": "object",
+      "discriminator": "type",
+      "properties": {
+        "type": {
+          "type": "string"
+        }
+      },
+      "required": [
+        "type"
+      ]
+    },
+    "NotificationConfigResult": {
+      "description": "Generic notification configuration result.",
+      "discriminator": "type",
+      "properties": {
+        "type": {
+          "type": "string"
+        },
+        "status": {
+          "type": "string",
+          "description": "Configuration state.",
+          "enum": [
+            "configured",
+            "configuring",
+            "expired",
+            "not_configured",
+            "deleted",
+            "deleting"
+          ]
+        }
+      },
+      "required": [
+        "type",
+        "status"
+      ]
+    },
+    "DeviceConfiguration": {
+      "properties": {
+        "name": {
+          "description": "The name of the device model and OS version",
+          "type": "string"
+        },
+        "id": {
+          "type": "string",
+          "format": "uuid",
+          "description": "The unique id of the device configuration"
+        },
+        "tier": {
+          "description": "The tier",
+          "type": "number"
+        },
+        "image": {
+          "properties": {
+            "full": {
+              "type": "string"
+            },
+            "thumb": {
+              "type": "string"
+            }
+          }
         },
-        "path_symbol_id": {
-            "name": "symbol_id",
-            "type": "string",
-            "in": "path",
-            "description": "The ID of the symbol (uuid of the symbol)",
-            "required": true,
-            "x-ms-parameter-location": "method"
+        "model": {
+          "$ref": "#/definitions/DeviceModel"
         },
-        "path_crash_group_id": {
-            "name": "crash_group_id",
-            "in": "path",
-            "required": true,
-            "description": "id of a specific group",
-            "type": "string",
-            "x-ms-parameter-location": "method"
+        "os": {
+          "type": "string"
         },
-        "path_crash_id": {
-            "name": "crash_id",
-            "in": "path",
-            "required": true,
-            "description": "id of a specific error",
-            "type": "string",
-            "x-ms-parameter-location": "method"
+        "osName": {
+          "type": "string"
         },
-        "app_version": {
-            "name": "app_version",
-            "in": "query",
-            "type": "string",
-            "description": "version",
-            "required": false,
-            "x-ms-parameter-location": "method"
+        "marketShare": {
+          "type": "number"
+        }
+      }
+    },
+    "DeviceModel": {
+      "properties": {
+        "name": {
+          "type": "string"
         },
-        "date_from": {
-            "name": "date_from",
-            "in": "query",
-            "type": "string",
-            "format": "date-time",
-            "description": "",
-            "required": false,
-            "x-ms-parameter-location": "method"
+        "manufacturer": {
+          "type": "string"
         },
-        "date_to": {
-            "name": "date_to",
-            "in": "query",
-            "type": "string",
-            "format": "date-time",
-            "description": "",
-            "required": false,
-            "x-ms-parameter-location": "method"
+        "model": {
+          "type": "string"
         },
-        "last_occurrence_from": {
-            "name": "last_occurrence_from",
-            "in": "query",
-            "type": "string",
-            "format": "date-time",
-            "description": "Earliest date when the last time a crash occured in a error group",
-            "required": false,
-            "x-ms-parameter-location": "method"
+        "platform": {
+          "type": "string"
         },
-        "last_occurrence_to": {
-            "name": "last_occurrence_to",
-            "in": "query",
-            "type": "string",
-            "format": "date-time",
-            "description": "Latest date when the last time a crash occured in a error group",
-            "required": false,
-            "x-ms-parameter-location": "method"
+        "dimensions": {
+          "$ref": "#/definitions/DeviceDimensions"
         },
-        "error_type": {
-            "name": "error_type",
-            "in": "query",
-            "type": "string",
-            "required": false,
-            "enum": [
-                "something",
-                "else"
-            ],
-            "x-ms-parameter-location": "method"
+        "resolution": {
+          "$ref": "#/definitions/DeviceResolution"
         },
-        "group_type": {
-            "name": "group_type",
-            "in": "query",
-            "type": "string",
-            "required": false,
-            "enum": [
-                "GroupType1",
-                "GroupType2"
-            ],
-            "x-ms-parameter-location": "method"
+        "releaseDate": {
+          "type": "string"
         },
-        "group_status": {
-            "name": "group_status",
-            "in": "query",
-            "type": "string",
-            "required": false,
-            "enum": [
-                "open",
-                "closed",
-                "ignored"
-            ],
-            "x-ms-parameter-location": "method"
+        "formFactor": {
+          "type": "string"
         },
-        "include_report": {
-            "name": "include_report",
-            "in": "query",
-            "type": "boolean",
-            "default": false,
-            "required": false,
-            "description": "true if the error should include the raw error report. Default is false",
-            "x-ms-parameter-location": "method"
+        "screenSize": {
+          "$ref": "#/definitions/DeviceScreenSize"
         },
-        "include_log": {
-            "name": "include_log",
-            "in": "query",
-            "type": "boolean",
-            "default": false,
-            "required": false,
-            "description": "true if the error should include the custom log report. Default is false",
-            "x-ms-parameter-location": "method"
+        "cpu": {
+          "$ref": "#/definitions/DeviceCpu"
         },
-        "group_text_search": {
-            "name": "group_text_search",
-            "in": "query",
-            "type": "string",
-            "required": false,
-            "description": "A freetext search that matches in error, error types, error stack_traces and error user",
-            "x-ms-parameter-location": "method"
+        "memory": {
+          "$ref": "#/definitions/DeviceMemory"
         },
-        "StartParameter": {
-            "name": "start",
-            "in": "query",
-            "description": "Start date time in data in ISO 8601 date time format",
-            "required": true,
-            "type": "string",
-            "format": "date-time",
-            "x-ms-parameter-location": "method"
+        "screenRotation": {
+          "type": "number"
         },
-        "LogFlowStartTimeParameter": {
-            "name": "start",
-            "in": "query",
-            "description": "Start date time in data in ISO 8601 date time format. It must be within the current day in the UTC timezone. The default value is the start time of the current day in UTC timezone.",
-            "required": false,
-            "type": "string",
-            "format": "date-time",
-            "x-ms-parameter-location": "method"
+        "deviceFrame": {
+          "$ref": "#/definitions/DeviceFrame"
         },
-        "EndParameter": {
-            "name": "end",
-            "in": "query",
-            "description": "Last date time in data in ISO 8601 date time format",
-            "required": false,
-            "type": "string",
-            "format": "date-time",
-            "x-ms-parameter-location": "method"
+        "availabilityCount": {
+          "type": "number"
+        }
+      }
+    },
+    "DeviceScreenSize": {
+      "description": "Physical device screen dimensions",
+      "properties": {
+        "cm": {
+          "type": "string"
+        },
+        "in": {
+          "type": "string"
+        }
+      }
+    },
+    "DeviceResolution": {
+      "description": "Device screen resolution",
+      "properties": {
+        "height": {
+          "type": "string"
         },
-        "CrashGroupParameter": {
-            "name": "crash_group_id",
-            "in": "path",
-            "description": "The id of the crash group",
-            "required": true,
-            "type": "string",
-            "format": "string",
-            "x-ms-parameter-location": "method"
+        "width": {
+          "type": "string"
         },
-        "CrashGroupsParameter": {
-            "name": "crash_groups",
-            "in": "body",
-            "required": true,
-            "schema": {
-                "$ref": "#/definitions/CrashGroupContainer"
+        "ppi": {
+          "type": "string"
+        }
+      }
+    },
+    "DeviceDimensions": {
+      "description": "Physical device dimensions",
+      "properties": {
+        "depth": {
+          "type": "object"
+        },
+        "height": {
+          "type": "object"
+        },
+        "width": {
+          "type": "object"
+        }
+      }
+    },
+    "DeviceCpu": {
+      "description": "CPU data for device",
+      "properties": {
+        "frequency": {
+          "type": "string"
+        },
+        "core": {
+          "type": "string"
+        }
+      }
+    },
+    "DeviceMemory": {
+      "description": "Memory data for device",
+      "properties": {
+        "formattedSize": {
+          "type": "string"
+        }
+      }
+    },
+    "DeviceFrame": {
+      "properties": {
+        "grid": {
+          "$ref": "#/definitions/DeviceFrameDefinition"
+        },
+        "full": {
+          "$ref": "#/definitions/DeviceFrameDefinition"
+        }
+      }
+    },
+    "DeviceFrameDefinition": {
+      "properties": {
+        "width": {
+          "type": "number"
+        },
+        "height": {
+          "type": "number"
+        },
+        "frameUrl": {
+          "type": "string"
+        },
+        "screen": {
+          "type": "array",
+          "items": {
+            "type": "number"
+          }
+        }
+      }
+    },
+    "TestRun": {
+      "title": "Test Run",
+      "description": "Summary single test run on Xamarin Test Cloud",
+      "type": "object",
+      "properties": {
+        "id": {
+          "type": "string",
+          "format": "uuid",
+          "description": "The unique id of the test upload"
+        },
+        "date": {
+          "description": "The date and time the test was uploaded",
+          "type": "string"
+        },
+        "appVersion": {
+          "description": "The compiled version of the app binary",
+          "type": "string"
+        },
+        "testSeries": {
+          "description": "The name of the test series with which this test upload is associated",
+          "type": "string"
+        },
+        "platform": {
+          "description": "The device platform targeted by the test. Possible values are 'ios' or 'android'",
+          "type": "string"
+        },
+        "runStatus": {
+          "description": "The current status of the test run, in relation to the various phases",
+          "type": "string"
+        },
+        "resultStatus": {
+          "description": "The passed/failed state",
+          "type": "string"
+        },
+        "state": {
+          "description": "Deprecated. Use runStatus instead.",
+          "type": "string"
+        },
+        "status": {
+          "description": "Deprecated. Use resultStatus instead.",
+          "type": "string"
+        },
+        "description": {
+          "description": "Human readable explanation of the current test status",
+          "type": "string"
+        },
+        "stats": {
+          "$ref": "#/definitions/TestRunStatistics"
+        },
+        "testType": {
+          "description": "The name of the test framework used to run this test",
+          "type": "string"
+        },
+        "uploadedBy": {
+          "type": "string",
+          "description": "The name of the user who uploaded the test"
+        }
+      }
+    },
+    "TestRunStatistics": {
+      "title": "Test Run Statistics",
+      "description": "Summary single test run on Xamarin Test Cloud",
+      "type": "object",
+      "properties": {
+        "devices": {
+          "description": "Number of devices running the test",
+          "type": "number"
+        },
+        "devicesFinished": {
+          "description": "Number of finished devices",
+          "type": "number"
+        },
+        "devicesFailed": {
+          "description": "Number of failed devices",
+          "type": "number"
+        },
+        "total": {
+          "description": "Number of tests in total",
+          "type": "number"
+        },
+        "passed": {
+          "description": "Number of passed tests",
+          "type": "number"
+        },
+        "failed": {
+          "description": "Number of failed tests",
+          "type": "number"
+        },
+        "skipped": {
+          "description": "Number of skipped tests",
+          "type": "number"
+        },
+        "peakMemory": {
+          "description": "The max amount of MB used during the test run",
+          "type": "number"
+        },
+        "totalDeviceMinutes": {
+          "description": "The number of minutes of device time the test has been runnign",
+          "type": "number"
+        }
+      }
+    },
+    "TestSeries": {
+      "title": "Test Series",
+      "description": "Summary of a single test series",
+      "type": "object",
+      "properties": {
+        "slug": {
+          "description": "Unique, human-readable identifier of the test series",
+          "type": "string"
+        },
+        "name": {
+          "description": "Name of the test series",
+          "type": "string"
+        },
+        "mostRecentActivity": {
+          "description": "Date of the latest test run that used this test series",
+          "type": "string",
+          "format": "dateTime"
+        },
+        "testRuns": {
+          "description": "Most recent test runs",
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/TestRunSummary"
+          }
+        }
+      },
+      "required": [
+        "slug",
+        "name"
+      ]
+    },
+    "TestRunSummary": {
+      "title": "Test Run Summary",
+      "description": "Most important information about a test run.",
+      "type": "object",
+      "properties": {
+        "date": {
+          "description": "Date of the test run.",
+          "type": "string",
+          "format": "dateTime"
+        },
+        "statusDescription": {
+          "description": "Human-readable status of the test run.",
+          "type": "string"
+        },
+        "failed": {
+          "description": "Number of failed tests",
+          "type": "number"
+        },
+        "passed": {
+          "description": "Number of passed tests",
+          "type": "number"
+        },
+        "completed": {
+          "description": "Tells whether the test run has completed",
+          "type": "boolean"
+        }
+      }
+    },
+    "DeviceSelection": {
+      "title": "Device Selection",
+      "description": "Short ID for a list of device IDs",
+      "type": "object",
+      "properties": {
+        "shortId": {
+          "description": "Identifier of the device selection",
+          "type": "string"
+        }
+      },
+      "required": [
+        "shortId"
+      ]
+    },
+    "Subscription": {
+      "title": "Subscription",
+      "description": "Subscription information",
+      "type": "object",
+      "properties": {
+        "startsAt": {
+          "description": "The date the subscription began",
+          "type": "string",
+          "format": "dateTime"
+        },
+        "endsAt": {
+          "description": "The date the subscription will end or ended",
+          "type": "string",
+          "format": "dateTime"
+        },
+        "daysLeft": {
+          "description": "The number of days left in the subscription",
+          "type": "number"
+        },
+        "tier": {
+          "$ref": "#/definitions/Tier"
+        },
+        "active": {
+          "description": "Is the subscription currently active?",
+          "type": "boolean"
+        },
+        "id": {
+          "description": "Id of the subscription",
+          "type": "string",
+          "format": "uuid"
+        }
+      }
+    },
+    "Tier": {
+      "title": "Subscription Tier",
+      "type": "object",
+      "properties": {
+        "name": {
+          "description": "The name of the tier",
+          "type": "string"
+        }
+      }
+    },
+    "TestReport": {
+      "required": [
+        "app_upload_id",
+        "date",
+        "testType",
+        "platform",
+        "stats",
+        "id",
+        "schema_version",
+        "revision",
+        "features",
+        "finished_device_snapshots",
+        "device_logs",
+        "date_finished"
+      ],
+      "properties": {
+        "app_upload_id": {
+          "type": "string"
+        },
+        "date": {
+          "type": "string"
+        },
+        "testType": {
+          "type": "string"
+        },
+        "platform": {
+          "type": "string"
+        },
+        "stats": {
+          "required": [
+            "os",
+            "devices",
+            "filesize",
+            "totalDeviceMinutes",
+            "devices_not_runned",
+            "failed",
+            "skipped",
+            "passed",
+            "total",
+            "devices_finished",
+            "devices_failed",
+            "devices_skipped",
+            "step_count"
+          ],
+          "properties": {
+            "os": {
+              "type": "number"
+            },
+            "devices": {
+              "type": "number"
+            },
+            "filesize": {
+              "type": "number"
+            },
+            "totalDeviceMinutes": {
+              "type": "number"
+            },
+            "devices_not_runned": {
+              "type": "number"
+            },
+            "failed": {
+              "type": "number"
+            },
+            "skipped": {
+              "type": "number"
+            },
+            "passed": {
+              "type": "number"
             },
-            "x-ms-parameter-location": "method"
+            "total": {
+              "type": "number"
+            },
+            "devices_finished": {
+              "type": "number"
+            },
+            "devices_failed": {
+              "type": "number"
+            },
+            "devices_skipped": {
+              "type": "number"
+            },
+            "step_count": {
+              "type": "number"
+            }
+          },
+          "type": "object"
         },
-        "EventParameter": {
-            "name": "event_name",
-            "in": "path",
-            "description": "The id of the event",
-            "required": true,
-            "type": "string",
-            "format": "string",
-            "x-ms-parameter-location": "method"
+        "id": {
+          "type": "string"
         },
-        "EventPropertyParameter": {
-            "name": "event_property_name",
-            "in": "path",
-            "description": "The id of the event property",
-            "required": true,
-            "type": "string",
-            "format": "string",
-            "x-ms-parameter-location": "method"
+        "schema_version": {
+          "type": "number"
         },
-        "IntervalParameter": {
-            "name": "interval",
-            "in": "query",
-            "description": "Size of interval in ISO 8601 duration format. (PnYnMnDTnHnMnS|PnW|P<date>T<time>). The valid durations are 1 day (P1D), 1 week (P1W), and 30 days (P30D).",
-            "required": true,
-            "type": "string",
-            "format": "Timespan",
-            "x-ms-parameter-location": "method"
+        "revision": {
+          "type": "number"
         },
-        "VersionsParameter": {
-            "name": "versions",
-            "in": "query",
-            "required": false,
-            "type": "array",
-            "items": {
+        "features": {
+          "type": "array",
+          "items": {
+            "type": "object",
+            "properties": {
+              "name": {
                 "type": "string"
-            },
-            "collectionFormat": "pipes",
-            "x-ms-parameter-location": "method"
+              },
+              "tests": {
+                "type": "array",
+                "items": {
+                  "type": "object",
+                  "properties": {
+                    "testName": {
+                      "type": "string"
+                    },
+                    "runs": {
+                      "type": "array",
+                      "items": {
+                        "type": "object",
+                        "properties": {
+                          "number": {
+                            "type": "number"
+                          },
+                          "steps": {
+                            "type": "array",
+                            "items": {
+                              "type": "object",
+                              "properties": {
+                                "stepName": {
+                                  "type": "string"
+                                },
+                                "id": {
+                                  "type": "string"
+                                },
+                                "stepExecutions": {
+                                  "type": "array",
+                                  "items": {
+                                    "type": "object",
+                                    "properties": {
+                                      "device_snapshot_id": {
+                                        "type": "string"
+                                      },
+                                      "status": {
+                                        "type": "string"
+                                      },
+                                      "timestamp": {
+                                        "type": "number"
+                                      }
+                                    }
+                                  }
+                                },
+                                "failed": {
+                                  "type": "number"
+                                },
+                                "skipped": {
+                                  "type": "number"
+                                },
+                                "step_report_url": {
+                                  "type": "string"
+                                }
+                              }
+                            }
+                          },
+                          "failed": {
+                            "type": "number"
+                          },
+                          "skipped": {
+                            "type": "number"
+                          },
+                          "report_url": {
+                            "type": "string"
+                          },
+                          "id": {
+                            "type": "string"
+                          }
+                        }
+                      }
+                    },
+                    "peakMemory": {
+                      "type": "number"
+                    },
+                    "peakDuration": {
+                      "type": "number"
+                    }
+                  }
+                }
+              },
+              "failed": {
+                "type": "number"
+              },
+              "skipped": {
+                "type": "number"
+              },
+              "peakMemory": {
+                "type": "number"
+              },
+              "peakDuration": {
+                "type": "number"
+              }
+            }
+          }
+        },
+        "finished_device_snapshots": {
+          "type": "array",
+          "items": {
+            "type": "string"
+          }
+        },
+        "device_logs": {
+          "type": "array",
+          "items": {
+            "type": "object",
+            "properties": {
+              "device_snapshot_id": {
+                "type": "string"
+              },
+              "device_log": {
+                "type": "string"
+              },
+              "test_log": {
+                "type": "string"
+              },
+              "appium_log": {
+                "type": "string"
+              }
+            }
+          }
         },
-        "VersionParameter": {
-            "name": "version",
-            "in": "query",
-            "required": true,
-            "type": "string",
-            "format": "string",
-            "x-ms-parameter-location": "method"
+        "date_finished": {
+          "type": "string"
         },
-        "EventNameParameter": {
-            "name": "event_name",
-            "in": "query",
-            "description": "to select the specific events",
-            "required": false,
-            "type": "array",
-            "items": {
-                "type": "string"
+        "errorMessage": {
+          "type": "string"
+        }
+      }
+    },
+    "TestCloudErrorDetails": {
+      "title": "Test Cloud Error Details",
+      "description": "Details of a failed operation",
+      "type": "object",
+      "properties": {
+        "status": {
+          "description": "Status of the operation",
+          "type": "string"
+        },
+        "message": {
+          "description": "Human-readable message that describes the error",
+          "type": "string"
+        }
+      },
+      "required": [
+        "status",
+        "message"
+      ]
+    },
+    "TestCloudFileHashDeprecated": {
+      "title": "Test Cloud File Hash",
+      "description": "Hash, type, path and byte range of a file that is required in test run",
+      "type": "object",
+      "properties": {
+        "file_type": {
+          "type": "string",
+          "description": "Type of the file",
+          "enum": [
+            "dsym-file",
+            "app-file",
+            "test-file"
+          ]
+        },
+        "checksum": {
+          "type": "string",
+          "description": "SHA256 hash of the file"
+        },
+        "relative_path": {
+          "type": "string",
+          "description": "Relative path of the file"
+        },
+        "byte_range": {
+          "type": "string",
+          "description": "Range of bytes required to verify ownership of the file"
+        }
+      },
+      "required": [
+        "file_type",
+        "checksum",
+        "relative_path"
+      ]
+    },
+    "TestCloudFileHash": {
+      "title": "Test Cloud File Hash",
+      "description": "Hash, type, path and byte range of a file that is required in test run",
+      "type": "object",
+      "properties": {
+        "fileType": {
+          "type": "string",
+          "description": "Type of the file",
+          "enum": [
+            "dsym-file",
+            "app-file",
+            "test-file"
+          ]
+        },
+        "checksum": {
+          "type": "string",
+          "description": "SHA256 hash of the file"
+        },
+        "relativePath": {
+          "type": "string",
+          "description": "Relative path of the file"
+        }
+      },
+      "required": [
+        "fileType",
+        "checksum",
+        "relativePath"
+      ]
+    },
+    "TestCloudFileHashResponse": {
+      "title": "Test Cloud File Hash Response",
+      "description": "Response message for single uploaded file hash",
+      "type": "object",
+      "properties": {
+        "fileType": {
+          "type": "string",
+          "description": "Type of the file",
+          "enum": [
+            "dsym-file",
+            "app-file",
+            "test-file"
+          ]
+        },
+        "checksum": {
+          "type": "string",
+          "description": "SHA256 hash of the file"
+        },
+        "relativePath": {
+          "type": "string",
+          "description": "Relative path of the file"
+        },
+        "uploadStatus": {
+          "$ref": "#/definitions/TestCloudHashUploadStatus",
+          "description": "Status of the upload"
+        }
+      },
+      "required": [
+        "fileType",
+        "checksum",
+        "uploadStatus"
+      ]
+    },
+    "TestCloudHashUploadStatus": {
+      "title": "Test Cloud Hash Upload Status",
+      "description": "Result of uploading a single file hash",
+      "type": "object",
+      "properties": {
+        "statusCode": {
+          "type": "number",
+          "description": "HTTP status code that represent result of upload"
+        },
+        "location": {
+          "type": "string",
+          "description": "URI that should be used to make POST request if file with given hash doesn't exist. This is set when status_code is equal to 412"
+        }
+      },
+      "required": [
+        "statusCode"
+      ]
+    },
+    "TestCloudStartTestRunOptions": {
+      "title": "Test Cloud Start Test Run Options",
+      "description": "Options required to start the test run",
+      "type": "object",
+      "properties": {
+        "test_framework": {
+          "type": "string",
+          "description": "Test framework used by tests."
+        },
+        "device_selection": {
+          "type": "string",
+          "description": "Device selection string."
+        },
+        "language": {
+          "type": "string",
+          "description": "Language that should be used to run tests."
+        },
+        "locale": {
+          "type": "string",
+          "description": "Locale that should be used to run tests."
+        },
+        "test_series": {
+          "type": "string",
+          "description": "Name of the test series."
+        },
+        "test_parameters": {
+          "type": "object",
+          "description": "A JSON dictionary with additional test parameters"
+        }
+      },
+      "required": [
+        "test_framework",
+        "device_selection"
+      ]
+    },
+    "TestCloudStartTestRunResult": {
+      "title": "Test Cloud Test Run Start Result",
+      "description": "Result of starting a test run",
+      "type": "object",
+      "properties": {
+        "accepted_devices": {
+          "description": "List with names of accepted devices",
+          "type": "array",
+          "items": {
+            "type": "string"
+          }
+        },
+        "rejected_devices": {
+          "description": "List with names and descriptions of rejected devices",
+          "type": "array",
+          "items": {
+            "type": "string"
+          }
+        }
+      }
+    },
+    "TestRunState": {
+      "title": "Test Run State",
+      "description": "Current status of a test run",
+      "type": "object",
+      "properties": {
+        "message": {
+          "description": "Multi-line message that describes the status",
+          "type": "array",
+          "items": {
+            "type": "string"
+          }
+        },
+        "wait_time": {
+          "description": "Time (in seconds) that the client should wait for before checking the status again",
+          "type": "integer"
+        },
+        "exit_code": {
+          "description": "Exit code for the client",
+          "type": "integer"
+        }
+      }
+    },
+    "Permission": {
+      "type": "object",
+      "properties": {
+        "Name": {
+          "type": "string"
+        },
+        "Level": {
+          "type": "string"
+        }
+      }
+    },
+    "Table": {
+      "type": "object",
+      "properties": {
+        "name": {
+          "type": "string"
+        },
+        "permissions": {
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/Permission"
+          }
+        },
+        "extendedSettings": {
+          "type": "object",
+          "additionalProperties": {
+            "type": "string"
+          }
+        },
+        "columns": {
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/TableColumn"
+          }
+        }
+      }
+    },
+    "TableColumn": {
+      "type": "object",
+      "properties": {
+        "Name": {
+          "type": "string"
+        },
+        "IsIndexed": {
+          "type": "boolean"
+        },
+        "Type": {
+          "enum": [
+            "String",
+            "Boolean",
+            "Number",
+            "Date",
+            "Version",
+            "Custom"
+          ],
+          "type": "string"
+        },
+        "CanDelete": {
+          "type": "boolean"
+        },
+        "CanUpdateIndex": {
+          "type": "boolean"
+        }
+      }
+    },
+    "ImportDataContainer": {
+      "type": "object",
+      "properties": {
+        "csvData": {
+          "type": "string"
+        }
+      }
+    },
+    "PushConfig": {
+      "type": "object",
+      "properties": {
+        "apnsCredential": {
+          "type": "object",
+          "properties": {
+            "endpoint": {
+              "type": "string"
             },
-            "collectionFormat": "pipes",
-            "x-ms-parameter-location": "method"
+            "apnsCertificate": {
+              "type": "string"
+            }
+          }
         },
-        "CountParameter": {
-            "name": "count",
-            "in": "query",
-            "description": "The number of results to return",
-            "required": false,
-            "type": "integer",
-            "format": "int64",
-            "x-ms-parameter-location": "method"
+        "gcmCredential": {
+          "type": "object",
+          "properties": {
+            "googleApiKey": {
+              "type": "string"
+            }
+          }
+        }
+      }
+    },
+    "Deployment": {
+      "required": [
+        "name"
+      ],
+      "type": "object",
+      "properties": {
+        "key": {
+          "type": "string"
+        },
+        "name": {
+          "type": "string"
+        },
+        "latest_release": {
+          "$ref": "#/definitions/LiveUpdateRelease"
+        }
+      }
+    },
+    "DeploymentModification": {
+      "type": "object",
+      "properties": {
+        "name": {
+          "type": "string"
+        }
+      }
+    },
+    "LiveUpdateRelease": {
+      "properties": {
+        "target_binary_range": {
+          "type": "string"
         },
-        "TopParameter": {
-            "name": "$top",
-            "in": "query",
-            "description": "The maximum number of results to return. (0 will fetch all results)",
-            "required": false,
-            "default": 30,
-            "minimum": 0,
-            "maximum": 2000,
-            "type": "integer",
-            "format": "int64",
-            "x-ms-parameter-location": "method"
+        "blob_url": {
+          "type": "string"
         },
-        "SkipParameter": {
-            "name": "$skip",
-            "in": "query",
-            "description": "The offset (starting at 0) of the first result to return. This parameter along with limit is used to perform pagination.",
-            "required": false,
-            "default": 0,
-            "minimum": 0,
-            "type": "integer",
-            "format": "int64",
-            "x-ms-parameter-location": "method"
+        "description": {
+          "type": "string"
         },
-        "FilterParameter": {
-            "name": "$filter",
-            "in": "query",
-            "description": "A filter as specified in https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering.",
-            "required": false,
-            "type": "string",
-            "format": "string",
-            "x-ms-parameter-location": "method"
+        "is_disabled": {
+          "type": "boolean"
         },
-        "InlineCountParameter": {
-            "name": "$inlinecount",
-            "in": "query",
-            "description": "Controls whether or not to include a count of all the items accross all pages.",
-            "required": false,
-            "default": "none",
-            "type": "string",
-            "enum": [
-                "allpages",
-                "none"
-            ],
-            "x-ms-parameter-location": "method"
+        "is_mandatory": {
+          "type": "boolean"
         },
-        "OrderByParameter": {
-            "name": "$orderby",
-            "in": "query",
-            "description": "controls the sorting order and sorting based on which column",
-            "required": false,
-            "default": "count desc",
-            "type": "string",
-            "x-ms-parameter-location": "method"
+        "label": {
+          "type": "string"
         },
-        "PropertyCountParameter": {
-            "name": "count",
-            "in": "query",
-            "description": "The number of property values to return",
-            "required": false,
-            "default": 5,
-            "minimum": 1,
-            "maximum": 10,
-            "type": "integer",
-            "format": "int64",
-            "x-ms-parameter-location": "method"
+        "original_deployment": {
+          "type": "string",
+          "description": "Set on 'Promote'"
+        },
+        "original_label": {
+          "type": "string",
+          "description": "Set on 'Promote' and 'Rollback'"
+        },
+        "hash": {
+          "type": "string"
+        },
+        "released_by": {
+          "type": "string"
+        },
+        "release_method": {
+          "type": "string",
+          "enum": [
+            "Upload",
+            "Promote",
+            "Rollback"
+          ],
+          "description": "The release method is unknown if unspecified"
+        },
+        "rollout": {
+          "type": "integer"
+        },
+        "size": {
+          "type": "number"
+        },
+        "upload_time": {
+          "type": "integer"
         }
+      }
     },
-    "securityDefinitions": {
-        "APIToken": {
-            "type": "apiKey",
-            "name": "X-API-Token",
-            "in": "header"
+    "LiveUpdateReleaseModification": {
+      "properties": {
+        "target_binary_range": {
+          "type": "string"
+        },
+        "description": {
+          "type": "string"
         },
-        "Basic": {
-            "type": "basic",
-            "description": "HTTP Basic Authentication"
+        "is_disabled": {
+          "type": "boolean"
+        },
+        "is_mandatory": {
+          "type": "boolean"
+        },
+        "rollout": {
+          "type": "integer"
         }
+      }
     },
-    "tags": [
-        {
-            "name": "account"
-        },
-        {
-            "name": "build"
+    "LiveUpdateReleaseMetric": {
+      "required": [
+        "label",
+        "active"
+      ],
+      "properties": {
+        "label": {
+          "type": "string"
+        },
+        "active": {
+          "type": "integer"
+        },
+        "downloaded": {
+          "type": "integer"
+        },
+        "failed": {
+          "type": "integer"
+        },
+        "installed": {
+          "type": "integer"
+        }
+      }
+    },
+    "LiveUpdateStatusMetricMetadata": {
+      "properties": {
+        "label": {
+          "type": "string"
         },
-        {
-            "name": "distribute"
+        "app_version": {
+          "type": "string"
         },
-        {
-            "name": "crash"
+        "previous_deployment_key": {
+          "type": "string"
         },
-        {
-            "name": "analytics"
+        "previous_label_or_app_version": {
+          "type": "string"
         },
-        {
-            "name": "test"
+        "status": {
+          "type": "string"
         },
-        {
-            "name": "data"
+        "client_unique_id": {
+          "type": "string"
         }
-    ]
+      }
+    }
+  },
+  "parameters": {
+    "app_name": {
+      "name": "app_name",
+      "type": "string",
+      "in": "path",
+      "description": "The name of the application",
+      "required": true,
+      "x-ms-parameter-location": "method"
+    },
+    "owner_name": {
+      "name": "owner_name",
+      "type": "string",
+      "in": "path",
+      "description": "The name of the owner",
+      "required": true,
+      "x-ms-parameter-location": "method"
+    },
+    "app": {
+      "name": "app",
+      "in": "body",
+      "description": "The data for the app",
+      "required": true,
+      "schema": {
+        "$ref": "#/definitions/AppRequest"
+      },
+      "x-ms-parameter-location": "method"
+    },
+    "app_id": {
+      "name": "app_id",
+      "type": "string",
+      "in": "path",
+      "description": "The unique ID (UUID) of the app",
+      "required": true,
+      "x-ms-parameter-location": "method"
+    },
+    "feature_name": {
+      "name": "feature_name",
+      "type": "string",
+      "in": "path",
+      "description": "The name of the feature.",
+      "required": true,
+      "x-ms-parameter-location": "method"
+    },
+    "invitation_token": {
+      "name": "invitation_token",
+      "type": "string",
+      "in": "path",
+      "description": "The app invitation token that was sent to the user",
+      "required": true,
+      "x-ms-parameter-location": "method"
+    },
+    "organization_name": {
+      "name": "org_name",
+      "type": "string",
+      "in": "path",
+      "description": "The organization's name",
+      "required": true,
+      "x-ms-parameter-location": "method"
+    },
+    "user_id": {
+      "name": "user_id",
+      "type": "string",
+      "in": "path",
+      "description": "The ID of the user",
+      "required": true,
+      "x-ms-parameter-location": "method"
+    },
+    "user_name": {
+      "name": "user_name",
+      "type": "string",
+      "in": "path",
+      "description": "The slug name of the user",
+      "required": true,
+      "x-ms-parameter-location": "method"
+    },
+    "build_id": {
+      "name": "build_id",
+      "in": "path",
+      "description": "The build ID",
+      "required": true,
+      "type": "integer",
+      "minimum": 0,
+      "exclusiveMinimum": true,
+      "x-ms-parameter-location": "method"
+    },
+    "branch": {
+      "name": "branch",
+      "in": "path",
+      "description": "The branch name",
+      "required": true,
+      "type": "string",
+      "x-ms-parameter-location": "method"
+    },
+    "sha": {
+      "name": "sha",
+      "in": "path",
+      "description": "The SHA hash",
+      "required": true,
+      "type": "string",
+      "pattern": "^[0-9a-f]{5,40}$",
+      "x-ms-parameter-location": "method"
+    },
+    "form": {
+      "name": "form",
+      "in": "query",
+      "description": "The selected form of the object",
+      "required": false,
+      "type": "string",
+      "enum": [
+        "lite",
+        "full"
+      ],
+      "x-ms-parameter-location": "method"
+    },
+    "token": {
+      "name": "token",
+      "in": "query",
+      "description": "An auth token",
+      "required": true,
+      "type": "string",
+      "x-ms-parameter-location": "method"
+    },
+    "path_symbol_upload_id": {
+      "name": "symbol_upload_id",
+      "type": "string",
+      "in": "path",
+      "description": "The ID of the symbol upload",
+      "required": true,
+      "x-ms-parameter-location": "method"
+    },
+    "path_symbol_id": {
+      "name": "symbol_id",
+      "type": "string",
+      "in": "path",
+      "description": "The ID of the symbol (uuid of the symbol)",
+      "required": true,
+      "x-ms-parameter-location": "method"
+    },
+    "path_crash_group_id": {
+      "name": "crash_group_id",
+      "in": "path",
+      "required": true,
+      "description": "id of a specific group",
+      "type": "string",
+      "x-ms-parameter-location": "method"
+    },
+    "path_crash_id": {
+      "name": "crash_id",
+      "in": "path",
+      "required": true,
+      "description": "id of a specific error",
+      "type": "string",
+      "x-ms-parameter-location": "method"
+    },
+    "app_version": {
+      "name": "app_version",
+      "in": "query",
+      "type": "string",
+      "description": "version",
+      "required": false,
+      "x-ms-parameter-location": "method"
+    },
+    "date_from": {
+      "name": "date_from",
+      "in": "query",
+      "type": "string",
+      "format": "date-time",
+      "description": "",
+      "required": false,
+      "x-ms-parameter-location": "method"
+    },
+    "date_to": {
+      "name": "date_to",
+      "in": "query",
+      "type": "string",
+      "format": "date-time",
+      "description": "",
+      "required": false,
+      "x-ms-parameter-location": "method"
+    },
+    "last_occurrence_from": {
+      "name": "last_occurrence_from",
+      "in": "query",
+      "type": "string",
+      "format": "date-time",
+      "description": "Earliest date when the last time a crash occured in a error group",
+      "required": false,
+      "x-ms-parameter-location": "method"
+    },
+    "last_occurrence_to": {
+      "name": "last_occurrence_to",
+      "in": "query",
+      "type": "string",
+      "format": "date-time",
+      "description": "Latest date when the last time a crash occured in a error group",
+      "required": false,
+      "x-ms-parameter-location": "method"
+    },
+    "error_type": {
+      "name": "error_type",
+      "in": "query",
+      "type": "string",
+      "required": false,
+      "enum": [
+        "something",
+        "else"
+      ],
+      "x-ms-parameter-location": "method"
+    },
+    "group_type": {
+      "name": "group_type",
+      "in": "query",
+      "type": "string",
+      "required": false,
+      "enum": [
+        "GroupType1",
+        "GroupType2"
+      ],
+      "x-ms-parameter-location": "method"
+    },
+    "group_status": {
+      "name": "group_status",
+      "in": "query",
+      "type": "string",
+      "required": false,
+      "enum": [
+        "open",
+        "closed",
+        "ignored"
+      ],
+      "x-ms-parameter-location": "method"
+    },
+    "include_report": {
+      "name": "include_report",
+      "in": "query",
+      "type": "boolean",
+      "default": false,
+      "required": false,
+      "description": "true if the error should include the raw error report. Default is false",
+      "x-ms-parameter-location": "method"
+    },
+    "include_log": {
+      "name": "include_log",
+      "in": "query",
+      "type": "boolean",
+      "default": false,
+      "required": false,
+      "description": "true if the error should include the custom log report. Default is false",
+      "x-ms-parameter-location": "method"
+    },
+    "group_text_search": {
+      "name": "group_text_search",
+      "in": "query",
+      "type": "string",
+      "required": false,
+      "description": "A freetext search that matches in error, error types, error stack_traces and error user",
+      "x-ms-parameter-location": "method"
+    },
+    "path_symbol_group_id": {
+      "name": "symbol_group_id",
+      "in": "path",
+      "required": true,
+      "description": "missing symbol crash group id",
+      "type": "string",
+      "x-ms-parameter-location": "method"
+    },
+    "query_top": {
+      "name": "top",
+      "in": "query",
+      "required": true,
+      "description": "top N elements",
+      "type": "integer",
+      "x-ms-parameter-location": "method"
+    },
+    "query_filter": {
+      "name": "filter",
+      "in": "query",
+      "required": false,
+      "description": "query filter",
+      "type": "string",
+      "x-ms-parameter-location": "method"
+    },
+    "StartParameter": {
+      "name": "start",
+      "in": "query",
+      "description": "Start date time in data in ISO 8601 date time format",
+      "required": true,
+      "type": "string",
+      "format": "date-time",
+      "x-ms-parameter-location": "method"
+    },
+    "LogFlowStartTimeParameter": {
+      "name": "start",
+      "in": "query",
+      "description": "Start date time in data in ISO 8601 date time format. It must be within the current day in the UTC timezone. The default value is the start time of the current day in UTC timezone.",
+      "required": false,
+      "type": "string",
+      "format": "date-time",
+      "x-ms-parameter-location": "method"
+    },
+    "EndParameter": {
+      "name": "end",
+      "in": "query",
+      "description": "Last date time in data in ISO 8601 date time format",
+      "required": false,
+      "type": "string",
+      "format": "date-time",
+      "x-ms-parameter-location": "method"
+    },
+    "CrashGroupParameter": {
+      "name": "crash_group_id",
+      "in": "path",
+      "description": "The id of the crash group",
+      "required": true,
+      "type": "string",
+      "format": "string",
+      "x-ms-parameter-location": "method"
+    },
+    "CrashGroupsParameter": {
+      "name": "crash_groups",
+      "in": "body",
+      "required": true,
+      "schema": {
+        "$ref": "#/definitions/CrashGroupContainer"
+      },
+      "x-ms-parameter-location": "method"
+    },
+    "EventParameter": {
+      "name": "event_name",
+      "in": "path",
+      "description": "The id of the event",
+      "required": true,
+      "type": "string",
+      "format": "string",
+      "x-ms-parameter-location": "method"
+    },
+    "EventPropertyParameter": {
+      "name": "event_property_name",
+      "in": "path",
+      "description": "The id of the event property",
+      "required": true,
+      "type": "string",
+      "format": "string",
+      "x-ms-parameter-location": "method"
+    },
+    "IntervalParameter": {
+      "name": "interval",
+      "in": "query",
+      "description": "Size of interval in ISO 8601 duration format. (PnYnMnDTnHnMnS|PnW|P<date>T<time>). The valid durations are 1 day (P1D), 1 week (P1W), and 30 days (P30D).",
+      "required": true,
+      "type": "string",
+      "format": "Timespan",
+      "x-ms-parameter-location": "method"
+    },
+    "VersionsParameter": {
+      "name": "versions",
+      "in": "query",
+      "required": false,
+      "type": "array",
+      "items": {
+        "type": "string"
+      },
+      "collectionFormat": "pipes",
+      "x-ms-parameter-location": "method"
+    },
+    "VersionParameter": {
+      "name": "version",
+      "in": "query",
+      "required": true,
+      "type": "string",
+      "format": "string",
+      "x-ms-parameter-location": "method"
+    },
+    "EventNameParameter": {
+      "name": "event_name",
+      "in": "query",
+      "description": "to select the specific events",
+      "required": false,
+      "type": "array",
+      "items": {
+        "type": "string"
+      },
+      "collectionFormat": "pipes",
+      "x-ms-parameter-location": "method"
+    },
+    "CountParameter": {
+      "name": "count",
+      "in": "query",
+      "description": "The number of results to return",
+      "required": false,
+      "type": "integer",
+      "format": "int64",
+      "x-ms-parameter-location": "method"
+    },
+    "TopParameter": {
+      "name": "$top",
+      "in": "query",
+      "description": "The maximum number of results to return. (0 will fetch all results)",
+      "required": false,
+      "default": 30,
+      "minimum": 0,
+      "maximum": 2000,
+      "type": "integer",
+      "format": "int64",
+      "x-ms-parameter-location": "method"
+    },
+    "SkipParameter": {
+      "name": "$skip",
+      "in": "query",
+      "description": "The offset (starting at 0) of the first result to return. This parameter along with limit is used to perform pagination.",
+      "required": false,
+      "default": 0,
+      "minimum": 0,
+      "type": "integer",
+      "format": "int64",
+      "x-ms-parameter-location": "method"
+    },
+    "FilterParameter": {
+      "name": "$filter",
+      "in": "query",
+      "description": "A filter as specified in https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering.",
+      "required": false,
+      "type": "string",
+      "format": "string",
+      "x-ms-parameter-location": "method"
+    },
+    "InlineCountParameter": {
+      "name": "$inlinecount",
+      "in": "query",
+      "description": "Controls whether or not to include a count of all the items accross all pages.",
+      "required": false,
+      "default": "none",
+      "type": "string",
+      "enum": [
+        "allpages",
+        "none"
+      ],
+      "x-ms-parameter-location": "method"
+    },
+    "OrderByParameter": {
+      "name": "$orderby",
+      "in": "query",
+      "description": "controls the sorting order and sorting based on which column",
+      "required": false,
+      "default": "count desc",
+      "type": "string",
+      "x-ms-parameter-location": "method"
+    },
+    "PropertyCountParameter": {
+      "name": "count",
+      "in": "query",
+      "description": "The number of property values to return",
+      "required": false,
+      "default": 5,
+      "minimum": 1,
+      "maximum": 10,
+      "type": "integer",
+      "format": "int64",
+      "x-ms-parameter-location": "method"
+    },
+    "NotificationParameter": {
+      "name": "properties",
+      "in": "body",
+      "description": "Notification specifications.",
+      "required": true,
+      "schema": {
+        "$ref": "#/definitions/NotificationDefinition"
+      },
+      "x-ms-parameter-location": "method"
+    },
+    "NotificationConfigParameter": {
+      "name": "properties",
+      "in": "body",
+      "description": "Notification configurations.",
+      "required": true,
+      "schema": {
+        "$ref": "#/definitions/NotificationConfig"
+      },
+      "x-ms-parameter-location": "method"
+    },
+    "NotificationIdParameter": {
+      "name": "notification_id",
+      "in": "path",
+      "description": "The id of the notification.",
+      "required": true,
+      "type": "string",
+      "format": "string",
+      "x-ms-parameter-location": "method"
+    },
+    "path_deployment_name": {
+      "name": "deployment_name",
+      "in": "path",
+      "required": true,
+      "description": "deployment name",
+      "type": "string",
+      "x-ms-parameter-location": "method"
+    },
+    "path_deployment_key": {
+      "name": "deployment_key",
+      "in": "path",
+      "required": true,
+      "description": "deployment key",
+      "type": "string",
+      "x-ms-parameter-location": "method"
+    },
+    "path_release_label": {
+      "name": "release_label",
+      "in": "path",
+      "required": true,
+      "description": "release label",
+      "type": "string",
+      "x-ms-parameter-location": "method"
+    }
+  },
+  "securityDefinitions": {
+    "APIToken": {
+      "type": "apiKey",
+      "name": "X-API-Token",
+      "in": "header"
+    },
+    "Basic": {
+      "type": "basic",
+      "description": "HTTP Basic Authentication"
+    }
+  },
+  "tags": [
+    {
+      "name": "account"
+    },
+    {
+      "name": "build"
+    },
+    {
+      "name": "distribute"
+    },
+    {
+      "name": "crash"
+    },
+    {
+      "name": "analytics"
+    },
+    {
+      "name": "test"
+    },
+    {
+      "name": "data"
+    },
+    {
+      "name": "codepush"
+    }
+  ]
 }
\ No newline at end of file
diff --git a/swagger/bifrost.swagger.json b/swagger/bifrost.swagger.json
index 76668e0..b2e60d4 100644
--- a/swagger/bifrost.swagger.json
+++ b/swagger/bifrost.swagger.json
@@ -205,100 +205,59 @@
         ]
       }
     },
-    "/v0.1/orgs/{org_name}/users": {
+    "/v0.1/sdk/apps/{app_secret}/releases/{release_id}": {
       "get": {
-        "description": "Returns a list of users that belong to an organization",
-        "parameters": [
-          {
-            "$ref": "#/parameters/organization_name"
-          }
-        ],
-        "responses": {
-          "200": {
-            "description": "Success",
-            "schema": {
-              "type": "array",
-              "items": {
-                "$ref": "#/definitions/OrganizationUserResponse"
-              }
-            }
-          },
-          "400": {
-            "description": "BadRequest",
-            "schema": {
-              "$ref": "#/definitions/ErrorResponse"
-            }
-          },
-          "404": {
-            "description": "NotFound",
-            "schema": {
-              "$ref": "#/definitions/ErrorResponse"
-            }
-          }
-        },
-        "operationId": "account_getOrganizationUsers",
-        "security": [
-          {
-            "APIToken": []
-          }
-        ],
-        "tags": [
-          "account"
-        ]
-      }
-    },
-    "/v0.1/orgs/{org_name}/invitations/{user_email}": {
-      "post": {
-        "description": "Invites a new or existing user to an organization",
+        "description": "Get a release with id `release_id`. if `release_id` is `latest`, return the latest release that was distributed to the current user (from all the distribution groups).",
+        "operationId": "distribute_getReleaseOrLatestReleaseBySecret",
         "parameters": [
           {
-            "$ref": "#/parameters/organization_name"
+            "name": "app_secret",
+            "type": "string",
+            "in": "path",
+            "description": "The secret of the target application",
+            "required": true
           },
           {
-            "name": "user_email",
+            "name": "release_id",
             "type": "string",
             "in": "path",
-            "description": "The email of the user to invite",
+            "description": "The ID of the release, or `latest` to get the latest release from all the distribution groups assigned to the current user.",
             "required": true
           }
         ],
         "responses": {
-          "204": {
-            "description": "Success"
-          },
-          "400": {
-            "description": "BadRequest",
+          "200": {
+            "description": "Success",
             "schema": {
-              "$ref": "#/definitions/ErrorResponse"
+              "$ref": "#/definitions/ReleaseDetails"
             }
           },
-          "403": {
-            "description": "Forbidden",
+          "400": {
+            "description": "<b>bad_request</b>: `release_id` is not a number or the string `latest`.\n",
             "schema": {
-              "$ref": "#/definitions/ErrorResponse"
+              "$ref": "#/definitions/ErrorDetails"
             }
           },
           "404": {
-            "description": "NotFound",
+            "description": "<b>not_found</b> - A release or an app can't be found.\n",
             "schema": {
-              "$ref": "#/definitions/ErrorResponse"
+              "$ref": "#/definitions/ErrorDetails"
             }
           },
-          "409": {
-            "description": "Conflict",
+          "500": {
+            "description": "An internal error.\n",
             "schema": {
-              "$ref": "#/definitions/ErrorResponse"
+              "$ref": "#/definitions/ErrorDetails"
             }
           }
         },
-        "operationId": "account_inviteOrganizationUser",
         "security": [
           {
             "APIToken": []
           }
         ],
         "tags": [
-          "account"
+          "distribute"
         ]
       }
     },
@@ -1551,6 +1510,89 @@
         ]
       }
     },
+    "/v0.1/apps/{owner_name}/{app_name}/symbol_groups/{symbol_group_id}": {
+      "get": {
+        "description": "Gets missing symbol crash group by its id",
+        "summary": "Gets missing symbol crash group by its id",
+        "operationId": "crash_getMissingSymbolCrashGroupById",
+        "parameters": [
+          {
+            "$ref": "#/parameters/path_symbol_group_id"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/MissingSymbolCrashGroupsResponse"
+            }
+          },
+          "default": {
+            "description": "Error",
+            "schema": {
+              "$ref": "#/definitions/FailureResponse"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "crash"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/symbol_groups": {
+      "get": {
+        "description": "Gets top N (ordered by crash count) of crash groups by missing symbol",
+        "summary": "Gets top N (ordered by crash count) of crash groups by missing symbol",
+        "operationId": "crash_getTopNFilteredMissingSymbolCrashGroups",
+        "parameters": [
+          {
+            "$ref": "#/parameters/query_top"
+          },
+          {
+            "$ref": "#/parameters/query_filter"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/MissingSymbolCrashGroupsResponse"
+            }
+          },
+          "default": {
+            "description": "Error",
+            "schema": {
+              "$ref": "#/definitions/FailureResponse"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "crash"
+        ]
+      }
+    },
     "/v0.1/apps/{owner_name}/{app_name}/subscriptions/{subscription_id}/tables/{tableName}/data/{id}": {
       "get": {
         "parameters": [
@@ -2913,7 +2955,8 @@
             "description": "The source host",
             "required": true,
             "enum": [
-              "github"
+              "github",
+              "bitbucket"
             ]
           },
           {
@@ -3074,7 +3117,7 @@
     "/v0.1/apps/{owner_name}/{app_name}/releases/{release_id}": {
       "get": {
         "description": "Get a release with id `release_id`. if `release_id` is `latest`, return the latest release that was distributed to the current user (from all the distribution groups).",
-        "operationId": "distribute_getReleaseOrLatestRelease",
+        "operationId": "distribute_getRelease",
         "parameters": [
           {
             "name": "release_id",
@@ -3159,6 +3202,7 @@
             }
           }
         },
+        "operationId": "distribute_updateRelease",
         "security": [
           {
             "APIToken": []
@@ -3166,8 +3210,7 @@
         ],
         "tags": [
           "distribute"
-        ],
-        "operationId": "distribute_patchV01AppsByOwnerNameByAppNameReleasesByReleaseId"
+        ]
       },
       "delete": {
         "description": "Deletes a release.",
@@ -3203,6 +3246,7 @@
             }
           }
         },
+        "operationId": "distribute_deleteRelease",
         "security": [
           {
             "APIToken": []
@@ -3210,8 +3254,7 @@
         ],
         "tags": [
           "distribute"
-        ],
-        "operationId": "distribute_deleteV01AppsByOwnerNameByAppNameReleasesByReleaseId"
+        ]
       }
     },
     "/v0.1/apps/{owner_name}/{app_name}/releases": {
@@ -3250,6 +3293,7 @@
             }
           }
         },
+        "operationId": "distribute_getReleases",
         "security": [
           {
             "APIToken": []
@@ -3257,8 +3301,7 @@
         ],
         "tags": [
           "distribute"
-        ],
-        "operationId": "distribute_getV01AppsByOwnerNameByAppNameReleases"
+        ]
       }
     },
     "/v0.1/apps/{owner_name}/{app_name}/release_uploads/{upload_id}": {
@@ -3299,6 +3342,7 @@
             "description": "Unknown upload_id or status was committed but the upload hasn't finished."
           }
         },
+        "operationId": "distribute_updateReleaseUpload",
         "security": [
           {
             "APIToken": []
@@ -3306,8 +3350,7 @@
         ],
         "tags": [
           "distribute"
-        ],
-        "operationId": "distribute_patchV01AppsByOwnerNameByAppNameReleaseUploadsByUploadId"
+        ]
       }
     },
     "/v0.1/apps/{owner_name}/{app_name}/release_uploads": {
@@ -3329,6 +3372,7 @@
             }
           }
         },
+        "operationId": "distribute_createReleaseUpload",
         "security": [
           {
             "APIToken": []
@@ -3336,8 +3380,7 @@
         ],
         "tags": [
           "distribute"
-        ],
-        "operationId": "distribute_postV01AppsByOwnerNameByAppNameReleaseUploads"
+        ]
       }
     },
     "/v0.1/apps/{owner_name}/{app_name}/recent_releases": {
@@ -3373,318 +3416,124 @@
         ]
       }
     },
-    "/v0.1/apps/{owner_name}/{app_name}/recent_packages": {
-      "get": {
+    "/v0.1/apps/{owner_name}/{app_name}/invitations/{user_email}": {
+      "post": {
         "deprecated": true,
-        "description": "Get the latest package from every distribution group associated with an application.",
-        "operationId": "distribute_getLatestPackages",
+        "description": "Invites a new or existing user to an app",
         "parameters": [
           {
             "$ref": "#/parameters/owner_name"
           },
           {
             "$ref": "#/parameters/app_name"
-          }
-        ],
-        "responses": {
-          "200": {
-            "description": "Success",
-            "schema": {
-              "type": "array",
-              "items": {
-                "$ref": "#/definitions/BasicPackageDetails"
-              }
-            }
-          }
-        },
-        "security": [
-          {
-            "APIToken": []
-          }
-        ],
-        "tags": [
-          "distribute"
-        ]
-      }
-    },
-    "/v0.1/apps/{owner_name}/{app_name}/packages/{package_id}": {
-      "get": {
-        "deprecated": true,
-        "description": "Get a package with id 'package_id'. if 'package_id' is 'latest', return the latest package that was distributed to the current user (from all the distribution groups).",
-        "operationId": "distribute_getPackageOrLatestPackage",
-        "parameters": [
+          },
           {
-            "name": "package_id",
+            "name": "user_email",
             "type": "string",
             "in": "path",
-            "description": "The ID of the package, or 'latest' to get the latest package from all the distribution groups assigned to the current user.",
+            "description": "The email of the user to invite",
             "required": true
-          },
-          {
-            "$ref": "#/parameters/owner_name"
-          },
-          {
-            "$ref": "#/parameters/app_name"
           }
         ],
         "responses": {
-          "200": {
-            "description": "Success",
+          "204": {
+            "description": "Success"
+          },
+          "400": {
+            "description": "BadRequest",
             "schema": {
-              "$ref": "#/definitions/PackageDetails"
+              "$ref": "#/definitions/ErrorResponse"
             }
           },
-          "400": {
-            "description": "<b>bad_request</b>: 'package_id' is not a number or the string \"latest\".\n",
+          "403": {
+            "description": "Forbidden",
             "schema": {
-              "$ref": "#/definitions/ErrorDetails"
+              "$ref": "#/definitions/ErrorResponse"
             }
           },
           "404": {
-            "description": "<b>not_found</b> - A package or an app can't be found.\n",
+            "description": "NotFound",
             "schema": {
-              "$ref": "#/definitions/ErrorDetails"
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          },
+          "409": {
+            "description": "Conflict",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
             }
           }
         },
+        "operationId": "deprecated_inviteAppUser",
         "security": [
           {
             "APIToken": []
           }
         ],
         "tags": [
-          "distribute"
+          "account"
         ]
       },
       "patch": {
-        "deprecated": true,
-        "description": "Updates a package.",
+        "description": "Update pending invitation permission",
         "parameters": [
           {
-            "name": "package_id",
-            "type": "number",
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          },
+          {
+            "name": "user_email",
+            "type": "string",
             "in": "path",
-            "description": "The ID of the package",
+            "description": "The email of the user to invite",
             "required": true
           },
           {
-            "name": "body",
+            "name": "user_invitation_permissions_data",
             "in": "body",
-            "description": "The package information.",
-            "required": true,
+            "description": "The value to update the user permission in the invite.",
             "schema": {
-              "$ref": "#/definitions/PackageUpdateRequest"
+              "$ref": "#/definitions/UserInvitationPermissionsUpdateRequest"
             }
-          },
-          {
-            "$ref": "#/parameters/owner_name"
-          },
-          {
-            "$ref": "#/parameters/app_name"
           }
         ],
         "responses": {
-          "200": {
-            "description": "Success",
+          "204": {
+            "description": "Success"
+          },
+          "400": {
+            "description": "BadRequest",
             "schema": {
-              "$ref": "#/definitions/PackageDetails"
+              "$ref": "#/definitions/ErrorResponse"
             }
           },
-          "400": {
-            "description": "<b>not_supported</b>: Trying to change a distribution group. Currently this operation is not supported.   \n",
+          "403": {
+            "description": "Forbidden",
             "schema": {
-              "$ref": "#/definitions/ErrorDetails"
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          },
+          "404": {
+            "description": "NotFound",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
             }
           }
         },
+        "operationId": "account_updateAppUserInvitationsPermission",
         "security": [
           {
             "APIToken": []
           }
         ],
         "tags": [
-          "distribute"
-        ],
-        "operationId": "distribute_patchV01AppsByOwnerNameByAppNamePackagesByPackageId"
+          "account"
+        ]
       },
       "delete": {
-        "deprecated": true,
-        "description": "Deletes a package.",
-        "parameters": [
-          {
-            "name": "package_id",
-            "type": "string",
-            "in": "path",
-            "description": "The ID of the package",
-            "required": true
-          },
-          {
-            "$ref": "#/parameters/owner_name"
-          },
-          {
-            "$ref": "#/parameters/app_name"
-          }
-        ],
-        "responses": {
-          "200": {
-            "description": "Success"
-          },
-          "404": {
-            "description": "<b>not_found</b>: An app or a package couldn't be found\n",
-            "schema": {
-              "$ref": "#/definitions/ErrorDetails"
-            }
-          },
-          "500": {
-            "description": "An internal error. Delete can partially fail. If that happens partially_deleted error_code is returned.<br>\n<b>partially_deleted</b>: Package was removed from all distribution groups, but couldn't be deleted from Mobile Center.\n",
-            "schema": {
-              "$ref": "#/definitions/ErrorDetails"
-            }
-          }
-        },
-        "security": [
-          {
-            "APIToken": []
-          }
-        ],
-        "tags": [
-          "distribute"
-        ],
-        "operationId": "distribute_deleteV01AppsByOwnerNameByAppNamePackagesByPackageId"
-      }
-    },
-    "/v0.1/apps/{owner_name}/{app_name}/packages": {
-      "get": {
-        "deprecated": true,
-        "description": "Return detailed information about packages.",
-        "parameters": [
-          {
-            "name": "published_only",
-            "type": "boolean",
-            "in": "query",
-            "description": "when true, filters out packages that were uplaoded but were never distributed. Packages that under deleted distribution groups will not be filtered out.",
-            "required": false
-          },
-          {
-            "name": "$filter",
-            "type": "string",
-            "in": "query",
-            "description": "OBSOLETE. Will be removed in next version. An OData style filter. Currently only support the 'eq' comparision type. E.g. ?$filter=status eq 'Available'",
-            "required": false
-          },
-          {
-            "$ref": "#/parameters/owner_name"
-          },
-          {
-            "$ref": "#/parameters/app_name"
-          }
-        ],
-        "responses": {
-          "200": {
-            "description": "Success",
-            "schema": {
-              "type": "array",
-              "items": {
-                "$ref": "#/definitions/PackageDetails"
-              }
-            }
-          }
-        },
-        "security": [
-          {
-            "APIToken": []
-          }
-        ],
-        "tags": [
-          "distribute"
-        ],
-        "operationId": "distribute_getV01AppsByOwnerNameByAppNamePackages"
-      }
-    },
-    "/v0.1/apps/{owner_name}/{app_name}/package_uploads/{upload_id}": {
-      "patch": {
-        "deprecated": true,
-        "description": "Commits or aborts the upload process for a package for the specified application",
-        "parameters": [
-          {
-            "name": "upload_id",
-            "type": "string",
-            "in": "path",
-            "description": "The ID of the upload",
-            "required": true
-          },
-          {
-            "name": "body",
-            "in": "body",
-            "description": "The package information",
-            "required": true,
-            "schema": {
-              "$ref": "#/definitions/PackageUploadEndRequest"
-            }
-          },
-          {
-            "$ref": "#/parameters/owner_name"
-          },
-          {
-            "$ref": "#/parameters/app_name"
-          }
-        ],
-        "responses": {
-          "200": {
-            "description": "Success",
-            "schema": {
-              "$ref": "#/definitions/PackageUploadEndResponse"
-            }
-          },
-          "400": {
-            "description": "1. error code - release_not_uploaded - Release hasn't finished uploading or upload hasn't started or upload has failed. <br>  \n2. error code - no_upload_resource - upload_id is not recognized. An Upload resource should be created first. <br>\n"
-          }
-        },
-        "security": [
-          {
-            "APIToken": []
-          }
-        ],
-        "tags": [
-          "distribute"
-        ],
-        "operationId": "distribute_patchV01AppsByOwnerNameByAppNamePackageUploadsByUploadId"
-      }
-    },
-    "/v0.1/apps/{owner_name}/{app_name}/package_uploads": {
-      "post": {
-        "deprecated": true,
-        "description": "Begins the upload process for a new package for the specified application",
-        "parameters": [
-          {
-            "$ref": "#/parameters/owner_name"
-          },
-          {
-            "$ref": "#/parameters/app_name"
-          }
-        ],
-        "responses": {
-          "201": {
-            "description": "Success",
-            "schema": {
-              "$ref": "#/definitions/PackageUploadBeginResponse"
-            }
-          }
-        },
-        "security": [
-          {
-            "APIToken": []
-          }
-        ],
-        "tags": [
-          "distribute"
-        ],
-        "operationId": "distribute_postV01AppsByOwnerNameByAppNamePackageUploads"
-      }
-    },
-    "/v0.1/apps/{owner_name}/{app_name}/invitations/{user_email}": {
-      "post": {
-        "description": "Invites a new or existing user to an app",
+        "description": "Removes a user's invitation to an app",
         "parameters": [
           {
             "$ref": "#/parameters/owner_name"
@@ -3721,15 +3570,9 @@
             "schema": {
               "$ref": "#/definitions/ErrorResponse"
             }
-          },
-          "409": {
-            "description": "Conflict",
-            "schema": {
-              "$ref": "#/definitions/ErrorResponse"
-            }
           }
         },
-        "operationId": "account_inviteAppUser",
+        "operationId": "account_deleteAppInvitation",
         "security": [
           {
             "APIToken": []
@@ -3738,9 +3581,11 @@
         "tags": [
           "account"
         ]
-      },
-      "delete": {
-        "description": "Removes a user's invitation to an app",
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/invitations": {
+      "post": {
+        "description": "Invites a new or existing user to an app",
         "parameters": [
           {
             "$ref": "#/parameters/owner_name"
@@ -3750,10 +3595,11 @@
           },
           {
             "name": "user_email",
-            "type": "string",
-            "in": "path",
+            "in": "body",
             "description": "The email of the user to invite",
-            "required": true
+            "schema": {
+              "$ref": "#/definitions/UserEmailRequest"
+            }
           }
         ],
         "responses": {
@@ -3777,9 +3623,15 @@
             "schema": {
               "$ref": "#/definitions/ErrorResponse"
             }
+          },
+          "409": {
+            "description": "Conflict",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
           }
         },
-        "operationId": "account_deleteAppInvitation",
+        "operationId": "account_inviteAppUser",
         "security": [
           {
             "APIToken": []
@@ -3788,9 +3640,7 @@
         "tags": [
           "account"
         ]
-      }
-    },
-    "/v0.1/apps/{owner_name}/{app_name}/invitations": {
+      },
       "get": {
         "description": "Gets the pending invitations for the app",
         "parameters": [
@@ -3982,113 +3832,131 @@
         ]
       }
     },
-    "/v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}/packages/{package_id}": {
+    "/v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}/members": {
       "get": {
-        "deprecated": true,
-        "operationId": "distribute_getLatestPackageForDistributionGroup",
-        "description": "Return detailed information about a distributed package in a given distribution group.",
+        "description": "Returns a list of member details in the distribution group specified",
         "parameters": [
           {
-            "name": "distribution_group_name",
-            "type": "string",
-            "in": "path",
-            "description": "The name of the distribution group.",
-            "required": true
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
           },
           {
-            "name": "package_id",
+            "name": "distribution_group_name",
             "type": "string",
             "in": "path",
-            "description": "For GET calls, this must be 'latest', specific package_id's are not supported at this time.",
+            "description": "The name of the distribution group",
             "required": true
           },
           {
-            "$ref": "#/parameters/owner_name"
-          },
-          {
-            "$ref": "#/parameters/app_name"
+            "name": "exclude_pending_invitations",
+            "type": "boolean",
+            "in": "query",
+            "description": "Whether to exclude pending invitations in the response",
+            "required": false
           }
         ],
         "responses": {
           "200": {
             "description": "Success",
             "schema": {
-              "$ref": "#/definitions/PackageDetails"
+              "type": "array",
+              "items": {
+                "$ref": "#/definitions/DistributionGroupUserGetResponse"
+              }
             }
           },
-          "404": {
-            "description": "1. error code - not_found - Distribution group or the app doesn't exist.<br>  \n2. error code - no_packages_for_app - App has no packages.\n",
+          "403": {
+            "description": "Forbidden",
             "schema": {
-              "$ref": "#/definitions/ErrorDetails"
+              "$ref": "#/definitions/ErrorResponse"
             }
           },
-          "501": {
-            "description": "<b>not_implemented</b> - Cannot request a specific package_id.\n",
+          "404": {
+            "description": "NotFound",
             "schema": {
-              "$ref": "#/definitions/ErrorDetails"
+              "$ref": "#/definitions/ErrorResponse"
             }
           }
         },
+        "operationId": "account_getDistributionGroupUsers",
         "security": [
           {
             "APIToken": []
           }
         ],
         "tags": [
-          "distribute"
+          "account"
         ]
-      }
-    },
-    "/v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}/packages": {
-      "get": {
-        "deprecated": true,
-        "operationId": "distribute_getPackagesForDistributionGroup",
-        "description": "Return detailed information about distributed packages in a given distribution group.",
+      },
+      "post": {
+        "description": "Adds the members to the specified distribution group",
         "parameters": [
           {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          },
+          {
             "name": "distribution_group_name",
             "type": "string",
             "in": "path",
-            "description": "The name of the distribution group.",
+            "description": "The name of the distribution group",
             "required": true
           },
           {
-            "$ref": "#/parameters/owner_name"
-          },
-          {
-            "$ref": "#/parameters/app_name"
+            "name": "members",
+            "in": "body",
+            "description": "The list of members to add",
+            "required": true,
+            "schema": {
+              "$ref": "#/definitions/DistributionGroupUserRequest"
+            }
           }
         ],
         "responses": {
           "200": {
-            "description": "Success",
             "schema": {
               "type": "array",
               "items": {
-                "$ref": "#/definitions/PackageDetails"
+                "$ref": "#/definitions/DistributionGroupUserPostResponse"
               }
+            },
+            "description": "Success"
+          },
+          "400": {
+            "description": "BadRequest",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          },
+          "403": {
+            "description": "Forbidden",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
             }
           },
           "404": {
-            "description": "<b>not_found</b>: A distribution group can't be found.\n",
+            "description": "NotFound",
             "schema": {
-              "$ref": "#/definitions/ErrorDetails"
+              "$ref": "#/definitions/ErrorResponse"
             }
           }
         },
+        "operationId": "account_createDistributionGroupUsers",
         "security": [
           {
             "APIToken": []
           }
         ],
         "tags": [
-          "distribute"
+          "account"
         ]
-      }
-    },
-    "/v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}/members": {
-      "get": {
-        "description": "Returns a list of member details in the distribution group specified",
+      },
+      "delete": {
+        "description": "Remove the users from the distribution group",
         "parameters": [
           {
             "$ref": "#/parameters/owner_name"
@@ -4104,21 +3972,26 @@
             "required": true
           },
           {
-            "name": "exclude_pending_invitations",
-            "type": "boolean",
-            "in": "query",
-            "description": "Whether to exclude pending invitations in the response",
-            "required": false
+            "name": "members",
+            "in": "body",
+            "description": "The list of members to add",
+            "required": true,
+            "schema": {
+              "$ref": "#/definitions/DistributionGroupUserRequest"
+            }
           }
         ],
         "responses": {
           "200": {
-            "description": "Success",
             "schema": {
-              "type": "array",
-              "items": {
-                "$ref": "#/definitions/DistributionGroupUserGetResponse"
-              }
+              "$ref": "#/definitions/DistributionGroupUserDeleteResponse"
+            },
+            "description": "Success"
+          },
+          "400": {
+            "description": "BadRequest",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
             }
           },
           "403": {
@@ -4134,7 +4007,7 @@
             }
           }
         },
-        "operationId": "account_getDistributionGroupUsers",
+        "operationId": "account_deleteDistributionGroupUsers",
         "security": [
           {
             "APIToken": []
@@ -4143,9 +4016,11 @@
         "tags": [
           "account"
         ]
-      },
-      "post": {
-        "description": "Adds the members to the specified distribution group",
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}": {
+      "get": {
+        "description": "Returns a single distribution group for a given distribution group name",
         "parameters": [
           {
             "$ref": "#/parameters/owner_name"
@@ -4159,26 +4034,14 @@
             "in": "path",
             "description": "The name of the distribution group",
             "required": true
-          },
-          {
-            "name": "members",
-            "in": "body",
-            "description": "The list of members to add",
-            "required": true,
-            "schema": {
-              "$ref": "#/definitions/DistributionGroupUserRequest"
-            }
           }
         ],
         "responses": {
           "200": {
+            "description": "Success",
             "schema": {
-              "type": "array",
-              "items": {
-                "$ref": "#/definitions/DistributionGroupUserPostResponse"
-              }
-            },
-            "description": "Success"
+              "$ref": "#/definitions/DistributionGroupResponse"
+            }
           },
           "400": {
             "description": "BadRequest",
@@ -4199,7 +4062,7 @@
             }
           }
         },
-        "operationId": "account_createDistributionGroupUsers",
+        "operationId": "account_getDistributionGroup",
         "security": [
           {
             "APIToken": []
@@ -4209,8 +4072,8 @@
           "account"
         ]
       },
-      "delete": {
-        "description": "Remove the users from the distribution group",
+      "patch": {
+        "description": "Updates the attributes of distribution group",
         "parameters": [
           {
             "$ref": "#/parameters/owner_name"
@@ -4226,21 +4089,21 @@
             "required": true
           },
           {
-            "name": "members",
+            "name": "distribution_group",
             "in": "body",
-            "description": "The list of members to add",
+            "description": "The attributes to update for the distribution group",
             "required": true,
             "schema": {
-              "$ref": "#/definitions/DistributionGroupUserRequest"
+              "$ref": "#/definitions/DistributionGroupPatchRequest"
             }
           }
         ],
         "responses": {
           "200": {
+            "description": "Success",
             "schema": {
-              "$ref": "#/definitions/DistributionGroupUserDeleteResponse"
-            },
-            "description": "Success"
+              "$ref": "#/definitions/DistributionGroupResponse"
+            }
           },
           "400": {
             "description": "BadRequest",
@@ -4261,7 +4124,7 @@
             }
           }
         },
-        "operationId": "account_deleteDistributionGroupUsers",
+        "operationId": "account_updateDistributionGroup",
         "security": [
           {
             "APIToken": []
@@ -4270,17 +4133,15 @@
         "tags": [
           "account"
         ]
-      }
-    },
-    "/v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}": {
-      "get": {
-        "description": "Returns a single distribution group for a given distribution group name",
+      },
+      "delete": {
+        "description": "Deletes a distribution group",
         "parameters": [
           {
-            "$ref": "#/parameters/owner_name"
+            "$ref": "#/parameters/app_name"
           },
           {
-            "$ref": "#/parameters/app_name"
+            "$ref": "#/parameters/owner_name"
           },
           {
             "name": "distribution_group_name",
@@ -4291,11 +4152,8 @@
           }
         ],
         "responses": {
-          "200": {
-            "description": "Success",
-            "schema": {
-              "$ref": "#/definitions/DistributionGroupResponse"
-            }
+          "204": {
+            "description": "Success"
           },
           "400": {
             "description": "BadRequest",
@@ -4316,7 +4174,7 @@
             }
           }
         },
-        "operationId": "account_getDistributionGroup",
+        "operationId": "account_deleteDistributionGroup",
         "security": [
           {
             "APIToken": []
@@ -4325,35 +4183,73 @@
         "tags": [
           "account"
         ]
-      },
-      "patch": {
-        "description": "Updates the attributes of distribution group",
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/distribution_groups": {
+      "get": {
+        "description": "Returns a list of distribution groups in the app specified",
         "parameters": [
           {
             "$ref": "#/parameters/owner_name"
           },
           {
             "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "type": "array",
+              "items": {
+                "$ref": "#/definitions/DistributionGroupResponse"
+              }
+            }
+          },
+          "403": {
+            "description": "Forbidden",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
           },
+          "404": {
+            "description": "NotFound",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          }
+        },
+        "operationId": "account_getDistributionGroups",
+        "security": [
           {
-            "name": "distribution_group_name",
-            "type": "string",
-            "in": "path",
-            "description": "The name of the distribution group",
-            "required": true
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "account"
+        ]
+      },
+      "post": {
+        "description": "Creates a new distribution group and returns it to the caller",
+        "parameters": [
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
           },
           {
             "name": "distribution_group",
             "in": "body",
-            "description": "The attributes to update for the distribution group",
+            "description": "The data for the distribution group",
             "required": true,
             "schema": {
-              "$ref": "#/definitions/DistributionGroupPatchRequest"
+              "$ref": "#/definitions/DistributionGroupRequest"
             }
           }
         ],
         "responses": {
-          "200": {
+          "201": {
             "description": "Success",
             "schema": {
               "$ref": "#/definitions/DistributionGroupResponse"
@@ -4376,74 +4272,321 @@
             "schema": {
               "$ref": "#/definitions/ErrorResponse"
             }
+          },
+          "409": {
+            "description": "Conflict",
+            "schema": {
+              "$ref": "#/definitions/ErrorResponse"
+            }
+          }
+        },
+        "operationId": "account_createDistributionGroup",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "account"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/device_selection": {
+      "post": {
+        "description": "Creates a short ID for a list of devices",
+        "operationId": "test_createDeviceSelection",
+        "parameters": [
+          {
+            "name": "devices",
+            "type": "array",
+            "items": {
+              "type": "string"
+            },
+            "in": "formData",
+            "description": "List of device IDs",
+            "required": true
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "$ref": "#/definitions/DeviceSelection"
+            }
+          },
+          "400": {
+            "description": "Invalid list of device IDs",
+            "schema": {
+              "$ref": "#/definitions/TestCloudErrorDetails"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "test"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/device_configurations": {
+      "get": {
+        "description": "Returns a list of available devices",
+        "operationId": "test_getDeviceConfigurations",
+        "parameters": [
+          {
+            "name": "app_upload_id",
+            "type": "string",
+            "format": "uuid",
+            "in": "query",
+            "description": "The ID of the test run",
+            "required": false
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "OK",
+            "schema": {
+              "type": "array",
+              "items": {
+                "$ref": "#/definitions/DeviceConfiguration"
+              }
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "test"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}/releases/{release_label}": {
+      "patch": {
+        "description": "Modifies a CodePush release metadata under the given Deployment",
+        "operationId": "codepush_patchRelease",
+        "parameters": [
+          {
+            "$ref": "#/parameters/path_deployment_name"
+          },
+          {
+            "$ref": "#/parameters/path_release_label"
+          },
+          {
+            "name": "release",
+            "description": "Release modification. All fields are optional and only provided fields will get updated.",
+            "in": "body",
+            "required": true,
+            "schema": {
+              "$ref": "#/definitions/LiveUpdateReleaseModification"
+            }
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "204": {
+            "description": "Success"
+          },
+          "default": {
+            "description": "Error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "codepush"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}/releases": {
+      "delete": {
+        "description": "Clears a Deployment of releases",
+        "operationId": "codepush_deleteReleases",
+        "parameters": [
+          {
+            "$ref": "#/parameters/path_deployment_name"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "204": {
+            "description": "Success"
+          },
+          "default": {
+            "description": "Error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "codepush"
+        ]
+      },
+      "get": {
+        "description": "Gets the history of releases on a Deployment",
+        "operationId": "codepush_getReleases",
+        "parameters": [
+          {
+            "$ref": "#/parameters/path_deployment_name"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "type": "array",
+              "items": {
+                "$ref": "#/definitions/LiveUpdateRelease"
+              }
+            }
+          },
+          "default": {
+            "description": "Error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "codepush"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}/metrics": {
+      "get": {
+        "description": "Gets all releases metrics for specified Deployment",
+        "operationId": "codepush_getDeploymentMetrics",
+        "parameters": [
+          {
+            "$ref": "#/parameters/path_deployment_name"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "type": "array",
+              "items": {
+                "$ref": "#/definitions/LiveUpdateReleaseMetric"
+              }
+            }
+          },
+          "default": {
+            "description": "Error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
           }
         },
-        "operationId": "account_updateDistributionGroup",
         "security": [
           {
             "APIToken": []
           }
         ],
         "tags": [
-          "account"
+          "codepush"
         ]
-      },
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}": {
       "delete": {
-        "description": "Deletes a distribution group",
+        "description": "Deletes a CodePush Deployment (e.g. 'Staging') for the given app",
+        "operationId": "codepush_deleteDeployment",
         "parameters": [
           {
-            "$ref": "#/parameters/app_name"
+            "$ref": "#/parameters/path_deployment_name"
           },
           {
             "$ref": "#/parameters/owner_name"
           },
           {
-            "name": "distribution_group_name",
-            "type": "string",
-            "in": "path",
-            "description": "The name of the distribution group",
-            "required": true
+            "$ref": "#/parameters/app_name"
           }
         ],
         "responses": {
           "204": {
             "description": "Success"
           },
-          "400": {
-            "description": "BadRequest",
-            "schema": {
-              "$ref": "#/definitions/ErrorResponse"
-            }
-          },
-          "403": {
-            "description": "Forbidden",
-            "schema": {
-              "$ref": "#/definitions/ErrorResponse"
-            }
-          },
-          "404": {
-            "description": "NotFound",
+          "default": {
+            "description": "Error",
             "schema": {
-              "$ref": "#/definitions/ErrorResponse"
+              "$ref": "#/definitions/Failure"
             }
           }
         },
-        "operationId": "account_deleteDistributionGroup",
         "security": [
           {
             "APIToken": []
           }
         ],
         "tags": [
-          "account"
+          "codepush"
         ]
-      }
-    },
-    "/v0.1/apps/{owner_name}/{app_name}/distribution_groups": {
+      },
       "get": {
-        "description": "Returns a list of distribution groups in the app specified",
+        "description": "Gets a CodePush Deployment (e.g. 'Staging') for the given app",
+        "operationId": "codepush_getDeployment",
         "parameters": [
           {
+            "$ref": "#/parameters/path_deployment_name"
+          },
+          {
             "$ref": "#/parameters/owner_name"
           },
           {
@@ -4454,111 +4597,130 @@
           "200": {
             "description": "Success",
             "schema": {
-              "type": "array",
-              "items": {
-                "$ref": "#/definitions/DistributionGroupResponse"
-              }
-            }
-          },
-          "403": {
-            "description": "Forbidden",
-            "schema": {
-              "$ref": "#/definitions/ErrorResponse"
+              "$ref": "#/definitions/Deployment"
             }
           },
-          "404": {
-            "description": "NotFound",
+          "default": {
+            "description": "Error",
             "schema": {
-              "$ref": "#/definitions/ErrorResponse"
+              "$ref": "#/definitions/Failure"
             }
           }
         },
-        "operationId": "account_getDistributionGroups",
         "security": [
           {
             "APIToken": []
           }
         ],
         "tags": [
-          "account"
+          "codepush"
         ]
       },
-      "post": {
-        "description": "Creates a new distribution group and returns it to the caller",
+      "patch": {
+        "description": "Modifies a CodePush Deployment (e.g. 'Staging') for the given app",
+        "operationId": "codepush_patchDeployment",
         "parameters": [
           {
-            "$ref": "#/parameters/owner_name"
-          },
-          {
-            "$ref": "#/parameters/app_name"
+            "$ref": "#/parameters/path_deployment_name"
           },
           {
-            "name": "distribution_group",
+            "name": "deployment",
+            "description": "Deployment modification. All fields are optional and only provided fields will get updated.",
             "in": "body",
-            "description": "The data for the distribution group",
             "required": true,
             "schema": {
-              "$ref": "#/definitions/DistributionGroupRequest"
+              "$ref": "#/definitions/DeploymentModification"
             }
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
           }
         ],
         "responses": {
-          "201": {
-            "description": "Success",
-            "schema": {
-              "$ref": "#/definitions/DistributionGroupResponse"
-            }
+          "204": {
+            "description": "Success"
           },
-          "400": {
-            "description": "BadRequest",
+          "default": {
+            "description": "Error",
             "schema": {
-              "$ref": "#/definitions/ErrorResponse"
+              "$ref": "#/definitions/Failure"
             }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "codepush"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/deployments/by_key/{deployment_key}/report_status/download": {
+      "post": {
+        "description": "Report download of specified release",
+        "operationId": "codepush_postDownloadStatusMetric",
+        "parameters": [
+          {
+            "$ref": "#/parameters/path_deployment_key"
           },
-          "403": {
-            "description": "Forbidden",
+          {
+            "name": "release_metadata",
+            "description": "Deployment status metric properties",
+            "in": "body",
+            "required": true,
             "schema": {
-              "$ref": "#/definitions/ErrorResponse"
+              "$ref": "#/definitions/LiveUpdateStatusMetricMetadata"
             }
           },
-          "404": {
-            "description": "NotFound",
-            "schema": {
-              "$ref": "#/definitions/ErrorResponse"
-            }
+          {
+            "$ref": "#/parameters/owner_name"
           },
-          "409": {
-            "description": "Conflict",
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success"
+          },
+          "default": {
+            "description": "Error",
             "schema": {
-              "$ref": "#/definitions/ErrorResponse"
+              "$ref": "#/definitions/Failure"
             }
           }
         },
-        "operationId": "account_createDistributionGroup",
         "security": [
           {
             "APIToken": []
           }
         ],
         "tags": [
-          "account"
+          "codepush"
         ]
       }
     },
-    "/v0.1/apps/{owner_name}/{app_name}/device_selection": {
+    "/v0.1/apps/{owner_name}/{app_name}/deployments/by_key/{deployment_key}/report_status/deploy": {
       "post": {
-        "description": "Creates a short ID for a list of devices",
-        "operationId": "test_createDeviceSelection",
+        "description": "Report Deployment status metric",
+        "operationId": "codepush_postDeployStatusMetric",
         "parameters": [
           {
-            "name": "devices",
-            "type": "array",
-            "items": {
-              "type": "string"
-            },
-            "in": "formData",
-            "description": "List of device IDs",
-            "required": true
+            "$ref": "#/parameters/path_deployment_key"
+          },
+          {
+            "name": "release_metadata",
+            "description": "Deployment status metric properties",
+            "in": "body",
+            "required": true,
+            "schema": {
+              "$ref": "#/definitions/LiveUpdateStatusMetricMetadata"
+            }
           },
           {
             "$ref": "#/parameters/owner_name"
@@ -4569,15 +4731,12 @@
         ],
         "responses": {
           "200": {
-            "description": "OK",
-            "schema": {
-              "$ref": "#/definitions/DeviceSelection"
-            }
+            "description": "Success"
           },
-          "400": {
-            "description": "Invalid list of device IDs",
+          "default": {
+            "description": "Error",
             "schema": {
-              "$ref": "#/definitions/TestCloudErrorDetails"
+              "$ref": "#/definitions/Failure"
             }
           }
         },
@@ -4587,24 +4746,16 @@
           }
         ],
         "tags": [
-          "test"
+          "codepush"
         ]
       }
     },
-    "/v0.1/apps/{owner_name}/{app_name}/device_configurations": {
+    "/v0.1/apps/{owner_name}/{app_name}/deployments": {
       "get": {
-        "description": "Returns a list of available devices",
-        "operationId": "test_getDeviceConfigurations",
+        "description": "Gets a list of CodePush deployments (e.g. 'Staging', 'Production') for the given app",
+        "operationId": "codepush_getDeployments",
         "parameters": [
           {
-            "name": "app_upload_id",
-            "type": "string",
-            "format": "uuid",
-            "in": "query",
-            "description": "The ID of the test run",
-            "required": false
-          },
-          {
             "$ref": "#/parameters/owner_name"
           },
           {
@@ -4613,13 +4764,19 @@
         ],
         "responses": {
           "200": {
-            "description": "OK",
+            "description": "Success",
             "schema": {
               "type": "array",
               "items": {
-                "$ref": "#/definitions/DeviceConfiguration"
+                "$ref": "#/definitions/Deployment"
               }
             }
+          },
+          "default": {
+            "description": "Error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
           }
         },
         "security": [
@@ -4628,7 +4785,50 @@
           }
         ],
         "tags": [
-          "test"
+          "codepush"
+        ]
+      },
+      "post": {
+        "description": "Creates a CodePush Deployment (e.g. 'Staging') for the given app",
+        "operationId": "codepush_postDeployments",
+        "parameters": [
+          {
+            "name": "deployment",
+            "description": "Deployment to be created",
+            "in": "body",
+            "required": true,
+            "schema": {
+              "$ref": "#/definitions/Deployment"
+            }
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "201": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/Deployment"
+            }
+          },
+          "default": {
+            "description": "Error",
+            "schema": {
+              "$ref": "#/definitions/Failure"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "codepush"
         ]
       }
     },
@@ -5057,10 +5257,58 @@
         ],
         "responses": {
           "200": {
-            "description": "Success"
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/BuildLog"
+            }
+          }
+        },
+        "operationId": "build_getBuildLogs",
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "build"
+        ]
+      }
+    },
+    "/v0.1/apps/{owner_name}/{app_name}/builds/{build_id}/downloads/{download_type}": {
+      "get": {
+        "description": "Gets the download URI",
+        "parameters": [
+          {
+            "$ref": "#/parameters/build_id"
+          },
+          {
+            "name": "download_type",
+            "type": "string",
+            "enum": [
+              "build",
+              "symbols",
+              "logs"
+            ],
+            "in": "path",
+            "description": "The download type",
+            "required": true
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/DownloadContainer"
+            }
           }
         },
-        "operationId": "build_getBuildLogs",
+        "operationId": "build_getBuildDownload",
         "security": [
           {
             "APIToken": []
@@ -5071,24 +5319,21 @@
         ]
       }
     },
-    "/v0.1/apps/{owner_name}/{app_name}/builds/{build_id}/downloads/{download_type}": {
-      "get": {
-        "description": "Gets the download URI",
+    "/v0.1/apps/{owner_name}/{app_name}/builds/{build_id}/distribute": {
+      "post": {
+        "description": "Distribute a build",
         "parameters": [
           {
             "$ref": "#/parameters/build_id"
           },
           {
-            "name": "download_type",
-            "type": "string",
-            "enum": [
-              "build",
-              "symbols",
-              "logs"
-            ],
-            "in": "path",
-            "description": "The download type",
-            "required": true
+            "name": "distribute_info",
+            "in": "body",
+            "description": "The distribution details",
+            "required": true,
+            "schema": {
+              "$ref": "#/definitions/DistributionRequest"
+            }
           },
           {
             "$ref": "#/parameters/owner_name"
@@ -5099,10 +5344,13 @@
         ],
         "responses": {
           "200": {
-            "description": "Success"
+            "description": "Success",
+            "schema": {
+              "$ref": "#/definitions/DistributionResponse"
+            }
           }
         },
-        "operationId": "build_getBuildDownload",
+        "operationId": "build_postDistributeRequest",
         "security": [
           {
             "APIToken": []
@@ -6188,6 +6436,42 @@
         ]
       }
     },
+    "/v0.1/apps/{owner_name}/{app_name}/analytics/events/{event_name}": {
+      "delete": {
+        "operationId": "Analytics_EventsDelete",
+        "description": "Delete the set of Events with the specified event names",
+        "parameters": [
+          {
+            "$ref": "#/parameters/EventParameter"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Event successfully deleted"
+          },
+          "default": {
+            "description": "Error code with reason",
+            "schema": {
+              "$ref": "#/definitions/Error"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "analytics"
+        ]
+      }
+    },
     "/v0.1/apps/{owner_name}/{app_name}/analytics/events": {
       "get": {
         "operationId": "Analytics_Events",
@@ -6248,6 +6532,42 @@
         ]
       }
     },
+    "/v0.1/apps/{owner_name}/{app_name}/analytics/event_logs/{event_name}": {
+      "delete": {
+        "operationId": "Analytics_EventsDeleteLogs",
+        "description": "Delete the set of Events with the specified event names",
+        "parameters": [
+          {
+            "$ref": "#/parameters/EventParameter"
+          },
+          {
+            "$ref": "#/parameters/owner_name"
+          },
+          {
+            "$ref": "#/parameters/app_name"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Event successfully deleted"
+          },
+          "default": {
+            "description": "Error code with reason",
+            "schema": {
+              "$ref": "#/definitions/Error"
+            }
+          }
+        },
+        "security": [
+          {
+            "APIToken": []
+          }
+        ],
+        "tags": [
+          "analytics"
+        ]
+      }
+    },
     "/v0.1/apps/{owner_name}/{app_name}/analytics/crashfree_device_percentages": {
       "get": {
         "operationId": "Analytics_CrashFreeDevicePercentages",
@@ -6817,7 +7137,7 @@
             }
           }
         },
-        "operationId": "account_getApps",
+        "operationId": "account_getMemberApps",
         "security": [
           {
             "APIToken": []
@@ -7117,16 +7437,18 @@
           "type": "string",
           "enum": [
             "iOS",
-            "Android"
+            "Android",
+            "Windows"
           ]
         },
         "platform": {
           "description": "The platform of the app",
           "type": "string",
           "enum": [
-            "Objective-C-Swift",
             "Java",
+            "Objective-C-Swift",
             "React-Native",
+            "UWP",
             "Xamarin"
           ]
         }
@@ -7224,15 +7546,15 @@
         "admin_role"
       ]
     },
-    "OrgPatchRequest": {
+    "OrganizationPatchRequest": {
       "properties": {
-        "description": {
-          "description": "The organization's description",
-          "type": "string"
-        },
         "display_name": {
           "description": "The full (friendly) name of the organization.",
           "type": "string"
+        },
+        "name": {
+          "description": "The name of the organization used in URLs",
+          "type": "string"
         }
       }
     },
@@ -7255,6 +7577,48 @@
         "name"
       ]
     },
+    "OrganizationUserPatchRequest": {
+      "properties": {
+        "role": {
+          "description": "The user's role in the organizatiion",
+          "type": "string",
+          "enum": [
+            "admin",
+            "collaborator"
+          ]
+        }
+      }
+    },
+    "UserInvitationPermissionsUpdateRequest": {
+      "properties": {
+        "permissions": {
+          "description": "The permissions the user has for the app in the invitation",
+          "type": "array",
+          "items": {
+            "type": "string",
+            "enum": [
+              "manager",
+              "developer",
+              "viewer"
+            ]
+          }
+        }
+      },
+      "required": [
+        "permissions"
+      ]
+    },
+    "UserEmailRequest": {
+      "properties": {
+        "user_email": {
+          "description": "The user's email address'",
+          "type": "string"
+        }
+      },
+      "required": [
+        "user_email"
+      ]
+    },
     "UserUpdateRequest": {
       "properties": {
         "display_name": {
@@ -7352,7 +7716,8 @@
           "type": "string",
           "enum": [
             "iOS",
-            "Android"
+            "Android",
+            "Windows"
           ]
         },
         "owner": {
@@ -7362,11 +7727,20 @@
           "description": "The platform of the app",
           "type": "string",
           "enum": [
-            "Objective-C-Swift",
             "Java",
+            "Objective-C-Swift",
             "React-Native",
+            "UWP",
             "Xamarin"
           ]
+        },
+        "origin": {
+          "description": "The origin of this app can only be mobile-center or hockeyapp for now",
+          "type": "string",
+          "enum": [
+            "mobile-center",
+            "hockeyapp"
+          ]
         }
       },
       "required": [
@@ -7376,7 +7750,8 @@
         "name",
         "os",
         "owner",
-        "platform"
+        "platform",
+        "origin"
       ]
     },
     "DistributionGroupResponse": {
@@ -7388,11 +7763,20 @@
         "name": {
           "description": "The name of the distribution group used in URLs",
           "type": "string"
+        },
+        "origin": {
+          "description": "Indicates the origin source of the distribution group, it can be mobile-center or hockeyapp for now.",
+          "type": "string",
+          "enum": [
+            "mobile-center",
+            "hockeyapp"
+          ]
         }
       },
       "required": [
         "id",
-        "name"
+        "name",
+        "origin"
       ]
     },
     "DistributionGroupUserDeleteResponse": {
@@ -7563,8 +7947,8 @@
     },
     "OrganizationResponse": {
       "properties": {
-        "id": {
-          "description": "The unique id (UUID) of the organization",
+        "collaborator_role": {
+          "description": "The role the current user has within the organization",
           "type": "string"
         },
         "display_name": {
@@ -7577,7 +7961,7 @@
         }
       },
       "required": [
-        "id",
+        "collaborator_role",
         "display_name",
         "name"
       ]
@@ -7585,22 +7969,32 @@
     "OrganizationUserResponse": {
       "properties": {
         "email": {
-          "type": "string",
-          "description": "The email address of the user"
+          "description": "The email address of the user",
+          "type": "string"
         },
         "display_name": {
-          "type": "string",
-          "description": "The full name of the user. Might for example be first and last name"
+          "description": "The full name of the user. Might for example be first and last name",
+          "type": "string"
+        },
+        "joined_at": {
+          "description": "The date when the user joined the organization",
+          "type": "string"
         },
         "name": {
-          "type": "string",
-          "description": "The unique name that is used to identify the user."
+          "description": "The unique name that is used to identify the user.",
+          "type": "string"
+        },
+        "role": {
+          "description": "The role the user has within the organization",
+          "type": "string"
         }
       },
       "required": [
         "display_name",
         "email",
-        "name"
+        "joined_at",
+        "name",
+        "role"
       ]
     },
     "UserNameAvailabilityResponse": {
@@ -7699,6 +8093,9 @@
         "name": {
           "description": "The repository name",
           "type": "string"
+        },
+        "clone_url": {
+          "description": "URL used to clone the repository"
         }
       }
     },
@@ -7709,6 +8106,18 @@
         "$ref": "#/definitions/SourceRepository"
       }
     },
+    "DownloadContainer": {
+      "description": "A download reference",
+      "properties": {
+        "uri": {
+          "type": "string",
+          "description": "Download URI"
+        }
+      },
+      "required": [
+        "uri"
+      ]
+    },
     "WebSocketContainer": {
       "description": "A websocket reference",
       "properties": {
@@ -8252,6 +8661,43 @@
         }
       }
     },
+    "BuildLog": {
+      "properties": {
+        "value": {
+          "type": "array",
+          "items": {
+            "type": "string"
+          }
+        }
+      }
+    },
+    "DistributionRequest": {
+      "properties": {
+        "distributionGroupId": {
+          "type": "string",
+          "description": "The distribution group ID"
+        },
+        "releaseNotes": {
+          "type": "string",
+          "description": "The release notes"
+        }
+      },
+      "required": [
+        "distributionGroupId"
+      ]
+    },
+    "DistributionResponse": {
+      "properties": {
+        "status": {
+          "type": "string",
+          "description": "Status of the Request"
+        },
+        "upload_id": {
+          "type": "string",
+          "description": "A unique ID of the upload"
+        }
+      }
+    },
     "ValidationErrorResponse": {
       "required": [
         "id",
@@ -8275,7 +8721,7 @@
       "properties": {
         "id": {
           "description": "ID identifying this unique release.",
-          "type": "string"
+          "type": "number"
         },
         "version": {
           "description": "The release's version.<br>\nFor iOS: CFBundleVersion from info.plist.<br>\nFor Android: android:versionCode from AppManifest.xml.\n",
@@ -8303,7 +8749,7 @@
       "properties": {
         "id": {
           "description": "ID identifying this unique release.",
-          "type": "string"
+          "type": "number"
         },
         "status": {
           "description": "OBSOLETE. Will be removed in next version. The availability concept is now replaced with distributed. Any 'available' release will be associated with the default distribution group of an app.</br>   \nThe release state.<br> \n<b>available</b>: The uploaded release has been distributed.<br>\n<b>unavailable</b>: The uploaded release is not visible to the user. <br>\n",
@@ -8341,6 +8787,10 @@
           "description": "The release's minimum required operating system.",
           "type": "string"
         },
+        "android_min_api_level": {
+          "description": "The release's minimum required Android API level.",
+          "type": "string"
+        },
         "fingerprint": {
           "description": "MD5 checksum of the release binary.",
           "type": "string"
@@ -8819,48 +9269,34 @@
         }
       }
     },
-    "Stacktrace": {
-      "description": "a stacktrace in a processed and prettyfied way",
+    "Exception": {
+      "description": "a exception",
       "properties": {
-        "title": {
-          "type": "string"
-        },
         "reason": {
-          "type": "string"
-        },
-        "threads": {
-          "type": "array",
-          "items": {
-            "$ref": "#/definitions/Thread"
-          }
+          "type": "string",
+          "description": "Reason of the exception"
         },
-        "exception": {
-          "$ref": "#/definitions/Exception"
-        }
-      }
-    },
-    "Thread": {
-      "description": "a thread representation",
-      "properties": {
-        "title": {
-          "description": "name of the thread",
-          "type": "string"
+        "type": {
+          "type": "string",
+          "description": "Type of the exception (NSSomethingException, NullPointerException)"
         },
         "frames": {
-          "description": "frames of that thread",
+          "description": "frames of the excetpion",
           "type": "array",
           "items": {
             "$ref": "#/definitions/StackFrame"
           }
         },
-        "exception": {
-          "description": "potential additional exception happened in that thread (Last Exception Backtrace)",
-          "$ref": "#/definitions/Exception"
-        },
         "relevant": {
-          "description": "Shows if a thread is relevant or not. Is false if all frames are non relevant, otherwise true",
+          "description": "relevant exception (crashed)",
           "type": "boolean"
         },
+        "inner_exceptions": {
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/Exception"
+          }
+        },
         "platform": {
           "description": "SDK/Platform this thread is beeing generated from",
           "type": "string",
@@ -8874,38 +9310,51 @@
         }
       },
       "required": [
-        "title",
         "frames"
       ]
     },
-    "Exception": {
-      "description": "a exception",
+    "Stacktrace": {
+      "description": "a stacktrace in a processed and prettyfied way",
       "properties": {
+        "title": {
+          "type": "string"
+        },
         "reason": {
-          "type": "string",
-          "description": "Reason of the exception"
+          "type": "string"
         },
-        "type": {
-          "type": "string",
-          "description": "Type of the exception (NSSomethingException, NullPointerException)"
+        "threads": {
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/Thread"
+          }
+        },
+        "exception": {
+          "$ref": "#/definitions/Exception"
+        }
+      }
+    },
+    "Thread": {
+      "description": "a thread representation",
+      "properties": {
+        "title": {
+          "description": "name of the thread",
+          "type": "string"
         },
         "frames": {
-          "description": "frames of the excetpion",
+          "description": "frames of that thread",
           "type": "array",
           "items": {
             "$ref": "#/definitions/StackFrame"
           }
         },
+        "exception": {
+          "description": "potential additional exception happened in that thread (Last Exception Backtrace)",
+          "$ref": "#/definitions/Exception"
+        },
         "relevant": {
-          "description": "relevant exception (crashed)",
+          "description": "Shows if a thread is relevant or not. Is false if all frames are non relevant, otherwise true",
           "type": "boolean"
         },
-        "inner_exceptions": {
-          "type": "array",
-          "items": {
-            "$ref": "#/definitions/Exception"
-          }
-        },
         "platform": {
           "description": "SDK/Platform this thread is beeing generated from",
           "type": "string",
@@ -8919,6 +9368,7 @@
         }
       },
       "required": [
+        "title",
         "frames"
       ]
     },
@@ -9048,6 +9498,14 @@
         "method_params": {
           "description": "parameters of the frames method",
           "type": "string"
+        },
+        "exception_type": {
+          "type": "string",
+          "description": "Exception type."
+        },
+        "os_exception_type": {
+          "type": "string",
+          "description": "OS exception type. (aka. SIGNAL)"
         }
       }
     },
@@ -9191,6 +9649,133 @@
         }
       }
     },
+    "MissingSymbol": {
+      "description": "missing symbol",
+      "required": [
+        "symbol_id",
+        "name",
+        "status"
+      ],
+      "properties": {
+        "symbol_id": {
+          "type": "string",
+          "description": "symbol id"
+        },
+        "name": {
+          "type": "string",
+          "description": "symbol name"
+        },
+        "platform": {
+          "type": "string",
+          "description": "symbol plarform"
+        },
+        "status": {
+          "type": "string",
+          "enum": [
+            "missing",
+            "ignored",
+            "available"
+          ],
+          "description": "symbol status"
+        }
+      }
+    },
+    "MissingSymbols": {
+      "description": "A list of missing symbols",
+      "type": "array",
+      "items": {
+        "$ref": "#/definitions/MissingSymbol"
+      }
+    },
+    "MissingSymbolCrashGroup": {
+      "description": "missing symbol crash group object",
+      "required": [
+        "symbol_group_id",
+        "app_id",
+        "app_ver",
+        "app_build",
+        "last_modified",
+        "missing_symbols",
+        "status"
+      ],
+      "properties": {
+        "symbol_group_id": {
+          "type": "string",
+          "description": "id of the symbol group"
+        },
+        "crash_count": {
+          "type": "integer",
+          "description": "number of crashes that belong to this group"
+        },
+        "app_id": {
+          "type": "string",
+          "description": "application id"
+        },
+        "app_ver": {
+          "type": "string",
+          "description": "application version"
+        },
+        "app_build": {
+          "type": "string",
+          "description": "application build"
+        },
+        "last_modified": {
+          "type": "string",
+          "format": "date-time",
+          "description": "last update date for the group"
+        },
+        "missing_symbols": {
+          "$ref": "#/definitions/MissingSymbols"
+        },
+        "status": {
+          "type": "string",
+          "enum": [
+            "active",
+            "pending",
+            "closed"
+          ],
+          "description": "group status"
+        }
+      }
+    },
+    "MissingSymbolCrashGroups": {
+      "description": "A list of crash groups formed by missing symbols combination",
+      "type": "array",
+      "items": {
+        "$ref": "#/definitions/MissingSymbolCrashGroup"
+      }
+    },
+    "MissingSymbolCrashGroupsResponse": {
+      "description": "grouped by missing symbols crashes response object",
+      "required": [
+        "total_crash_count",
+        "groups"
+      ],
+      "properties": {
+        "total_crash_count": {
+          "description": "total number of cashes for all the groups",
+          "type": "integer"
+        },
+        "groups": {
+          "$ref": "#/definitions/MissingSymbolCrashGroups"
+        }
+      }
+    },
+    "FailureResponse": {
+      "description": "failure response object",
+      "required": [
+        "code",
+        "message"
+      ],
+      "properties": {
+        "code": {
+          "type": "string"
+        },
+        "message": {
+          "type": "string"
+        }
+      }
+    },
     "CrashCounts": {
       "type": "object",
       "properties": {
@@ -9978,90 +10563,265 @@
         },
         "carrier_name": {
           "type": "string",
-          "description": "Carrier name (for mobile devices).\n"
+          "description": "Carrier name (for mobile devices).\n"
+        },
+        "carrier_code": {
+          "type": "string",
+          "description": "Carrier country code (for mobile devices).\n"
+        },
+        "carrier_country": {
+          "type": "string",
+          "description": "Carrier country.\n"
+        },
+        "app_build": {
+          "type": "string",
+          "description": "The app's build number, e.g. 42.\n"
+        },
+        "app_namespace": {
+          "type": "string",
+          "description": "The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.\n"
+        }
+      },
+      "required": [
+        "sdk_name",
+        "sdk_version",
+        "model",
+        "oem_name",
+        "os_name",
+        "os_version",
+        "locale",
+        "time_zone_offset",
+        "screen_size",
+        "app_version",
+        "app_build"
+      ]
+    },
+    "EventProperties": {
+      "description": "Event properties during the time range",
+      "type": "object",
+      "properties": {
+        "event_properties": {
+          "type": "array",
+          "items": {
+            "description": "The event property",
+            "type": "string",
+            "format": "string"
+          }
+        }
+      }
+    },
+    "EventPropertyValues": {
+      "description": "Event property value counts during the time range in descending order",
+      "type": "object",
+      "properties": {
+        "total": {
+          "description": "The total property value counts",
+          "type": "integer",
+          "format": "int64"
+        },
+        "values": {
+          "description": "The event property values",
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/EventPropertyValue"
+          }
+        }
+      }
+    },
+    "EventPropertyValue": {
+      "description": "An event property value with counts",
+      "type": "object",
+      "properties": {
+        "name": {
+          "description": "The event property value name",
+          "type": "string"
+        },
+        "count": {
+          "description": "The count of the the event property value",
+          "type": "integer",
+          "format": "int64"
+        },
+        "previous_count": {
+          "description": "The count of previous time range of the event property value",
+          "type": "integer",
+          "format": "int64"
+        }
+      }
+    },
+    "NotificationsListResult": {
+      "description": "List of notifications",
+      "type": "object",
+      "properties": {
+        "values": {
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/NotificationDetailsResult"
+          }
+        },
+        "total": {
+          "description": "the total count of notifications",
+          "type": "integer",
+          "format": "int64"
+        },
+        "nextLink": {
+          "type": "string"
+        }
+      }
+    },
+    "NotificationDetailsResult": {
+      "description": "Notification statistics",
+      "type": "object",
+      "properties": {
+        "notification_id": {
+          "description": "Notification id.",
+          "type": "string"
+        },
+        "pns_send_failure": {
+          "description": "Number of the notifications failed to send to the push provider.",
+          "type": "integer",
+          "format": "long"
+        },
+        "pns_send_success": {
+          "description": "Number of the notifications successfully sent to push the provider.",
+          "type": "integer",
+          "format": "long"
+        },
+        "state": {
+          "type": "string",
+          "description": "State of the notification.",
+          "enum": [
+            "Cancelled",
+            "Completed",
+            "Enqueued",
+            "Processing",
+            "Unknown"
+          ]
+        }
+      },
+      "allOf": [
+        {
+          "$ref": "#/definitions/NotificationResult"
+        }
+      ]
+    },
+    "NotificationResult": {
+      "description": "Notification result",
+      "properties": {
+        "send_time": {
+          "description": "Notification send time",
+          "type": "string",
+          "format": "date-time"
+        }
+      },
+      "allOf": [
+        {
+          "$ref": "#/definitions/NotificationDefinition"
+        }
+      ]
+    },
+    "NotificationDefinition": {
+      "description": "Notification definition object",
+      "type": "object",
+      "properties": {
+        "name": {
+          "description": "Notification name",
+          "type": "string",
+          "maxLength": 64
         },
-        "carrier_code": {
+        "title": {
+          "description": "Notification title",
           "type": "string",
-          "description": "Carrier country code (for mobile devices).\n"
+          "maxLength": 128
         },
-        "carrier_country": {
+        "body": {
+          "description": "Notification body",
           "type": "string",
-          "description": "Carrier country.\n"
+          "maxLength": 4000
         },
-        "app_build": {
+        "platform_type": {
+          "description": "Notification platform type",
           "type": "string",
-          "description": "The app's build number, e.g. 42.\n"
+          "enum": [
+            "apns",
+            "gcm"
+          ]
         },
-        "app_namespace": {
-          "type": "string",
-          "description": "The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.\n"
+        "notification_target": {
+          "$ref": "#/definitions/NotificationTarget"
+        },
+        "custom_data": {
+          "description": "Notification custom data(priority, expiration, etc.)",
+          "type": "object",
+          "additionalProperties": {
+            "type": "string"
+          }
         }
       },
       "required": [
-        "sdk_name",
-        "sdk_version",
-        "model",
-        "oem_name",
-        "os_name",
-        "os_version",
-        "locale",
-        "time_zone_offset",
-        "screen_size",
-        "app_version",
-        "app_build"
+        "name",
+        "body",
+        "platform_type"
       ]
     },
-    "EventProperties": {
-      "description": "Event properties during the time range",
-      "type": "object",
+    "NotificationSendSucceededResult": {
+      "description": "Notification send succeeded.",
       "properties": {
-        "event_properties": {
-          "type": "array",
-          "items": {
-            "description": "The event property",
-            "type": "string",
-            "format": "string"
-          }
+        "notification_id": {
+          "type": "string",
+          "description": "The unique notification identifier."
         }
       }
     },
-    "EventPropertyValues": {
-      "description": "Event property value counts during the time range in descending order",
+    "NotificationTarget": {
+      "description": "Generic notification target.",
       "type": "object",
+      "discriminator": "type",
       "properties": {
-        "total": {
-          "description": "The total property value counts",
-          "type": "integer",
-          "format": "int64"
-        },
-        "values": {
-          "description": "The event property values",
-          "type": "array",
-          "items": {
-            "$ref": "#/definitions/EventPropertyValue"
-          }
+        "type": {
+          "type": "string"
         }
-      }
+      },
+      "required": [
+        "type"
+      ]
     },
-    "EventPropertyValue": {
-      "description": "An event property value with counts",
+    "NotificationConfig": {
+      "description": "Generic notification configuration.",
       "type": "object",
+      "discriminator": "type",
       "properties": {
-        "name": {
-          "description": "The event property value name",
+        "type": {
+          "type": "string"
+        }
+      },
+      "required": [
+        "type"
+      ]
+    },
+    "NotificationConfigResult": {
+      "description": "Generic notification configuration result.",
+      "discriminator": "type",
+      "properties": {
+        "type": {
           "type": "string"
         },
-        "count": {
-          "description": "The count of the the event property value",
-          "type": "integer",
-          "format": "int64"
-        },
-        "previous_count": {
-          "description": "The count of previous time range of the event property value",
-          "type": "integer",
-          "format": "int64"
+        "status": {
+          "type": "string",
+          "description": "Configuration state.",
+          "enum": [
+            "configured",
+            "configuring",
+            "expired",
+            "not_configured",
+            "deleted",
+            "deleting"
+          ]
         }
-      }
+      },
+      "required": [
+        "type",
+        "status"
+      ]
     },
     "DeviceConfiguration": {
       "properties": {
@@ -10992,6 +11752,149 @@
           }
         }
       }
+    },
+    "Deployment": {
+      "required": [
+        "name"
+      ],
+      "type": "object",
+      "properties": {
+        "key": {
+          "type": "string"
+        },
+        "name": {
+          "type": "string"
+        },
+        "latest_release": {
+          "$ref": "#/definitions/LiveUpdateRelease"
+        }
+      }
+    },
+    "DeploymentModification": {
+      "type": "object",
+      "properties": {
+        "name": {
+          "type": "string"
+        }
+      }
+    },
+    "LiveUpdateRelease": {
+      "properties": {
+        "target_binary_range": {
+          "type": "string"
+        },
+        "blob_url": {
+          "type": "string"
+        },
+        "description": {
+          "type": "string"
+        },
+        "is_disabled": {
+          "type": "boolean"
+        },
+        "is_mandatory": {
+          "type": "boolean"
+        },
+        "label": {
+          "type": "string"
+        },
+        "original_deployment": {
+          "type": "string",
+          "description": "Set on 'Promote'"
+        },
+        "original_label": {
+          "type": "string",
+          "description": "Set on 'Promote' and 'Rollback'"
+        },
+        "hash": {
+          "type": "string"
+        },
+        "released_by": {
+          "type": "string"
+        },
+        "release_method": {
+          "type": "string",
+          "enum": [
+            "Upload",
+            "Promote",
+            "Rollback"
+          ],
+          "description": "The release method is unknown if unspecified"
+        },
+        "rollout": {
+          "type": "integer"
+        },
+        "size": {
+          "type": "number"
+        },
+        "upload_time": {
+          "type": "integer"
+        }
+      }
+    },
+    "LiveUpdateReleaseModification": {
+      "properties": {
+        "target_binary_range": {
+          "type": "string"
+        },
+        "description": {
+          "type": "string"
+        },
+        "is_disabled": {
+          "type": "boolean"
+        },
+        "is_mandatory": {
+          "type": "boolean"
+        },
+        "rollout": {
+          "type": "integer"
+        }
+      }
+    },
+    "LiveUpdateReleaseMetric": {
+      "required": [
+        "label",
+        "active"
+      ],
+      "properties": {
+        "label": {
+          "type": "string"
+        },
+        "active": {
+          "type": "integer"
+        },
+        "downloaded": {
+          "type": "integer"
+        },
+        "failed": {
+          "type": "integer"
+        },
+        "installed": {
+          "type": "integer"
+        }
+      }
+    },
+    "LiveUpdateStatusMetricMetadata": {
+      "properties": {
+        "label": {
+          "type": "string"
+        },
+        "app_version": {
+          "type": "string"
+        },
+        "previous_deployment_key": {
+          "type": "string"
+        },
+        "previous_label_or_app_version": {
+          "type": "string"
+        },
+        "status": {
+          "type": "string"
+        },
+        "client_unique_id": {
+          "type": "string"
+        }
+      }
     }
   },
   "parameters": {
@@ -11061,6 +11964,14 @@
       "required": true,
       "x-ms-parameter-location": "method"
     },
+    "user_name": {
+      "name": "user_name",
+      "type": "string",
+      "in": "path",
+      "description": "The slug name of the user",
+      "required": true,
+      "x-ms-parameter-location": "method"
+    },
     "build_id": {
       "name": "build_id",
       "in": "path",
@@ -11244,6 +12155,30 @@
       "description": "A freetext search that matches in error, error types, error stack_traces and error user",
       "x-ms-parameter-location": "method"
     },
+    "path_symbol_group_id": {
+      "name": "symbol_group_id",
+      "in": "path",
+      "required": true,
+      "description": "missing symbol crash group id",
+      "type": "string",
+      "x-ms-parameter-location": "method"
+    },
+    "query_top": {
+      "name": "top",
+      "in": "query",
+      "required": true,
+      "description": "top N elements",
+      "type": "integer",
+      "x-ms-parameter-location": "method"
+    },
+    "query_filter": {
+      "name": "filter",
+      "in": "query",
+      "required": false,
+      "description": "query filter",
+      "type": "string",
+      "x-ms-parameter-location": "method"
+    },
     "StartParameter": {
       "name": "start",
       "in": "query",
@@ -11421,6 +12356,59 @@
       "type": "integer",
       "format": "int64",
       "x-ms-parameter-location": "method"
+    },
+    "NotificationParameter": {
+      "name": "properties",
+      "in": "body",
+      "description": "Notification specifications.",
+      "required": true,
+      "schema": {
+        "$ref": "#/definitions/NotificationDefinition"
+      },
+      "x-ms-parameter-location": "method"
+    },
+    "NotificationConfigParameter": {
+      "name": "properties",
+      "in": "body",
+      "description": "Notification configurations.",
+      "required": true,
+      "schema": {
+        "$ref": "#/definitions/NotificationConfig"
+      },
+      "x-ms-parameter-location": "method"
+    },
+    "NotificationIdParameter": {
+      "name": "notification_id",
+      "in": "path",
+      "description": "The id of the notification.",
+      "required": true,
+      "type": "string",
+      "format": "string",
+      "x-ms-parameter-location": "method"
+    },
+    "path_deployment_name": {
+      "name": "deployment_name",
+      "in": "path",
+      "required": true,
+      "description": "deployment name",
+      "type": "string",
+      "x-ms-parameter-location": "method"
+    },
+    "path_deployment_key": {
+      "name": "deployment_key",
+      "in": "path",
+      "required": true,
+      "description": "deployment key",
+      "type": "string",
+      "x-ms-parameter-location": "method"
+    },
+    "path_release_label": {
+      "name": "release_label",
+      "in": "path",
+      "required": true,
+      "description": "release label",
+      "type": "string",
+      "x-ms-parameter-location": "method"
     }
   },
   "securityDefinitions": {
@@ -11455,6 +12443,9 @@
     },
     {
       "name": "data"
+    },
+    {
+      "name": "codepush"
     }
   ]
 }
\ No newline at end of file
--
Working Copy 4.3.0

